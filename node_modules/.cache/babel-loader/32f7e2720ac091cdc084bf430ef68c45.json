{"ast":null,"code":"import _typeof from \"/home/imstaked/explorer/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport router from '@/router';\nimport { isObject } from '@core/utils/utils';\nimport { computed } from '@vue/composition-api';\n/**\n * Return which component to render based on it's data/context\n * @param {Object} item nav menu item\n */\n\nexport var resolveVerticalNavMenuItemComponent = function resolveVerticalNavMenuItemComponent(item) {\n  if (item.header) return 'vertical-nav-menu-header';\n  if (item.children) return 'vertical-nav-menu-group';\n  return 'vertical-nav-menu-link';\n};\n/**\n * Return which component to render based on it's data/context\n * @param {Object} item nav menu item\n */\n\nexport var resolveHorizontalNavMenuItemComponent = function resolveHorizontalNavMenuItemComponent(item) {\n  if (item.children) return 'horizontal-nav-menu-group';\n  return 'horizontal-nav-menu-link';\n};\n/**\n * Return route name for navigation link\n * If link is string then it will assume it is route-name\n * IF link is object it will resolve the object and will return the link\n * @param {Object, String} link navigation link object/string\n */\n\nexport var resolveNavDataRouteName = function resolveNavDataRouteName(link) {\n  if (isObject(link.route)) {\n    var _router$resolve = router.resolve(link.route),\n        route = _router$resolve.route;\n\n    return route.name;\n  }\n\n  return link.route;\n};\n/**\n * Check if nav-link is active\n * @param {Object} link nav-link object\n */\n\nexport var isNavLinkActive = function isNavLinkActive(link) {\n  // only select one active nav\n  if (link.route && link.route.name === 'dashboard' && link.title !== link.route.name) return false; // Matched routes array of current route\n\n  var matchedRoutes = router.currentRoute.matched; // Check if provided route matches route's matched route\n\n  var resolveRoutedName = resolveNavDataRouteName(link);\n  if (!resolveRoutedName) return false;\n  var chainCompare = true;\n\n  var p1 = _typeof(router.currentRoute.params);\n\n  var p2 = _typeof(link.route.params);\n\n  if (p1 === p2) {\n    chainCompare = router.currentRoute.params.chain === link.route.params.chain;\n  }\n\n  if (chainCompare) {\n    localStorage.setItem('selected_chain', link.route.params.chain);\n  }\n\n  return matchedRoutes.some(function (route) {\n    var actived = route.name === resolveRoutedName && chainCompare || route.meta.navActiveLink === resolveRoutedName;\n    return actived;\n  });\n};\n/**\n * Check if nav group is\n * @param {Array} children Group children\n */\n\nexport var isNavGroupActive = function isNavGroupActive(children) {\n  // Matched routes array of current route\n  var matchedRoutes = router.currentRoute.matched;\n  return children.some(function (child) {\n    // If child have children => It's group => Go deeper(recursive)\n    if (child.children) {\n      return isNavGroupActive(child.children);\n    } // else it's link => Check for matched Route\n\n\n    return isNavLinkActive(child, matchedRoutes);\n  });\n};\n/**\n * Return b-link props to use\n * @param {Object, String} item navigation routeName or route Object provided in navigation data\n */\n// prettier-ignore\n\nexport var navLinkProps = function navLinkProps(item) {\n  return computed(function () {\n    var props = {}; // If route is string => it assumes => Create route object from route name\n    // If route is not string => It assumes it's route object => returns route object\n\n    if (item.route) props.to = typeof item.route === 'string' ? {\n      name: item.route\n    } : item.route;else {\n      props.href = item.href;\n      props.target = '_blank';\n      props.rel = 'nofollow';\n    }\n    if (!props.target) props.target = item.target || null;\n    return props;\n  });\n};","map":{"version":3,"names":["router","isObject","computed","resolveVerticalNavMenuItemComponent","item","header","children","resolveHorizontalNavMenuItemComponent","resolveNavDataRouteName","link","route","resolve","name","isNavLinkActive","title","matchedRoutes","currentRoute","matched","resolveRoutedName","chainCompare","p1","params","p2","chain","localStorage","setItem","some","actived","meta","navActiveLink","isNavGroupActive","child","navLinkProps","props","to","href","target","rel"],"sources":["/home/imstaked/explorer/src/@core/layouts/utils.js"],"sourcesContent":["import router from '@/router'\nimport { isObject } from '@core/utils/utils'\nimport { computed } from '@vue/composition-api'\n\n/**\n * Return which component to render based on it's data/context\n * @param {Object} item nav menu item\n */\nexport const resolveVerticalNavMenuItemComponent = item => {\n  if (item.header) return 'vertical-nav-menu-header'\n  if (item.children) return 'vertical-nav-menu-group'\n  return 'vertical-nav-menu-link'\n}\n\n/**\n * Return which component to render based on it's data/context\n * @param {Object} item nav menu item\n */\nexport const resolveHorizontalNavMenuItemComponent = item => {\n  if (item.children) return 'horizontal-nav-menu-group'\n  return 'horizontal-nav-menu-link'\n}\n\n/**\n * Return route name for navigation link\n * If link is string then it will assume it is route-name\n * IF link is object it will resolve the object and will return the link\n * @param {Object, String} link navigation link object/string\n */\nexport const resolveNavDataRouteName = link => {\n  if (isObject(link.route)) {\n    const { route } = router.resolve(link.route)\n    return route.name\n  }\n  return link.route\n}\n\n/**\n * Check if nav-link is active\n * @param {Object} link nav-link object\n */\nexport const isNavLinkActive = link => {\n  // only select one active nav\n  if (link.route && link.route.name === 'dashboard' && link.title !== link.route.name) return false\n  // Matched routes array of current route\n  const matchedRoutes = router.currentRoute.matched\n\n  // Check if provided route matches route's matched route\n  const resolveRoutedName = resolveNavDataRouteName(link)\n\n  if (!resolveRoutedName) return false\n\n  let chainCompare = true\n  const p1 = typeof router.currentRoute.params\n  const p2 = typeof link.route.params\n  if (p1 === p2) {\n    chainCompare = router.currentRoute.params.chain === link.route.params.chain\n  }\n\n  if (chainCompare) {\n    localStorage.setItem('selected_chain', link.route.params.chain)\n  }\n\n  return matchedRoutes.some(route => {\n    const actived = (route.name === resolveRoutedName && chainCompare) || route.meta.navActiveLink === resolveRoutedName\n    return actived\n  })\n}\n\n/**\n * Check if nav group is\n * @param {Array} children Group children\n */\nexport const isNavGroupActive = children => {\n  // Matched routes array of current route\n  const matchedRoutes = router.currentRoute.matched\n\n  return children.some(child => {\n    // If child have children => It's group => Go deeper(recursive)\n    if (child.children) {\n      return isNavGroupActive(child.children)\n    }\n\n    // else it's link => Check for matched Route\n    return isNavLinkActive(child, matchedRoutes)\n  })\n}\n\n/**\n * Return b-link props to use\n * @param {Object, String} item navigation routeName or route Object provided in navigation data\n */\n// prettier-ignore\nexport const navLinkProps = item => computed(() => {\n  const props = {}\n\n  // If route is string => it assumes => Create route object from route name\n  // If route is not string => It assumes it's route object => returns route object\n  if (item.route) props.to = typeof item.route === 'string' ? { name: item.route } : item.route\n  else {\n    props.href = item.href\n    props.target = '_blank'\n    props.rel = 'nofollow'\n  }\n\n  if (!props.target) props.target = item.target || null\n\n  return props\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}