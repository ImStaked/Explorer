{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport navMenuItems from '@/navigation/vertical';\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar';\nimport { BLink, BImg } from 'bootstrap-vue';\nimport { provide, computed, ref } from '@vue/composition-api';\nimport useAppConfig from '@core/app-config/useAppConfig';\nimport { $themeConfig } from '@themeConfig';\nimport VerticalNavMenuItems from './components/vertical-nav-menu-items/VerticalNavMenuItems.vue';\nimport useVerticalNavMenu from './useVerticalNavMenu';\nexport default {\n  components: {\n    VuePerfectScrollbar: VuePerfectScrollbar,\n    VerticalNavMenuItems: VerticalNavMenuItems,\n    BLink: BLink,\n    BImg: BImg\n  },\n  props: {\n    isVerticalMenuActive: {\n      type: Boolean,\n      required: true\n    },\n    toggleVerticalMenuActive: {\n      type: Function,\n      required: true\n    }\n  },\n  setup: function setup(props) {\n    var _useVerticalNavMenu = useVerticalNavMenu(props),\n        isMouseHovered = _useVerticalNavMenu.isMouseHovered,\n        isVerticalMenuCollapsed = _useVerticalNavMenu.isVerticalMenuCollapsed,\n        collapseTogglerIcon = _useVerticalNavMenu.collapseTogglerIcon,\n        toggleCollapsed = _useVerticalNavMenu.toggleCollapsed,\n        updateMouseHovered = _useVerticalNavMenu.updateMouseHovered;\n\n    var _useAppConfig = useAppConfig(),\n        skin = _useAppConfig.skin; // Shadow bottom is UI specific and can be removed by user => It's not in `useVerticalNavMenu`\n\n\n    var shallShadowBottom = ref(false);\n    provide('isMouseHovered', isMouseHovered);\n    var perfectScrollbarSettings = {\n      maxScrollbarLength: 60,\n      wheelPropagation: false\n    };\n    var collapseTogglerIconFeather = computed(function () {\n      return collapseTogglerIcon.value === 'unpinned' ? 'CircleIcon' : 'DiscIcon';\n    }); // App Name\n\n    var _$themeConfig$app = $themeConfig.app,\n        appName = _$themeConfig$app.appName,\n        appLogoImage = _$themeConfig$app.appLogoImage;\n    return {\n      navMenuItems: navMenuItems,\n      perfectScrollbarSettings: perfectScrollbarSettings,\n      isVerticalMenuCollapsed: isVerticalMenuCollapsed,\n      collapseTogglerIcon: collapseTogglerIcon,\n      toggleCollapsed: toggleCollapsed,\n      isMouseHovered: isMouseHovered,\n      updateMouseHovered: updateMouseHovered,\n      collapseTogglerIconFeather: collapseTogglerIconFeather,\n      // Shadow Bottom\n      shallShadowBottom: shallShadowBottom,\n      // Skin\n      skin: skin,\n      // App Name\n      appName: appName,\n      appLogoImage: appLogoImage\n    };\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;EACAA;IACAC,wCADA;IAEAC,0CAFA;IAGAC,YAHA;IAIAC;EAJA,CADA;EAOAC;IACAC;MACAC,aADA;MAEAC;IAFA,CADA;IAKAC;MACAF,cADA;MAEAC;IAFA;EALA,CAPA;EAiBAE,KAjBA,iBAiBAL,KAjBA,EAiBA;IACA,0BAMAM,yBANA;IAAA,IACAC,cADA,uBACAA,cADA;IAAA,IAEAC,uBAFA,uBAEAA,uBAFA;IAAA,IAGAC,mBAHA,uBAGAA,mBAHA;IAAA,IAIAC,eAJA,uBAIAA,eAJA;IAAA,IAKAC,kBALA,uBAKAA,kBALA;;IAQA;IAAA,8BATA,CAWA;;;IACA;IAEAC;IAEA;MACAC,sBADA;MAEAC;IAFA;IAKA;MAAA;IAAA,GArBA,CAuBA;;IACA;IAAA;IAAA;IAEA;MACAC,0BADA;MAEAC,kDAFA;MAGAR,gDAHA;MAIAC,wCAJA;MAKAC,gCALA;MAMAH,8BANA;MAOAI,sCAPA;MAQAM,sDARA;MAUA;MACAC,oCAXA;MAaA;MACAC,UAdA;MAgBA;MACAC,gBAjBA;MAkBAC;IAlBA;EAoBA;AA/DA","names":["components","VuePerfectScrollbar","VerticalNavMenuItems","BLink","BImg","props","isVerticalMenuActive","type","required","toggleVerticalMenuActive","setup","useVerticalNavMenu","isMouseHovered","isVerticalMenuCollapsed","collapseTogglerIcon","toggleCollapsed","updateMouseHovered","provide","maxScrollbarLength","wheelPropagation","navMenuItems","perfectScrollbarSettings","collapseTogglerIconFeather","shallShadowBottom","skin","appName","appLogoImage"],"sourceRoot":"src/@core/layouts/layout-vertical/components/vertical-nav-menu","sources":["VerticalNavMenu.vue"],"sourcesContent":["<template>\n  <div\n    class=\"main-menu menu-fixed menu-accordion menu-shadow\"\n    :class=\"[\n      { 'expanded': !isVerticalMenuCollapsed || (isVerticalMenuCollapsed && isMouseHovered) },\n      skin === 'dark' ? 'menu-dark' : 'menu-light'\n    ]\"\n    @mouseenter=\"updateMouseHovered(true)\"\n    @mouseleave=\"updateMouseHovered(false)\"\n  >\n    <!-- main menu header-->\n    <div class=\"navbar-header expanded\">\n      <slot\n        name=\"header\"\n        :toggle-vertical-menu-active=\"toggleVerticalMenuActive\"\n        :toggle-collapsed=\"toggleCollapsed\"\n        :collapse-toggler-icon=\"collapseTogglerIcon\"\n      >\n        <ul class=\"nav navbar-nav flex-row\">\n\n          <!-- Logo & Text -->\n          <li class=\"nav-item mr-auto\">\n            <b-link\n              class=\"navbar-brand\"\n              to=\"/\"\n            >\n              <span class=\"brand-logo\">\n                <b-img\n                  :src=\"appLogoImage\"\n                  alt=\"logo\"\n                />\n              </span>\n              <h2 class=\"brand-text\">\n                {{ appName }}\n              </h2>\n            </b-link>\n          </li>\n\n          <!-- Toggler Button -->\n          <li class=\"nav-item nav-toggle\">\n            <b-link class=\"nav-link modern-nav-toggle\">\n              <feather-icon\n                icon=\"XIcon\"\n                size=\"20\"\n                class=\"d-block d-xl-none\"\n                @click=\"toggleVerticalMenuActive\"\n              />\n              <feather-icon\n                :icon=\"collapseTogglerIconFeather\"\n                size=\"20\"\n                class=\"d-none d-xl-block collapse-toggle-icon\"\n                @click=\"toggleCollapsed\"\n              />\n            </b-link>\n          </li>\n        </ul>\n      </slot>\n    </div>\n    <!-- / main menu header-->\n    <!-- main menu content-->\n    <vue-perfect-scrollbar\n      :settings=\"perfectScrollbarSettings\"\n      class=\"main-menu-content scroll-area\"\n      tagname=\"ul\"\n      @ps-scroll-y=\"evt => { shallShadowBottom = evt.srcElement.scrollTop > 0 }\"\n    >\n      <vertical-nav-menu-items\n        :items.sync=\"navMenuItems\"\n        class=\"navigation navigation-main\"\n      />\n    </vue-perfect-scrollbar>\n    <!-- /main menu content-->\n  </div>\n</template>\n\n<script>\nimport navMenuItems from '@/navigation/vertical'\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar'\nimport { BLink, BImg } from 'bootstrap-vue'\nimport { provide, computed, ref } from '@vue/composition-api'\nimport useAppConfig from '@core/app-config/useAppConfig'\nimport { $themeConfig } from '@themeConfig'\nimport VerticalNavMenuItems from './components/vertical-nav-menu-items/VerticalNavMenuItems.vue'\nimport useVerticalNavMenu from './useVerticalNavMenu'\n\nexport default {\n  components: {\n    VuePerfectScrollbar,\n    VerticalNavMenuItems,\n    BLink,\n    BImg,\n  },\n  props: {\n    isVerticalMenuActive: {\n      type: Boolean,\n      required: true,\n    },\n    toggleVerticalMenuActive: {\n      type: Function,\n      required: true,\n    },\n  },\n  setup(props) {\n    const {\n      isMouseHovered,\n      isVerticalMenuCollapsed,\n      collapseTogglerIcon,\n      toggleCollapsed,\n      updateMouseHovered,\n    } = useVerticalNavMenu(props)\n\n    const { skin } = useAppConfig()\n\n    // Shadow bottom is UI specific and can be removed by user => It's not in `useVerticalNavMenu`\n    const shallShadowBottom = ref(false)\n\n    provide('isMouseHovered', isMouseHovered)\n\n    const perfectScrollbarSettings = {\n      maxScrollbarLength: 60,\n      wheelPropagation: false,\n    }\n\n    const collapseTogglerIconFeather = computed(() => (collapseTogglerIcon.value === 'unpinned' ? 'CircleIcon' : 'DiscIcon'))\n\n    // App Name\n    const { appName, appLogoImage } = $themeConfig.app\n\n    return {\n      navMenuItems,\n      perfectScrollbarSettings,\n      isVerticalMenuCollapsed,\n      collapseTogglerIcon,\n      toggleCollapsed,\n      isMouseHovered,\n      updateMouseHovered,\n      collapseTogglerIconFeather,\n\n      // Shadow Bottom\n      shallShadowBottom,\n\n      // Skin\n      skin,\n\n      // App Name\n      appName,\n      appLogoImage,\n    }\n  },\n}\n</script>\n\n<style lang=\"scss\">\n@import \"~@core/scss/base/core/menu/menu-types/vertical-menu.scss\";\n</style>\n"]},"metadata":{},"sourceType":"module"}