{"ast":null,"code":"import _classCallCheck from \"/home/imstaked/explorer/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/imstaked/explorer/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { sha256 } from '@cosmjs/crypto';\nimport { fromBase64, toHex } from '@cosmjs/encoding';\nimport Token from './token';\n\nvar Tx = /*#__PURE__*/function () {\n  function Tx() {\n    _classCallCheck(this, Tx);\n\n    this.hash = '';\n    this.fee = [new Token()];\n    this.memo = '';\n    this.messages = [];\n    this.signatures = [];\n    this.time = null;\n  }\n\n  _createClass(Tx, [{\n    key: \"setHash\",\n    value: function setHash(raw) {\n      this.hash = toHex(sha256(fromBase64(raw))).toUpperCase();\n    }\n  }], [{\n    key: \"create\",\n    value: function create(element) {\n      var self = new Tx();\n      self.hash = '';\n      self.fee = element.authInfo.fee.amount;\n      self.memo = element.body.memo;\n      self.messages = element.body.messages;\n      self.signatures = element.signatures;\n      return self;\n    }\n  }]);\n\n  return Tx;\n}();\n\nexport { Tx as default };","map":{"version":3,"names":["sha256","fromBase64","toHex","Token","Tx","hash","fee","memo","messages","signatures","time","raw","toUpperCase","element","self","authInfo","amount","body"],"sources":["/home/imstaked/explorer/src/libs/data/tx.js"],"sourcesContent":["import { sha256 } from '@cosmjs/crypto'\nimport { fromBase64, toHex } from '@cosmjs/encoding'\nimport Token from './token'\n\nexport default class Tx {\n  constructor() {\n    this.hash = ''\n    this.fee = [new Token()]\n    this.memo = ''\n    this.messages = []\n    this.signatures = []\n    this.time = null\n  }\n\n  static create(element) {\n    const self = new Tx()\n    self.hash = ''\n    self.fee = element.authInfo.fee.amount\n    self.memo = element.body.memo\n    self.messages = element.body.messages\n    self.signatures = element.signatures\n    return self\n  }\n\n  setHash(raw) {\n    this.hash = toHex(sha256(fromBase64(raw))).toUpperCase()\n  }\n}\n"],"mappings":";;AAAA,SAASA,MAAT,QAAuB,gBAAvB;AACA,SAASC,UAAT,EAAqBC,KAArB,QAAkC,kBAAlC;AACA,OAAOC,KAAP,MAAkB,SAAlB;;IAEqBC,E;EACnB,cAAc;IAAA;;IACZ,KAAKC,IAAL,GAAY,EAAZ;IACA,KAAKC,GAAL,GAAW,CAAC,IAAIH,KAAJ,EAAD,CAAX;IACA,KAAKI,IAAL,GAAY,EAAZ;IACA,KAAKC,QAAL,GAAgB,EAAhB;IACA,KAAKC,UAAL,GAAkB,EAAlB;IACA,KAAKC,IAAL,GAAY,IAAZ;EACD;;;;WAYD,iBAAQC,GAAR,EAAa;MACX,KAAKN,IAAL,GAAYH,KAAK,CAACF,MAAM,CAACC,UAAU,CAACU,GAAD,CAAX,CAAP,CAAL,CAA+BC,WAA/B,EAAZ;IACD;;;WAZD,gBAAcC,OAAd,EAAuB;MACrB,IAAMC,IAAI,GAAG,IAAIV,EAAJ,EAAb;MACAU,IAAI,CAACT,IAAL,GAAY,EAAZ;MACAS,IAAI,CAACR,GAAL,GAAWO,OAAO,CAACE,QAAR,CAAiBT,GAAjB,CAAqBU,MAAhC;MACAF,IAAI,CAACP,IAAL,GAAYM,OAAO,CAACI,IAAR,CAAaV,IAAzB;MACAO,IAAI,CAACN,QAAL,GAAgBK,OAAO,CAACI,IAAR,CAAaT,QAA7B;MACAM,IAAI,CAACL,UAAL,GAAkBI,OAAO,CAACJ,UAA1B;MACA,OAAOK,IAAP;IACD;;;;;;SAlBkBV,E"},"metadata":{},"sourceType":"module"}