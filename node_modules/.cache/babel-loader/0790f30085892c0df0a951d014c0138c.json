{"ast":null,"code":"import _typeof from \"/home/imstaked/explorer/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.object.entries.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.array.flat.js\";\nimport \"core-js/modules/es.array.unscopables.flat.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.string.replace-all.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { BRow, BCol, BAlert, BCard, BTable, BFormCheckbox, BCardHeader, BCardTitle, BMedia, BMediaAside, BMediaBody, BAvatar, BCardBody, BLink, BButtonGroup, BButton, BTooltip, VBModal, VBTooltip, BCardFooter } from 'bootstrap-vue';\nimport { formatNumber, formatTokenAmount, isToken, percent, timeIn, toDay, toDuration, tokenFormatter, getLocalAccounts, getStakingValidatorOperator } from '@/libs/utils';\nimport OperationModal from '@/views/components/OperationModal/index.vue';\nimport Ripple from 'vue-ripple-directive';\nimport dayjs from 'dayjs';\nimport ParametersModuleComponent from './components/parameters/ParametersModuleComponent.vue';\nimport DashboardCardHorizontal from './components/dashboard/DashboardCardHorizontal.vue';\nimport DashboardCardVertical from './components/dashboard/DashboardCardVertical.vue';\nimport DashboardPriceChart2 from './components/dashboard/DashboardPriceChart2.vue';\nimport FeatherIcon from '../@core/components/feather-icon/FeatherIcon.vue';\nexport default {\n  components: {\n    BAvatar: BAvatar,\n    BButtonGroup: BButtonGroup,\n    BTooltip: BTooltip,\n    BButton: BButton,\n    BRow: BRow,\n    BCol: BCol,\n    BAlert: BAlert,\n    BCard: BCard,\n    BTable: BTable,\n    BFormCheckbox: BFormCheckbox,\n    BCardHeader: BCardHeader,\n    BCardTitle: BCardTitle,\n    BMediaBody: BMediaBody,\n    BMediaAside: BMediaAside,\n    BMedia: BMedia,\n    BCardBody: BCardBody,\n    BLink: BLink,\n    BCardFooter: BCardFooter,\n    OperationModal: OperationModal,\n    ParametersModuleComponent: ParametersModuleComponent,\n    DashboardCardHorizontal: DashboardCardHorizontal,\n    DashboardPriceChart2: DashboardPriceChart2,\n    DashboardCardVertical: DashboardCardVertical,\n    FeatherIcon: FeatherIcon\n  },\n  directives: {\n    'b-modal': VBModal,\n    'b-tooltip': VBTooltip,\n    Ripple: Ripple\n  },\n  data: function data() {\n    return {\n      fields: ['validator', 'delegation', 'rewards', 'action'],\n      delegations: [],\n      rewards: [],\n      unbonding: [],\n      chain: this.$store.state.chains.selected.chain_name,\n      syncing: false,\n      latestTime: '',\n      marketData: null,\n      height: '-',\n      supply: '-',\n      bonded: '-',\n      validators: '-',\n      communityPool: '-',\n      ratio: '-',\n      inflation: '-',\n      proposals: [],\n      myVotes: {},\n      selectedValidator: '',\n      selectedProposalId: 0,\n      selectedTitle: '',\n      operationModalType: '',\n      voteColors: {\n        YES: 'success',\n        NO: 'warning',\n        ABSTAIN: 'info',\n        NO_WITH_VETO: 'danger'\n      },\n      walletBalances: '-',\n      walletStaking: '-',\n      walletRewards: '-',\n      walletUnbonding: '-',\n      address: null\n    };\n  },\n  computed: {\n    walletName: function walletName() {\n      var _this$$store,\n          _this$$store$state,\n          _this$$store$state$ch,\n          _this = this;\n\n      var key = (_this$$store = this.$store) === null || _this$$store === void 0 ? void 0 : (_this$$store$state = _this$$store.state) === null || _this$$store$state === void 0 ? void 0 : (_this$$store$state$ch = _this$$store$state.chains) === null || _this$$store$state$ch === void 0 ? void 0 : _this$$store$state$ch.defaultWallet;\n\n      if (key) {\n        var accounts = getLocalAccounts() || {};\n        var account = Object.entries(accounts).map(function (v) {\n          return {\n            wallet: v[0],\n            address: v[1].address.find(function (x) {\n              return x.chain === _this.$store.state.chains.selected.chain_name;\n            })\n          };\n        }).filter(function (v) {\n          return v.address;\n        }).find(function (x) {\n          return x.wallet === key;\n        });\n\n        if (account) {\n          this.fetchAccount(account.address.addr);\n        }\n      }\n\n      return key || 'Wallet';\n    },\n    proprosals2: function proprosals2() {\n      return this.proposals;\n    },\n    stakingList: function stakingList() {\n      var _this2 = this;\n\n      return this.delegations.map(function (x) {\n        var rewards = _this2.rewards.find(function (r) {\n          return r.validator_address === x.delegation.validator_address;\n        });\n\n        return {\n          valAddress: x.delegation.validator_address,\n          validator: getStakingValidatorOperator(_this2.$store.state.chains.selected.chain_name, x.delegation.validator_address),\n          delegation: _this2.formatToken([x.balance]),\n          rewards: rewards ? _this2.formatToken(rewards.reward) : '',\n          action: ''\n        };\n      });\n    }\n  },\n  created: function created() {\n    var _this3 = this;\n\n    this.$http.getGovernanceListByStatus(2).then(function (res) {\n      _this3.proposals = res.proposals;\n    });\n    this.$http.getLatestBlock().then(function (res) {\n      _this3.height = res.block.header.height;\n\n      if (timeIn(res.block.header.time, 3, 'm')) {\n        _this3.syncing = true;\n      } else {\n        _this3.syncing = false;\n      }\n\n      _this3.latestTime = toDay(res.block.header.time, 'long');\n      _this3.validators = res.block.last_commit.signatures.length;\n    });\n    this.$http.getStakingParameters().then(function (res) {\n      Promise.all([_this3.$http.getStakingPool(), _this3.$http.getBankTotal(res.bond_denom)]).then(function (pool) {\n        _this3.supply = \"\".concat(formatNumber(formatTokenAmount(pool[1].amount, 2, res.bond_denom, false), true, 2));\n        _this3.bonded = \"\".concat(formatNumber(formatTokenAmount(pool[0].bondedToken, 2, res.bond_denom, false), true, 2));\n        _this3.ratio = \"\".concat(percent(pool[0].bondedToken / pool[1].amount), \"%\");\n      });\n    });\n    this.$http.getCommunityPool().then(function (res) {\n      _this3.communityPool = _this3.formatToken(res.pool);\n    });\n    var conf = this.$http.getSelectedConfig();\n\n    if (conf.excludes && conf.excludes.indexOf('mint') > -1) {\n      this.inflation = '-';\n    } else {\n      this.$http.getMintingInflation().then(function (res) {\n        _this3.inflation = \"\".concat(percent(res), \"%\");\n      }).catch(function () {\n        _this3.inflation = '-';\n      });\n    }\n  },\n  methods: {\n    selectProposal: function selectProposal(modal, pid, title) {\n      this.operationModalType = modal;\n      this.selectedProposalId = Number(pid);\n      this.selectedTitle = title;\n    },\n    selectDelegation: function selectDelegation(v, type) {\n      this.selectedValidator = v.item.valAddress;\n      this.operationModalType = type;\n    },\n    selectSend: function selectSend() {\n      this.operationModalType = 'Transfer';\n    },\n    selectWithdraw: function selectWithdraw() {\n      this.operationModalType = 'Withdraw';\n    },\n    formatToken: function formatToken(tokens) {\n      if (Array.isArray(tokens)) {\n        var nativeToken = tokens.filter(function (x) {\n          return x.denom.length < 11;\n        });\n\n        if (tokens.length > 1) {\n          var sum = {};\n          var reduce = nativeToken.reduce(function (b, a) {\n            var b2 = b;\n\n            if (b2[a.denom]) {\n              b2[a.denom] += Number(a.amount);\n            } else {\n              b2[a.denom] = Number(a.amount);\n            }\n\n            return b2;\n          }, sum);\n          nativeToken = Object.keys(reduce).map(function (k) {\n            return {\n              denom: k,\n              amount: reduce[k]\n            };\n          });\n        }\n\n        return tokenFormatter(nativeToken, {}, 0);\n      }\n\n      return '-';\n    },\n    fetchAccount: function fetchAccount(address) {\n      var _this4 = this;\n\n      this.address = address;\n      this.$http.getBankAccountBalance(address).then(function (bal) {\n        _this4.walletBalances = _this4.formatToken(bal);\n      });\n      this.$http.getStakingReward(address).then(function (res) {\n        _this4.rewards = res.rewards;\n        _this4.walletRewards = _this4.formatToken(res.rewards.map(function (x) {\n          return x.reward;\n        }).flat());\n      });\n      this.$http.getStakingDelegations(address).then(function (res) {\n        var delegations = res.delegation_responses || res;\n        _this4.delegations = delegations;\n        _this4.walletStaking = _this4.formatToken(delegations.map(function (x) {\n          return x.balance;\n        }).flat());\n      });\n      this.$http.getStakingUnbonding(address).then(function (res) {\n        var token = _this4.$store.state.chains.selected.assets[0];\n\n        if (token) {\n          var newTokens = [];\n          var denom = token.base;\n          var unbonding = res.unbonding_responses || res;\n          _this4.unbonding = unbonding;\n          unbonding.forEach(function (x) {\n            x.entries.forEach(function (y) {\n              newTokens.push({\n                amount: y.balance,\n                denom: denom\n              });\n            });\n          });\n\n          if (newTokens.length > 0) {\n            _this4.walletUnbonding = _this4.formatToken(newTokens);\n          }\n        }\n      });\n      this.proposals.forEach(function (x) {\n        _this4.$http.getGovernanceProposalVote(x.id, address, null).then(function (v) {\n          _this4.myVotes[x.id] = _this4.formatVoteOption(v.vote.option);\n        }).catch(function () {\n          _this4.myVotes[x.id] = null;\n        });\n      });\n    },\n    formatVoteOption: function formatVoteOption(v) {\n      return v.replaceAll('VOTE_OPTION_', '');\n    },\n    formatEnding: function formatEnding(v) {\n      return toDay(v, 'from');\n    },\n    formatType: function formatType(v) {\n      var txt = String(v).replace('Proposal', '');\n      var index = txt.lastIndexOf('.');\n      return index > 0 ? txt.substring(index + 1) : txt;\n    },\n    normalize: function normalize(data, title) {\n      if (!data) return null;\n      var items = this.makeItems(data);\n      return {\n        title: title,\n        items: items\n      };\n    },\n    makeItems: function makeItems(data) {\n      var _this5 = this;\n\n      return Object.keys(data).map(function (k) {\n        if (isToken(data[k])) {\n          return {\n            title: tokenFormatter(data[k]),\n            subtitle: k\n          };\n        }\n\n        if (typeof data[k] === 'boolean') {\n          return {\n            title: data[k],\n            subtitle: k\n          };\n        }\n\n        return {\n          title: _this5.convert(data[k]),\n          subtitle: k\n        };\n      });\n    },\n    formatDate: function formatDate(v) {\n      return dayjs(v).format('YYYY-MM-DD HH:mm:ss');\n    },\n    convert: function convert(v) {\n      var _this6 = this;\n\n      if (_typeof(v) === 'object') {\n        var v2 = {};\n        Object.entries(v).forEach(function (e) {\n          var k = e[0];\n          var x = e[1];\n          v2[k] = _this6.convert(x);\n        });\n        return v2;\n      }\n\n      var d = parseFloat(v);\n      if (d === 0) return '0';\n\n      if (d < 1.01) {\n        return \"\".concat(percent(d), \"%\");\n      }\n\n      if (d > 1000000000) {\n        return \"\".concat(toDuration(d / 1000000));\n      }\n\n      if (d > 0) {\n        return d.toFixed();\n      }\n\n      return v;\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["BRow","BCol","BAlert","BCard","BTable","BFormCheckbox","BCardHeader","BCardTitle","BMedia","BMediaAside","BMediaBody","BAvatar","BCardBody","BLink","BButtonGroup","BButton","BTooltip","VBModal","VBTooltip","BCardFooter","formatNumber","formatTokenAmount","isToken","percent","timeIn","toDay","toDuration","tokenFormatter","getLocalAccounts","getStakingValidatorOperator","components","OperationModal","ParametersModuleComponent","DashboardCardHorizontal","DashboardPriceChart2","DashboardCardVertical","FeatherIcon","directives","Ripple","data","fields","delegations","rewards","unbonding","chain","syncing","latestTime","marketData","height","supply","bonded","validators","communityPool","ratio","inflation","proposals","myVotes","selectedValidator","selectedProposalId","selectedTitle","operationModalType","voteColors","YES","NO","ABSTAIN","NO_WITH_VETO","walletBalances","walletStaking","walletRewards","walletUnbonding","address","computed","walletName","map","wallet","filter","find","proprosals2","stakingList","valAddress","validator","delegation","action","created","Promise","then","catch","methods","selectProposal","modal","pid","title","selectDelegation","v","type","selectSend","selectWithdraw","formatToken","tokens","b2","sum","nativeToken","denom","amount","fetchAccount","x","newTokens","formatVoteOption","formatEnding","formatType","normalize","items","makeItems","subtitle","formatDate","convert","Object","v2"],"sourceRoot":"src/views","sources":["Dashboard.vue"],"sourcesContent":["<template>\n  <div>\n    <b-alert\n      variant=\"danger\"\n      :show=\"syncing\"\n    >\n      <div class=\"alert-body\">\n        <span>No new blocks have been produced since  <strong>{{ latestTime }}</strong> </span>\n      </div>\n    </b-alert>\n\n    <b-row>\n      <b-col><dashboard-price-chart-2 /></b-col>\n    </b-row>\n    <!-- Stats Card Vertical -->\n    <b-row class=\"match-height\">\n      <b-col\n        xl=\"2\"\n        md=\"4\"\n        sm=\"6\"\n      >\n        <dashboard-card-vertical\n          icon=\"BoxIcon\"\n          :statistic=\"height\"\n          statistic-title=\"Height\"\n          color=\"info\"\n        />\n      </b-col>\n      <b-col\n        xl=\"2\"\n        md=\"4\"\n        sm=\"6\"\n      >\n        <dashboard-card-vertical\n          color=\"warning\"\n          icon=\"DollarSignIcon\"\n          :statistic=\"supply\"\n          statistic-title=\"Total Supply\"\n        />\n      </b-col>\n      <b-col\n        xl=\"2\"\n        md=\"4\"\n        sm=\"6\"\n      >\n        <dashboard-card-vertical\n          color=\"danger\"\n          icon=\"PercentIcon\"\n          :statistic=\"ratio\"\n          :statistic-title=\"`Bonded: ${bonded}`\"\n        />\n      </b-col>\n      <b-col\n        xl=\"2\"\n        md=\"4\"\n        sm=\"6\"\n      >\n        <dashboard-card-vertical\n          color=\"primary\"\n          icon=\"TrendingUpIcon\"\n          :statistic=\"inflation\"\n          statistic-title=\"Inflation\"\n        />\n      </b-col>\n      <b-col\n        xl=\"2\"\n        md=\"4\"\n        sm=\"6\"\n      >\n        <dashboard-card-vertical\n          color=\"success\"\n          icon=\"AwardIcon\"\n          :statistic=\"communityPool\"\n          statistic-title=\"Community Pool\"\n        />\n      </b-col>\n      <b-col\n        xl=\"2\"\n        md=\"4\"\n        sm=\"6\"\n      >\n        <dashboard-card-vertical\n          hide-chart\n          color=\"danger\"\n          icon=\"UserCheckIcon\"\n          :statistic=\"validators\"\n          statistic-title=\"Active Validators\"\n        />\n      </b-col>\n    </b-row>\n    <b-card no-body>\n      <b-card-header>\n        <b-card-title>Active Proposals</b-card-title>\n      </b-card-header>\n      <b-card-body>\n        <b-media\n          v-for=\"prop in proprosals2\"\n          :key=\"prop.id\"\n          no-body\n          class=\"mb-1\"\n        >\n          <b-media-aside\n            v-b-modal.operation-modal\n            @click=\"selectProposal('Vote',prop.id, prop.title)\"\n          >\n            <b-avatar\n              rounded\n              size=\"42\"\n              :variant=\"myVotes[prop.id] ? 'light-primary': 'primary'\"\n            >\n              {{ myVotes[prop.id] || 'Vote' }}\n            </b-avatar>\n          </b-media-aside>\n          <b-link :to=\"`./${chain}/gov/${prop.id}`\">\n            <b-media-body class=\"d-flex flex-column justify-content-center\">\n              <h6 class=\"transaction-title\">\n                {{ prop.id }}. {{ prop.title }}\n              </h6>\n              <small>{{ formatType(prop.contents['@type']) }}  {{ formatEnding(prop.voting_end_time) }}</small>\n            </b-media-body>\n          </b-link>\n        </b-media>\n        <div v-if=\"proprosals2.length === 0\">\n          No active proposal!\n          <b-link :to=\"`./${chain}/gov`\">\n            Browse all\n          </b-link>\n        </div>\n      </b-card-body>\n    </b-card>\n    <b-card\n      border-variant=\"primary\"\n      bg-variant=\"transparent\"\n      class=\"shadow-none\"\n    >\n      <b-card-title class=\"d-flex justify-content-between\">\n        <span>{{ walletName }} Assets </span>\n        <small>\n          <b-link\n            v-if=\"address\"\n            :to=\"`./${chain}/account/${address}`\"\n          >\n            More\n          </b-link>\n          <b-link\n            v-else\n            :to=\"`/wallet/accounts`\"\n          >\n            Not connected?\n          </b-link>\n        </small>\n      </b-card-title>\n      <b-row>\n        <b-col\n          lg=\"3\"\n          sm=\"6\"\n        >\n          <dashboard-card-horizontal\n            icon=\"DollarSignIcon\"\n            color=\"success\"\n            :statistic=\"walletBalances\"\n            statistic-title=\"Balances\"\n          />\n        </b-col>\n        <b-col\n          lg=\"3\"\n          sm=\"6\"\n        >\n          <dashboard-card-horizontal\n            icon=\"LockIcon\"\n            :statistic=\"walletStaking\"\n            statistic-title=\"Staking\"\n          />\n        </b-col>\n        <b-col\n          lg=\"3\"\n          sm=\"6\"\n        >\n          <dashboard-card-horizontal\n            icon=\"ArrowUpCircleIcon\"\n            color=\"info\"\n            :statistic=\"walletRewards\"\n            statistic-title=\"Rewards\"\n          />\n        </b-col>\n        <b-col\n          lg=\"3\"\n          sm=\"6\"\n        >\n          <dashboard-card-horizontal\n            icon=\"UnlockIcon\"\n            color=\"danger\"\n\n            :statistic=\"walletUnbonding\"\n            statistic-title=\"Unbonding\"\n          />\n        </b-col>\n      </b-row>\n      <b-row v-if=\"stakingList && stakingList.length > 0\">\n        <b-col>\n          <b-card no-body>\n            <b-table\n              :items=\"stakingList\"\n              :fields=\"fields\"\n              striped\n              hover\n              responsive=\"sm\"\n              stacked=\"sm\"\n            >\n              <template #cell(action)=\"data\">\n                <!-- size -->\n                <b-button-group\n                  size=\"sm\"\n                >\n                  <b-button\n                    v-b-modal.operation-modal\n                    v-ripple.400=\"'rgba(113, 102, 240, 0.15)'\"\n                    v-b-tooltip.hover.top=\"'Delegate'\"\n                    variant=\"outline-primary\"\n                    @click=\"selectDelegation(data,'Delegate')\"\n                  >\n                    <feather-icon icon=\"LogInIcon\" />\n                  </b-button>\n                  <b-button\n                    v-b-modal.operation-modal\n                    v-ripple.400=\"'rgba(113, 102, 240, 0.15)'\"\n                    v-b-tooltip.hover.top=\"'Redelegate'\"\n                    variant=\"outline-primary\"\n                    @click=\"selectDelegation(data,'Redelegate')\"\n                  >\n                    <feather-icon icon=\"ShuffleIcon\" />\n                  </b-button>\n                  <b-button\n                    v-b-modal.operation-modal\n                    v-ripple.400=\"'rgba(113, 102, 240, 0.15)'\"\n                    v-b-tooltip.hover.top=\"'Unbond'\"\n                    variant=\"outline-primary\"\n                    @click=\"selectDelegation(data,'Unbond')\"\n                  >\n                    <feather-icon icon=\"LogOutIcon\" />\n                  </b-button>\n                </b-button-group>\n              </template>\n            </b-table>\n            <b-card-footer class=\"text-right\">\n              <b-button\n                v-b-modal.operation-modal\n                variant=\"outline-primary\"\n                @click=\"selectWithdraw()\"\n              >\n                <feather-icon icon=\"AwardIcon\" />\n                Widthdraw Rewards\n              </b-button>\n            </b-card-footer>\n          </b-card>\n        </b-col>\n      </b-row>\n\n      <b-row v-if=\"unbonding && unbonding.length > 0\">\n        <b-col>\n          <b-card>\n            <b-card-header class=\"pt-0 pl-0 pr-0\">\n              <b-card-title>Unbonding Tokens</b-card-title>\n            </b-card-header>\n            <b-card-body class=\"pl-0 pr-0\">\n              <b-row\n                v-for=\"item in unbonding\"\n                :key=\"item.validator_address\"\n              >\n                <b-col cols=\"12\">\n                  <span class=\"font-weight-bolder\">From: <router-link :to=\"`../staking/${item.validator_address}`\">{{ item.validator_address }}</router-link></span>\n                </b-col>\n                <b-col cols=\"12\">\n                  <b-table\n                    :items=\"item.entries\"\n                    class=\"mt-1\"\n                    striped\n                    hover\n                    responsive=\"sm\"\n                    stacked=\"sm\"\n                  >\n                    <template #cell(completion_time)=\"data\">\n                      {{ formatDate(data.item.completion_time) }}\n                    </template>\n                    <template #cell(initial_balance)=\"data\">\n                      {{ data.item.initial_balance }}\n                    </template>\n                    <template #cell(balance)=\"data\">\n                      {{ data.item.balance }}\n                    </template>\n                  </b-table>\n                </b-col>\n              </b-row>\n            </b-card-body>\n          </b-card>\n        </b-col>\n      </b-row>\n      <b-row\n        v-if=\"address\"\n        class=\"mt-1\"\n      >\n        <b-col cols=\"6\">\n          <b-button\n            v-b-modal.operation-modal\n            block\n            variant=\"success\"\n            @click=\"selectSend()\"\n          >\n            <feather-icon icon=\"SendIcon\" />\n            Send\n          </b-button>\n        </b-col>\n        <b-col cols=\"6\">\n          <b-button\n            block\n            variant=\"info\"\n            :to=\"`${chain}/account/${address}/receive`\"\n          >\n            <feather-icon\n              icon=\"PlusCircleIcon\"\n            />\n            Receive\n          </b-button>\n        </b-col>\n      </b-row>\n    </b-card>\n    <router-link to=\"/wallet/import\">\n      <b-card class=\"addzone text-center\">\n        <feather-icon icon=\"PlusIcon\" />\n        Connect Wallet\n      </b-card>\n    </router-link>\n    <operation-modal\n      :address=\"address\"\n      :validator-address=\"selectedValidator\"\n      :type=\"operationModalType\"\n      :proposal-id=\"selectedProposalId\"\n      :proposal-title=\"selectedTitle\"\n    />\n  </div>\n</template>\n\n<script>\nimport {\n  BRow, BCol, BAlert, BCard, BTable, BFormCheckbox, BCardHeader, BCardTitle, BMedia, BMediaAside, BMediaBody, BAvatar,\n  BCardBody, BLink, BButtonGroup, BButton, BTooltip, VBModal, VBTooltip, BCardFooter,\n} from 'bootstrap-vue'\nimport {\n  formatNumber, formatTokenAmount, isToken, percent, timeIn, toDay, toDuration, tokenFormatter, getLocalAccounts,\n  getStakingValidatorOperator,\n} from '@/libs/utils'\nimport OperationModal from '@/views/components/OperationModal/index.vue'\nimport Ripple from 'vue-ripple-directive'\nimport dayjs from 'dayjs'\nimport ParametersModuleComponent from './components/parameters/ParametersModuleComponent.vue'\nimport DashboardCardHorizontal from './components/dashboard/DashboardCardHorizontal.vue'\nimport DashboardCardVertical from './components/dashboard/DashboardCardVertical.vue'\nimport DashboardPriceChart2 from './components/dashboard/DashboardPriceChart2.vue'\nimport FeatherIcon from '../@core/components/feather-icon/FeatherIcon.vue'\n\nexport default {\n  components: {\n    BAvatar,\n    BButtonGroup,\n    BTooltip,\n    BButton,\n    BRow,\n    BCol,\n    BAlert,\n    BCard,\n    BTable,\n    BFormCheckbox,\n    BCardHeader,\n    BCardTitle,\n    BMediaBody,\n    BMediaAside,\n    BMedia,\n    BCardBody,\n    BLink,\n    BCardFooter,\n\n    OperationModal,\n    ParametersModuleComponent,\n    DashboardCardHorizontal,\n    DashboardPriceChart2,\n    DashboardCardVertical,\n    FeatherIcon,\n  },\n  directives: {\n    'b-modal': VBModal,\n    'b-tooltip': VBTooltip,\n    Ripple,\n  },\n  data() {\n    return {\n      fields: ['validator', 'delegation', 'rewards', 'action'],\n      delegations: [],\n      rewards: [],\n      unbonding: [],\n      chain: this.$store.state.chains.selected.chain_name,\n      syncing: false,\n      latestTime: '',\n      marketData: null,\n      height: '-',\n      supply: '-',\n      bonded: '-',\n      validators: '-',\n      communityPool: '-',\n      ratio: '-',\n      inflation: '-',\n      proposals: [],\n      myVotes: {},\n      selectedValidator: '',\n      selectedProposalId: 0,\n      selectedTitle: '',\n      operationModalType: '',\n      voteColors: {\n        YES: 'success',\n        NO: 'warning',\n        ABSTAIN: 'info',\n        NO_WITH_VETO: 'danger',\n      },\n\n      walletBalances: '-',\n      walletStaking: '-',\n      walletRewards: '-',\n      walletUnbonding: '-',\n      address: null,\n\n    }\n  },\n  computed: {\n    walletName() {\n      const key = this.$store?.state?.chains?.defaultWallet\n      if (key) {\n        const accounts = getLocalAccounts() || {}\n        const account = Object.entries(accounts)\n          .map(v => ({ wallet: v[0], address: v[1].address.find(x => x.chain === this.$store.state.chains.selected.chain_name) }))\n          .filter(v => v.address)\n          .find(x => x.wallet === key)\n        if (account) {\n          this.fetchAccount(account.address.addr)\n        }\n      }\n      return key || 'Wallet'\n    },\n    proprosals2() {\n      return this.proposals\n    },\n    stakingList() {\n      return this.delegations.map(x => {\n        const rewards = this.rewards.find(r => r.validator_address === x.delegation.validator_address)\n        return {\n          valAddress: x.delegation.validator_address,\n          validator: getStakingValidatorOperator(this.$store.state.chains.selected.chain_name, x.delegation.validator_address),\n          delegation: this.formatToken([x.balance]),\n          rewards: rewards ? this.formatToken(rewards.reward) : '',\n          action: '',\n        }\n      })\n    },\n  },\n  created() {\n    this.$http.getGovernanceListByStatus(2).then(res => {\n      this.proposals = res.proposals\n    })\n    this.$http.getLatestBlock().then(res => {\n      this.height = res.block.header.height\n      if (timeIn(res.block.header.time, 3, 'm')) {\n        this.syncing = true\n      } else {\n        this.syncing = false\n      }\n      this.latestTime = toDay(res.block.header.time, 'long')\n      this.validators = res.block.last_commit.signatures.length\n    })\n\n    this.$http.getStakingParameters().then(res => {\n      Promise.all([this.$http.getStakingPool(), this.$http.getBankTotal(res.bond_denom)])\n        .then(pool => {\n          this.supply = `${formatNumber(formatTokenAmount(pool[1].amount, 2, res.bond_denom, false), true, 2)}`\n          this.bonded = `${formatNumber(formatTokenAmount(pool[0].bondedToken, 2, res.bond_denom, false), true, 2)}`\n          this.ratio = `${percent(pool[0].bondedToken / pool[1].amount)}%`\n        })\n    })\n\n    this.$http.getCommunityPool().then(res => {\n      this.communityPool = this.formatToken(res.pool)\n    })\n\n    const conf = this.$http.getSelectedConfig()\n    if (conf.excludes && conf.excludes.indexOf('mint') > -1) {\n      this.inflation = '-'\n    } else {\n      this.$http.getMintingInflation().then(res => {\n        this.inflation = `${percent(res)}%`\n      }).catch(() => {\n        this.inflation = '-'\n      })\n    }\n  },\n  methods: {\n    selectProposal(modal, pid, title) {\n      this.operationModalType = modal\n      this.selectedProposalId = Number(pid)\n      this.selectedTitle = title\n    },\n    selectDelegation(v, type) {\n      this.selectedValidator = v.item.valAddress\n      this.operationModalType = type\n    },\n    selectSend() {\n      this.operationModalType = 'Transfer'\n    },\n    selectWithdraw() {\n      this.operationModalType = 'Withdraw'\n    },\n    formatToken(tokens) {\n      if (Array.isArray(tokens)) {\n        let nativeToken = tokens.filter(x => x.denom.length < 11)\n        if (tokens.length > 1) {\n          const sum = {}\n          const reduce = nativeToken.reduce((b, a) => {\n            const b2 = b\n            if (b2[a.denom]) {\n              b2[a.denom] += Number(a.amount)\n            } else {\n              b2[a.denom] = Number(a.amount)\n            }\n            return b2\n          }, sum)\n          nativeToken = Object.keys(reduce).map(k => ({ denom: k, amount: reduce[k] }))\n        }\n        return tokenFormatter(nativeToken, {}, 0)\n      }\n      return '-'\n    },\n    fetchAccount(address) {\n      this.address = address\n      this.$http.getBankAccountBalance(address).then(bal => {\n        this.walletBalances = this.formatToken(bal)\n      })\n      this.$http.getStakingReward(address).then(res => {\n        this.rewards = res.rewards\n        this.walletRewards = this.formatToken(res.rewards.map(x => x.reward).flat())\n      })\n      this.$http.getStakingDelegations(address).then(res => {\n        const delegations = res.delegation_responses || res\n        this.delegations = delegations\n        this.walletStaking = this.formatToken(delegations.map(x => x.balance).flat())\n      })\n      this.$http.getStakingUnbonding(address).then(res => {\n        const token = this.$store.state.chains.selected.assets[0]\n        if (token) {\n          const newTokens = []\n          const denom = token.base\n          const unbonding = res.unbonding_responses || res\n          this.unbonding = unbonding\n          unbonding.forEach(x => {\n            x.entries.forEach(y => {\n              newTokens.push({\n                amount: y.balance,\n                denom,\n              })\n            })\n          })\n          if (newTokens.length > 0) {\n            this.walletUnbonding = this.formatToken(newTokens)\n          }\n        }\n      })\n      this.proposals.forEach(x => {\n        this.$http.getGovernanceProposalVote(x.id, address, null)\n          .then(v => {\n            this.myVotes[x.id] = this.formatVoteOption(v.vote.option)\n          })\n          .catch(() => {\n            this.myVotes[x.id] = null\n          })\n      })\n    },\n    formatVoteOption(v) {\n      return v.replaceAll('VOTE_OPTION_', '')\n    },\n    formatEnding(v) {\n      return toDay(v, 'from')\n    },\n    formatType(v) {\n      const txt = String(v).replace('Proposal', '')\n      const index = txt.lastIndexOf('.')\n      return index > 0 ? txt.substring(index + 1) : txt\n    },\n    normalize(data, title) {\n      if (!data) return null\n      const items = this.makeItems(data)\n      return {\n        title,\n        items,\n      }\n    },\n    makeItems(data) {\n      return Object.keys(data).map(k => {\n        if (isToken(data[k])) {\n          return { title: tokenFormatter(data[k]), subtitle: k }\n        }\n        if (typeof data[k] === 'boolean') {\n          return { title: data[k], subtitle: k }\n        }\n        return { title: this.convert(data[k]), subtitle: k }\n      })\n    },\n    formatDate: v => dayjs(v).format('YYYY-MM-DD HH:mm:ss'),\n    convert(v) {\n      if (typeof v === 'object') {\n        const v2 = {}\n        Object.entries(v).forEach(e => {\n          const k = e[0]\n          const x = e[1]\n          v2[k] = this.convert(x)\n        })\n        return v2\n      }\n      const d = parseFloat(v)\n      if (d === 0) return '0'\n      if (d < 1.01) {\n        return `${percent(d)}%`\n      }\n      if (d > 1000000000) {\n        return `${toDuration(d / 1000000)}`\n      }\n      if (d > 0) {\n        return d.toFixed()\n      }\n      return v\n    },\n  },\n}\n</script>\n\n<style>\n.addzone {\n    border: 2px dashed #ced4da;\n    background: #fff;\n    border-radius: 6px;\n    cursor: pointer;\n    box-shadow: none;\n}\n.addzone :hover {\n    border: 2px dashed #7367F0;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}