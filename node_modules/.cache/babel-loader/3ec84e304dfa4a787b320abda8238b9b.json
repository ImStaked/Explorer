{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.match.js\";\nimport \"core-js/modules/es.array.concat.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { resolveVerticalNavMenuItemComponent as resolveNavItemComponent } from '@core/layouts/utils';\nimport { provide, ref } from '@vue/composition-api';\nimport VerticalNavMenuHeader from '../vertical-nav-menu-header';\nimport VerticalNavMenuLink from '../vertical-nav-menu-link/VerticalNavMenuLink.vue';\nimport VerticalNavMenuGroup from '../vertical-nav-menu-group/VerticalNavMenuGroup.vue';\nimport modules from '../../../../../modules';\nexport default {\n  components: {\n    VerticalNavMenuHeader: VerticalNavMenuHeader,\n    VerticalNavMenuLink: VerticalNavMenuLink,\n    VerticalNavMenuGroup: VerticalNavMenuGroup\n  },\n  props: {\n    items: {\n      type: Array,\n      required: true\n    }\n  },\n  setup: function setup() {\n    provide('openGroups', ref([]));\n    return {\n      resolveNavItemComponent: resolveNavItemComponent\n    };\n  },\n  computed: {\n    menus: function menus() {\n      // pick current blockchain\n      var selected = this.$store.state.chains.selected;\n      var excludes = selected.excludes;\n      var children = [];\n      modules().forEach(function (m) {\n        if (excludes === undefined || excludes.indexOf(m.route) === -1) {\n          if (m.scope.match('normal') || m.scope.match(selected.chain_name)) {\n            children.push({\n              title: m.title,\n              route: {\n                name: m.route,\n                params: {\n                  chain: selected.chain_name\n                }\n              }\n            });\n          }\n        }\n      });\n      var current = {\n        title: selected.chain_name,\n        icon: selected.logo,\n        route: {\n          name: selected.chain_name,\n          params: {\n            chain: selected.chain_name\n          }\n        }\n      };\n      current.children = children; // this.items.unshift(current)\n\n      return [{\n        header: 'dashboard'\n      }, current].concat(this.items);\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;AAYA;AACA;AACA;AACA;AACA;AACA;AAEA;EACAA;IACAC,4CADA;IAEAC,wCAFA;IAGAC;EAHA,CADA;EAMAC;IACAC;MACAC,WADA;MAEAC;IAFA;EADA,CANA;EAYAC,KAZA,mBAYA;IACAC;IACA;MACAC;IADA;EAGA,CAjBA;EAkBAC;IACAC,KADA,mBACA;MACA;MACA;MACA;MACA;MACAC;QACA;UACA;YACAC;cACAC,cADA;cAEAC;gBAAAC;gBAAAC;kBAAAC;gBAAA;cAAA;YAFA;UAIA;QACA;MACA,CATA;MAUA;QACAJ,0BADA;QAEAK,mBAFA;QAGAJ;UAAAC;UAAAC;YAAAC;UAAA;QAAA;MAHA;MAKAE,4BApBA,CAqBA;;MACA;QAAAC;MAAA;IACA;EAxBA;AAlBA","names":["components","VerticalNavMenuHeader","VerticalNavMenuLink","VerticalNavMenuGroup","props","items","type","required","setup","provide","resolveNavItemComponent","computed","menus","modules","children","title","route","name","params","chain","icon","current","header"],"sourceRoot":"src/@core/layouts/layout-vertical/components/vertical-nav-menu/components/vertical-nav-menu-items","sources":["VerticalNavMenuItems.vue"],"sourcesContent":["<template>\n  <ul>\n    <component\n      :is=\"resolveNavItemComponent(item)\"\n      v-for=\"item in menus\"\n      :key=\"item.header || item.title\"\n      :item=\"item\"\n    />\n  </ul>\n</template>\n\n<script>\nimport { resolveVerticalNavMenuItemComponent as resolveNavItemComponent } from '@core/layouts/utils'\nimport { provide, ref } from '@vue/composition-api'\nimport VerticalNavMenuHeader from '../vertical-nav-menu-header'\nimport VerticalNavMenuLink from '../vertical-nav-menu-link/VerticalNavMenuLink.vue'\nimport VerticalNavMenuGroup from '../vertical-nav-menu-group/VerticalNavMenuGroup.vue'\nimport modules from '../../../../../modules'\n\nexport default {\n  components: {\n    VerticalNavMenuHeader,\n    VerticalNavMenuLink,\n    VerticalNavMenuGroup,\n  },\n  props: {\n    items: {\n      type: Array,\n      required: true,\n    },\n  },\n  setup() {\n    provide('openGroups', ref([]))\n    return {\n      resolveNavItemComponent,\n    }\n  },\n  computed: {\n    menus() {\n      // pick current blockchain\n      const { selected } = this.$store.state.chains\n      const { excludes } = selected\n      const children = []\n      modules().forEach(m => {\n        if (excludes === undefined || excludes.indexOf(m.route) === -1) {\n          if (m.scope.match('normal') || m.scope.match(selected.chain_name)) {\n            children.push({\n              title: m.title,\n              route: { name: m.route, params: { chain: selected.chain_name } },\n            })\n          }\n        }\n      })\n      const current = {\n        title: selected.chain_name,\n        icon: selected.logo,\n        route: { name: selected.chain_name, params: { chain: selected.chain_name } },\n      }\n      current.children = children\n      // this.items.unshift(current)\n      return [{ header: 'dashboard' }, current].concat(this.items)\n    },\n  },\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}