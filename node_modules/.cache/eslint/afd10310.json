[{"/home/imstaked/explorer/src/main.js":"1","/home/imstaked/explorer/src/global-components.js":"2","/home/imstaked/explorer/src/router/index.js":"3","/home/imstaked/explorer/src/App.vue":"4","/home/imstaked/explorer/src/store/index.js":"5","/home/imstaked/explorer/src/libs/fetch.js":"6","/home/imstaked/explorer/src/libs/portal-vue.js":"7","/home/imstaked/explorer/src/libs/toastification.js":"8","/home/imstaked/explorer/src/libs/clipboard.js":"9","/home/imstaked/explorer/src/lang/index.js":"10","/home/imstaked/explorer/src/@core/components/feather-icon/FeatherIcon.vue":"11","/home/imstaked/explorer/src/views/ConsensusStates.vue":"12","/home/imstaked/explorer/src/views/OsmosisTrade.vue":"13","/home/imstaked/explorer/src/views/GravityPool.vue":"14","/home/imstaked/explorer/src/views/Transaction.vue":"15","/home/imstaked/explorer/src/views/Block.vue":"16","/home/imstaked/explorer/src/views/Blocks.vue":"17","/home/imstaked/explorer/src/views/GovernanceProposalView.vue":"18","/home/imstaked/explorer/src/views/Governance.vue":"19","/home/imstaked/explorer/src/views/StakingValidator.vue":"20","/home/imstaked/explorer/src/views/Staking.vue":"21","/home/imstaked/explorer/src/views/WalletAccountReceive.vue":"22","/home/imstaked/explorer/src/views/WalletAccountDetail.vue":"23","/home/imstaked/explorer/src/views/UptimeMyValidators.vue":"24","/home/imstaked/explorer/src/views/Uptime.vue":"25","/home/imstaked/explorer/src/views/WalletDelegations.vue":"26","/home/imstaked/explorer/src/views/WalletAccountImportAddress.vue":"27","/home/imstaked/explorer/src/views/WalletAccounts.vue":"28","/home/imstaked/explorer/src/views/Home.vue":"29","/home/imstaked/explorer/src/views/StateSync.vue":"30","/home/imstaked/explorer/src/views/error/ChainNotExist.vue":"31","/home/imstaked/explorer/src/views/error/Error404.vue":"32","/home/imstaked/explorer/src/views/Parameters.vue":"33","/home/imstaked/explorer/src/views/Dashboard.vue":"34","/home/imstaked/explorer/src/views/WalletVotes.vue":"35","/home/imstaked/explorer/src/views/WalletTransactions.vue":"36","/home/imstaked/explorer/src/@core/layouts/components/Coffee.vue":"37","/home/imstaked/explorer/src/libs/utils.js":"38","/home/imstaked/explorer/src/store/app/index.js":"39","/home/imstaked/explorer/src/libs/osmos.js":"40","/home/imstaked/explorer/src/store/app-config/index.js":"41","/home/imstaked/explorer/src/store/vertical-menu/index.js":"42","/home/imstaked/explorer/src/store/chains/index.js":"43","/home/imstaked/explorer/themeConfig.js":"44","/home/imstaked/explorer/src/libs/data/index.js":"45","/home/imstaked/explorer/src/views/components/FullHeader.vue":"46","/home/imstaked/explorer/src/views/components/charts/EchartScatter.vue":"47","/home/imstaked/explorer/src/layouts/full/LayoutFull.vue":"48","/home/imstaked/explorer/src/layouts/vertical/LayoutVertical.vue":"49","/home/imstaked/explorer/src/views/UptimeMyChainBlocks.vue":"50","/home/imstaked/explorer/src/views/components/ObjectFieldComponent.vue":"51","/home/imstaked/explorer/src/views/components/ArrayFieldComponent.vue":"52","/home/imstaked/explorer/src/views/components/dashboard/DashboardCardHorizontal.vue":"53","/home/imstaked/explorer/src/views/components/KlineTrade/Place.vue":"54","/home/imstaked/explorer/src/views/components/governance/ProposalSummaryComponent.vue":"55","/home/imstaked/explorer/src/views/components/staking/StakingAddressComponent.vue":"56","/home/imstaked/explorer/src/views/components/staking/StakingCommissionComponent.vue":"57","/home/imstaked/explorer/src/views/components/staking/StakingRewardComponent.vue":"58","/home/imstaked/explorer/src/views/components/charts/ChartComponentDoughnut.vue":"59","/home/imstaked/explorer/src/views/components/OperationModal/index.vue":"60","/home/imstaked/explorer/src/@core/components/toastification/ToastificationContent.vue":"61","/home/imstaked/explorer/src/@core/app-config/useAppConfig.js":"62","/home/imstaked/explorer/src/libs/data/tx.js":"63","/home/imstaked/explorer/src/@core/layouts/components/Logo.vue":"64","/home/imstaked/explorer/src/@core/layouts/components/AppFooter.vue":"65","/home/imstaked/explorer/src/views/components/dashboard/DashboardCardVertical.vue":"66","/home/imstaked/explorer/src/views/components/dashboard/DashboardPriceChart2.vue":"67","/home/imstaked/explorer/src/views/WalletUpgradeEvents.vue":"68","/home/imstaked/explorer/src/views/components/parameters/ParametersModuleComponent.vue":"69","/home/imstaked/explorer/src/@core/components/app-collapse/AppCollapse.vue":"70","/home/imstaked/explorer/src/@core/components/app-collapse/AppCollapseItem.vue":"71","/home/imstaked/explorer/src/libs/client/MetaMaskSigner.js":"72","/home/imstaked/explorer/src/@core/utils/validations/validations.js":"73","/home/imstaked/explorer/src/libs/data/proposal.js":"74","/home/imstaked/explorer/src/libs/data/proposal-tally.js":"75","/home/imstaked/explorer/src/libs/data/staking-pool.js":"76","/home/imstaked/explorer/src/libs/data/proposer.js":"77","/home/imstaked/explorer/src/libs/data/votes.js":"78","/home/imstaked/explorer/src/libs/data/deposit.js":"79","/home/imstaked/explorer/src/libs/data/validator.js":"80","/home/imstaked/explorer/src/libs/data/staking-parameters.js":"81","/home/imstaked/explorer/src/libs/data/block.js":"82","/home/imstaked/explorer/src/libs/data/validator-distribution.js":"83","/home/imstaked/explorer/src/libs/data/staking-delegation.js":"84","/home/imstaked/explorer/src/libs/data/wrapstdtx.js":"85","/home/imstaked/explorer/src/libs/data/token.js":"86","/home/imstaked/explorer/src/@core/utils/validations/validators.js":"87","/home/imstaked/explorer/src/libs/data/validator-commission.js":"88","/home/imstaked/explorer/src/libs/data/valdiator-description.js":"89","/home/imstaked/explorer/src/libs/data/block-id.js":"90","/home/imstaked/explorer/src/libs/data/block-inner.js":"91","/home/imstaked/explorer/src/libs/data/stdtx.js":"92","/home/imstaked/explorer/src/layouts/components/Navbar.vue":"93","/home/imstaked/explorer/src/views/components/KlineTrade/PlaceForm.vue":"94","/home/imstaked/explorer/src/@core/layouts/components/app-navbar/components/DarkToggler.vue":"95","/home/imstaked/explorer/src/@core/layouts/components/app-navbar/components/Locale.vue":"96","/home/imstaked/explorer/src/@core/layouts/layout-vertical/LayoutVertical.vue":"97","/home/imstaked/explorer/src/@core/layouts/layout-full/LayoutFull.vue":"98","/home/imstaked/explorer/src/views/components/OperationModal/WalletInput.vue":"99","/home/imstaked/explorer/src/views/components/OperationModal/TransactionResult.vue":"100","/home/imstaked/explorer/src/views/components/OperationModal/components/Delegate.vue":"101","/home/imstaked/explorer/src/views/components/OperationModal/components/Redelegate.vue":"102","/home/imstaked/explorer/src/views/components/OperationModal/components/Withdraw.vue":"103","/home/imstaked/explorer/src/views/components/OperationModal/components/Unbond.vue":"104","/home/imstaked/explorer/src/views/components/OperationModal/components/Transfer.vue":"105","/home/imstaked/explorer/src/views/components/OperationModal/components/IBCTransfer.vue":"106","/home/imstaked/explorer/src/views/components/OperationModal/components/Vote.vue":"107","/home/imstaked/explorer/src/views/components/OperationModal/components/WithdrawCommission.vue":"108","/home/imstaked/explorer/src/views/components/OperationModal/components/GovDeposit.vue":"109","/home/imstaked/explorer/src/views/components/charts/ChartjsComponentDoughnutChart.vue":"110","/home/imstaked/explorer/src/libs/data/block-data.js":"111","/home/imstaked/explorer/src/libs/data/block-header.js":"112","/home/imstaked/explorer/src/libs/data/block-last-commit.js":"113","/home/imstaked/explorer/src/libs/data/signature.js":"114","/home/imstaked/explorer/src/views/components/KlineTrade/DepositeWindow.vue":"115","/home/imstaked/explorer/src/@core/layouts/layout-vertical/components/vertical-nav-menu/VerticalNavMenu.vue":"116","/home/imstaked/explorer/src/@core/layouts/components/app-navbar/components/SearchBar.vue":"117","/home/imstaked/explorer/src/@core/layouts/components/app-navbar/AppNavbarVerticalLayout.vue":"118","/home/imstaked/explorer/src/@core/layouts/layout-vertical/useVerticalLayout.js":"119","/home/imstaked/explorer/src/@core/layouts/layout-vertical/mixinVerticalLayout.js":"120","/home/imstaked/explorer/src/@core/layouts/components/layout-content-renderer/LayoutContentRendererDefault.vue":"121","/home/imstaked/explorer/src/@core/layouts/components/layout-content-renderer/LayoutContentRendererLeft.vue":"122","/home/imstaked/explorer/src/@core/layouts/components/layout-content-renderer/LayoutContentRendererLeftDetached.vue":"123","/home/imstaked/explorer/src/@core/layouts/layout-vertical/components/vertical-nav-menu/components/vertical-nav-menu-items/VerticalNavMenuItems.vue":"124","/home/imstaked/explorer/src/@core/layouts/layout-vertical/components/vertical-nav-menu/useVerticalNavMenu.js":"125","/home/imstaked/explorer/src/@core/layouts/components/AppBreadcrumb.vue":"126","/home/imstaked/explorer/src/@core/utils/filter.js":"127","/home/imstaked/explorer/src/navigation/vertical/index.js":"128","/home/imstaked/explorer/src/@core/utils/utils.js":"129","/home/imstaked/explorer/src/@core/layouts/modules.js":"130","/home/imstaked/explorer/src/@core/layouts/layout-vertical/components/vertical-nav-menu/components/vertical-nav-menu-link/VerticalNavMenuLink.vue":"131","/home/imstaked/explorer/src/@core/layouts/layout-vertical/components/vertical-nav-menu/components/vertical-nav-menu-group/VerticalNavMenuGroup.vue":"132","/home/imstaked/explorer/src/@core/layouts/utils.js":"133","/home/imstaked/explorer/src/@core/layouts/layout-vertical/components/vertical-nav-menu/components/vertical-nav-menu-header/index.js":"134","/home/imstaked/explorer/src/@core/layouts/layout-vertical/components/vertical-nav-menu/components/vertical-nav-menu-link/mixinVerticalNavMenuLink.js":"135","/home/imstaked/explorer/src/@core/layouts/layout-vertical/components/vertical-nav-menu/components/vertical-nav-menu-link/useVerticalNavMenuLink.js":"136","/home/imstaked/explorer/src/@core/layouts/layout-vertical/components/vertical-nav-menu/components/vertical-nav-menu-group/useVerticalNavMenuGroup.js":"137","/home/imstaked/explorer/src/@core/layouts/layout-vertical/components/vertical-nav-menu/components/vertical-nav-menu-group/mixinVerticalNavMenuGroup.js":"138","/home/imstaked/explorer/src/@core/libs/acl/index.js":"139","/home/imstaked/explorer/src/@core/libs/i18n/index.js":"140","/home/imstaked/explorer/src/@core/libs/acl/utils.js":"141","/home/imstaked/explorer/src/@core/libs/i18n/utils.js":"142"},{"size":1137,"mtime":1700022363110,"results":"143","hashOfConfig":"144"},{"size":140,"mtime":1700022363098,"results":"145","hashOfConfig":"144"},{"size":9699,"mtime":1700022363110,"results":"146","hashOfConfig":"144"},{"size":3026,"mtime":1700022363094,"results":"147","hashOfConfig":"144"},{"size":374,"mtime":1700022363110,"results":"148","hashOfConfig":"144"},{"size":23428,"mtime":1700022363110,"results":"149","hashOfConfig":"144"},{"size":77,"mtime":1700022363110,"results":"150","hashOfConfig":"144"},{"size":458,"mtime":1700022363110,"results":"151","hashOfConfig":"144"},{"size":100,"mtime":1700022363106,"results":"152","hashOfConfig":"144"},{"size":602,"mtime":1700022363098,"results":"153","hashOfConfig":"144"},{"size":989,"mtime":1700022363090,"results":"154","hashOfConfig":"144"},{"size":7494,"mtime":1700022363110,"results":"155","hashOfConfig":"144"},{"size":7485,"mtime":1700022363110,"results":"156","hashOfConfig":"144"},{"size":3037,"mtime":1700022363110,"results":"157","hashOfConfig":"144"},{"size":3821,"mtime":1700022363110,"results":"158","hashOfConfig":"144"},{"size":3149,"mtime":1700022363110,"results":"159","hashOfConfig":"144"},{"size":5195,"mtime":1700022363110,"results":"160","hashOfConfig":"144"},{"size":11930,"mtime":1700022363110,"results":"161","hashOfConfig":"144"},{"size":2486,"mtime":1700022363110,"results":"162","hashOfConfig":"144"},{"size":12906,"mtime":1700022363110,"results":"163","hashOfConfig":"144"},{"size":15730,"mtime":1700022363110,"results":"164","hashOfConfig":"144"},{"size":2662,"mtime":1700022363110,"results":"165","hashOfConfig":"144"},{"size":23909,"mtime":1700022363110,"results":"166","hashOfConfig":"144"},{"size":2807,"mtime":1700022363110,"results":"167","hashOfConfig":"144"},{"size":12869,"mtime":1700022363110,"results":"168","hashOfConfig":"144"},{"size":6813,"mtime":1700022363110,"results":"169","hashOfConfig":"144"},{"size":19461,"mtime":1700022363110,"results":"170","hashOfConfig":"144"},{"size":20829,"mtime":1700022363110,"results":"171","hashOfConfig":"144"},{"size":6039,"mtime":1700022363110,"results":"172","hashOfConfig":"144"},{"size":5727,"mtime":1700022363110,"results":"173","hashOfConfig":"144"},{"size":1586,"mtime":1700022363114,"results":"174","hashOfConfig":"144"},{"size":1593,"mtime":1700022363114,"results":"175","hashOfConfig":"144"},{"size":6524,"mtime":1700022363110,"results":"176","hashOfConfig":"144"},{"size":18727,"mtime":1700022363110,"results":"177","hashOfConfig":"144"},{"size":9714,"mtime":1700022363110,"results":"178","hashOfConfig":"144"},{"size":1285,"mtime":1700022363110,"results":"179","hashOfConfig":"144"},{"size":2473,"mtime":1700022363090,"results":"180","hashOfConfig":"144"},{"size":16740,"mtime":1700022363110,"results":"181","hashOfConfig":"144"},{"size":734,"mtime":1700022363110,"results":"182","hashOfConfig":"144"},{"size":5059,"mtime":1700022363110,"results":"183","hashOfConfig":"144"},{"size":1779,"mtime":1700022363110,"results":"184","hashOfConfig":"144"},{"size":315,"mtime":1700022363110,"results":"185","hashOfConfig":"144"},{"size":3896,"mtime":1700022363110,"results":"186","hashOfConfig":"144"},{"size":1314,"mtime":1700022363114,"results":"187","hashOfConfig":"144"},{"size":691,"mtime":1700022363106,"results":"188","hashOfConfig":"144"},{"size":916,"mtime":1700022363110,"results":"189","hashOfConfig":"144"},{"size":2576,"mtime":1700022363110,"results":"190","hashOfConfig":"144"},{"size":219,"mtime":1700022363098,"results":"191","hashOfConfig":"144"},{"size":812,"mtime":1700022363098,"results":"192","hashOfConfig":"144"},{"size":6603,"mtime":1700022363110,"results":"193","hashOfConfig":"144"},{"size":4484,"mtime":1700022363110,"results":"194","hashOfConfig":"144"},{"size":2754,"mtime":1700022363110,"results":"195","hashOfConfig":"144"},{"size":943,"mtime":1700022363110,"results":"196","hashOfConfig":"144"},{"size":853,"mtime":1700022363110,"results":"197","hashOfConfig":"144"},{"size":5606,"mtime":1700022363110,"results":"198","hashOfConfig":"144"},{"size":3678,"mtime":1700022363114,"results":"199","hashOfConfig":"144"},{"size":3350,"mtime":1700022363114,"results":"200","hashOfConfig":"144"},{"size":3641,"mtime":1700022363114,"results":"201","hashOfConfig":"144"},{"size":1704,"mtime":1700022363110,"results":"202","hashOfConfig":"144"},{"size":12912,"mtime":1700022363110,"results":"203","hashOfConfig":"144"},{"size":1582,"mtime":1700022363090,"results":"204","hashOfConfig":"144"},{"size":4208,"mtime":1700022363086,"results":"205","hashOfConfig":"144"},{"size":644,"mtime":1700022363110,"results":"206","hashOfConfig":"144"},{"size":13189,"mtime":1700022363090,"results":"207","hashOfConfig":"144"},{"size":935,"mtime":1700022363090,"results":"208","hashOfConfig":"144"},{"size":816,"mtime":1700022363110,"results":"209","hashOfConfig":"144"},{"size":11785,"mtime":1700022363110,"results":"210","hashOfConfig":"144"},{"size":3455,"mtime":1700022363110,"results":"211","hashOfConfig":"144"},{"size":2881,"mtime":1700022363114,"results":"212","hashOfConfig":"144"},{"size":876,"mtime":1700022363090,"results":"213","hashOfConfig":"144"},{"size":1747,"mtime":1700022363090,"results":"214","hashOfConfig":"144"},{"size":953,"mtime":1700022363106,"results":"215","hashOfConfig":"144"},{"size":5258,"mtime":1700022363094,"results":"216","hashOfConfig":"144"},{"size":2349,"mtime":1700022363110,"results":"217","hashOfConfig":"144"},{"size":723,"mtime":1700022363110,"results":"218","hashOfConfig":"144"},{"size":456,"mtime":1700022363110,"results":"219","hashOfConfig":"144"},{"size":261,"mtime":1700022363110,"results":"220","hashOfConfig":"144"},{"size":265,"mtime":1700022363110,"results":"221","hashOfConfig":"144"},{"size":280,"mtime":1700022363106,"results":"222","hashOfConfig":"144"},{"size":1471,"mtime":1700022363110,"results":"223","hashOfConfig":"144"},{"size":858,"mtime":1700022363110,"results":"224","hashOfConfig":"144"},{"size":358,"mtime":1700022363106,"results":"225","hashOfConfig":"144"},{"size":653,"mtime":1700022363110,"results":"226","hashOfConfig":"144"},{"size":277,"mtime":1700022363110,"results":"227","hashOfConfig":"144"},{"size":1510,"mtime":1700022363110,"results":"228","hashOfConfig":"144"},{"size":242,"mtime":1700022363110,"results":"229","hashOfConfig":"144"},{"size":947,"mtime":1700022363094,"results":"230","hashOfConfig":"144"},{"size":479,"mtime":1700022363110,"results":"231","hashOfConfig":"144"},{"size":503,"mtime":1700022363110,"results":"232","hashOfConfig":"144"},{"size":253,"mtime":1700022363106,"results":"233","hashOfConfig":"144"},{"size":623,"mtime":1700022363106,"results":"234","hashOfConfig":"144"},{"size":1030,"mtime":1700022363110,"results":"235","hashOfConfig":"144"},{"size":9136,"mtime":1700022363098,"results":"236","hashOfConfig":"144"},{"size":12143,"mtime":1700022363110,"results":"237","hashOfConfig":"144"},{"size":545,"mtime":1700022363090,"results":"238","hashOfConfig":"144"},{"size":1789,"mtime":1700022363090,"results":"239","hashOfConfig":"144"},{"size":4699,"mtime":1700022363090,"results":"240","hashOfConfig":"144"},{"size":305,"mtime":1700022363090,"results":"241","hashOfConfig":"144"},{"size":1860,"mtime":1700022363110,"results":"242","hashOfConfig":"144"},{"size":4446,"mtime":1700022363110,"results":"243","hashOfConfig":"144"},{"size":6220,"mtime":1700022363110,"results":"244","hashOfConfig":"144"},{"size":6145,"mtime":1700022363110,"results":"245","hashOfConfig":"144"},{"size":1492,"mtime":1700022363110,"results":"246","hashOfConfig":"144"},{"size":4702,"mtime":1700022363110,"results":"247","hashOfConfig":"144"},{"size":5315,"mtime":1700022363110,"results":"248","hashOfConfig":"144"},{"size":8295,"mtime":1700022363110,"results":"249","hashOfConfig":"144"},{"size":3435,"mtime":1700022363110,"results":"250","hashOfConfig":"144"},{"size":1441,"mtime":1700022363110,"results":"251","hashOfConfig":"144"},{"size":4301,"mtime":1700022363110,"results":"252","hashOfConfig":"144"},{"size":344,"mtime":1700022363110,"results":"253","hashOfConfig":"144"},{"size":183,"mtime":1700022363106,"results":"254","hashOfConfig":"144"},{"size":1240,"mtime":1700022363106,"results":"255","hashOfConfig":"144"},{"size":506,"mtime":1700022363106,"results":"256","hashOfConfig":"144"},{"size":425,"mtime":1700022363110,"results":"257","hashOfConfig":"144"},{"size":15480,"mtime":1700022363110,"results":"258","hashOfConfig":"144"},{"size":4186,"mtime":1700022363090,"results":"259","hashOfConfig":"144"},{"size":3332,"mtime":1700022363090,"results":"260","hashOfConfig":"144"},{"size":1120,"mtime":1700022363090,"results":"261","hashOfConfig":"144"},{"size":2764,"mtime":1700022363090,"results":"262","hashOfConfig":"144"},{"size":227,"mtime":1700022363090,"results":"263","hashOfConfig":"144"},{"size":978,"mtime":1700022363090,"results":"264","hashOfConfig":"144"},{"size":1199,"mtime":1700022363090,"results":"265","hashOfConfig":"144"},{"size":1229,"mtime":1700022363090,"results":"266","hashOfConfig":"144"},{"size":1815,"mtime":1700022363090,"results":"267","hashOfConfig":"144"},{"size":1152,"mtime":1700022363090,"results":"268","hashOfConfig":"144"},{"size":1831,"mtime":1700022363090,"results":"269","hashOfConfig":"144"},{"size":2003,"mtime":1700022363094,"results":"270","hashOfConfig":"144"},{"size":1383,"mtime":1700022363110,"results":"271","hashOfConfig":"144"},{"size":2213,"mtime":1700022363094,"results":"272","hashOfConfig":"144"},{"size":816,"mtime":1700022363090,"results":"273","hashOfConfig":"144"},{"size":1657,"mtime":1700022363090,"results":"274","hashOfConfig":"144"},{"size":2428,"mtime":1700022363090,"results":"275","hashOfConfig":"144"},{"size":3286,"mtime":1700022363090,"results":"276","hashOfConfig":"144"},{"size":692,"mtime":1700022363090,"results":"277","hashOfConfig":"144"},{"size":136,"mtime":1700022363090,"results":"278","hashOfConfig":"144"},{"size":385,"mtime":1700022363090,"results":"279","hashOfConfig":"144"},{"size":3460,"mtime":1700022363090,"results":"280","hashOfConfig":"144"},{"size":136,"mtime":1700022363090,"results":"281","hashOfConfig":"144"},{"size":105,"mtime":1700022363090,"results":"282","hashOfConfig":"144"},{"size":105,"mtime":1700022363090,"results":"283","hashOfConfig":"144"},{"size":4054,"mtime":1700022363090,"results":"284","hashOfConfig":"144"},{"size":510,"mtime":1700022363090,"results":"285","hashOfConfig":"144"},{"filePath":"286","messages":"287","suppressedMessages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"p3yufw",{"filePath":"289","messages":"290","suppressedMessages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"292","messages":"293","suppressedMessages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","suppressedMessages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"298","messages":"299","suppressedMessages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"301","messages":"302","suppressedMessages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"304","messages":"305","suppressedMessages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"307","messages":"308","suppressedMessages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"310","messages":"311","suppressedMessages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"313","messages":"314","suppressedMessages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"316","messages":"317","suppressedMessages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"319","messages":"320","suppressedMessages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"322","messages":"323","suppressedMessages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"325","messages":"326","suppressedMessages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"328","messages":"329","suppressedMessages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"331","messages":"332","suppressedMessages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"334","messages":"335","suppressedMessages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"337","messages":"338","suppressedMessages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340"},{"filePath":"341","messages":"342","suppressedMessages":"343","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"344","messages":"345","suppressedMessages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"347","messages":"348","suppressedMessages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"350","messages":"351","suppressedMessages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"353","messages":"354","suppressedMessages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356"},{"filePath":"357","messages":"358","suppressedMessages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"360","messages":"361","suppressedMessages":"362","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"363","messages":"364","suppressedMessages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366"},{"filePath":"367","messages":"368","suppressedMessages":"369","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"370","messages":"371","suppressedMessages":"372","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373"},{"filePath":"374","messages":"375","suppressedMessages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"377","messages":"378","suppressedMessages":"379","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"380","messages":"381","suppressedMessages":"382","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"383","messages":"384","suppressedMessages":"385","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"386","messages":"387","suppressedMessages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"389","messages":"390","suppressedMessages":"391","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"392","messages":"393","suppressedMessages":"394","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"395","messages":"396","suppressedMessages":"397","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"398","messages":"399","suppressedMessages":"400","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"401","messages":"402","suppressedMessages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"404","messages":"405","suppressedMessages":"406","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"407","messages":"408","suppressedMessages":"409","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"410"},{"filePath":"411","messages":"412","suppressedMessages":"413","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"414","messages":"415","suppressedMessages":"416","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"417","messages":"418","suppressedMessages":"419","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"420","messages":"421","suppressedMessages":"422","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"423","messages":"424","suppressedMessages":"425","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"426","messages":"427","suppressedMessages":"428","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"429","messages":"430","suppressedMessages":"431","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"432","messages":"433","suppressedMessages":"434","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"435","messages":"436","suppressedMessages":"437","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"438","messages":"439","suppressedMessages":"440","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"441","messages":"442","suppressedMessages":"443","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"444"},{"filePath":"445","messages":"446","suppressedMessages":"447","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"448","messages":"449","suppressedMessages":"450","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"451","messages":"452","suppressedMessages":"453","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"454"},{"filePath":"455","messages":"456","suppressedMessages":"457","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"458","messages":"459","suppressedMessages":"460","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"461","messages":"462","suppressedMessages":"463","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"464"},{"filePath":"465","messages":"466","suppressedMessages":"467","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"468","messages":"469","suppressedMessages":"470","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"471","messages":"472","suppressedMessages":"473","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"474","messages":"475","suppressedMessages":"476","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"477","messages":"478","suppressedMessages":"479","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"480","messages":"481","suppressedMessages":"482","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"483","messages":"484","suppressedMessages":"485","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"486","messages":"487","suppressedMessages":"488","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"489","messages":"490","suppressedMessages":"491","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"492","messages":"493","suppressedMessages":"494","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"495","messages":"496","suppressedMessages":"497","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"498","messages":"499","suppressedMessages":"500","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"501"},{"filePath":"502","messages":"503","suppressedMessages":"504","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"505","messages":"506","suppressedMessages":"507","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"508","messages":"509","suppressedMessages":"510","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"511","messages":"512","suppressedMessages":"513","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"514","messages":"515","suppressedMessages":"516","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"517","messages":"518","suppressedMessages":"519","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"520","messages":"521","suppressedMessages":"522","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"523","messages":"524","suppressedMessages":"525","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"526","messages":"527","suppressedMessages":"528","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"529","messages":"530","suppressedMessages":"531","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"532","messages":"533","suppressedMessages":"534","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"535","messages":"536","suppressedMessages":"537","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"538","messages":"539","suppressedMessages":"540","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"541","messages":"542","suppressedMessages":"543","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"544","messages":"545","suppressedMessages":"546","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"547","messages":"548","suppressedMessages":"549","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"550","messages":"551","suppressedMessages":"552","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"553","messages":"554","suppressedMessages":"555","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"556","messages":"557","suppressedMessages":"558","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"559","messages":"560","suppressedMessages":"561","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"562","messages":"563","suppressedMessages":"564","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"565","messages":"566","suppressedMessages":"567","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"568","messages":"569","suppressedMessages":"570","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"571","messages":"572","suppressedMessages":"573","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"574"},{"filePath":"575","messages":"576","suppressedMessages":"577","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"578"},{"filePath":"579","messages":"580","suppressedMessages":"581","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"582","messages":"583","suppressedMessages":"584","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"585","messages":"586","suppressedMessages":"587","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"588","messages":"589","suppressedMessages":"590","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"591","messages":"592","suppressedMessages":"593","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"594","messages":"595","suppressedMessages":"596","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"597","messages":"598","suppressedMessages":"599","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"600","messages":"601","suppressedMessages":"602","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"603","messages":"604","suppressedMessages":"605","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"606","messages":"607","suppressedMessages":"608","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"609","messages":"610","suppressedMessages":"611","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"612","messages":"613","suppressedMessages":"614","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"615","messages":"616","suppressedMessages":"617","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"618","messages":"619","suppressedMessages":"620","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"621","messages":"622","suppressedMessages":"623","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"624","messages":"625","suppressedMessages":"626","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"627","messages":"628","suppressedMessages":"629","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"630","messages":"631","suppressedMessages":"632","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"633","messages":"634","suppressedMessages":"635","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"636","messages":"637","suppressedMessages":"638","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"639","messages":"640","suppressedMessages":"641","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"642"},{"filePath":"643","messages":"644","suppressedMessages":"645","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"646","messages":"647","suppressedMessages":"648","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"649","messages":"650","suppressedMessages":"651","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"652"},{"filePath":"653","messages":"654","suppressedMessages":"655","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"656","messages":"657","suppressedMessages":"658","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"659","messages":"660","suppressedMessages":"661","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"662","messages":"663","suppressedMessages":"664","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"665","messages":"666","suppressedMessages":"667","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"668","messages":"669","suppressedMessages":"670","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"671","messages":"672","suppressedMessages":"673","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"674","messages":"675","suppressedMessages":"676","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"677","messages":"678","suppressedMessages":"679","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"680","messages":"681","suppressedMessages":"682","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"683","messages":"684","suppressedMessages":"685","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"686","messages":"687","suppressedMessages":"688","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"689","messages":"690","suppressedMessages":"691","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"692","messages":"693","suppressedMessages":"694","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"695","messages":"696","suppressedMessages":"697","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"698","messages":"699","suppressedMessages":"700","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"701","messages":"702","suppressedMessages":"703","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"704","messages":"705","suppressedMessages":"706","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"707","messages":"708","suppressedMessages":"709","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"710","messages":"711","suppressedMessages":"712","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"713","messages":"714","suppressedMessages":"715","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"716","messages":"717","suppressedMessages":"718","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"719","messages":"720","suppressedMessages":"721","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"722","messages":"723","suppressedMessages":"724","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/imstaked/explorer/src/main.js",[],[],"/home/imstaked/explorer/src/global-components.js",[],[],"/home/imstaked/explorer/src/router/index.js",[],[],"/home/imstaked/explorer/src/App.vue",[],["725","726"],"/home/imstaked/explorer/src/store/index.js",[],[],"/home/imstaked/explorer/src/libs/fetch.js",[],[],"/home/imstaked/explorer/src/libs/portal-vue.js",[],[],"/home/imstaked/explorer/src/libs/toastification.js",[],[],"/home/imstaked/explorer/src/libs/clipboard.js",[],[],"/home/imstaked/explorer/src/lang/index.js",[],[],"/home/imstaked/explorer/src/@core/components/feather-icon/FeatherIcon.vue",[],[],"/home/imstaked/explorer/src/views/ConsensusStates.vue",[],["727","728","729"],"/home/imstaked/explorer/src/views/OsmosisTrade.vue",[],["730","731"],"/home/imstaked/explorer/src/views/GravityPool.vue",[],[],"/home/imstaked/explorer/src/views/Transaction.vue",[],[],"/home/imstaked/explorer/src/views/Block.vue",[],[],"/home/imstaked/explorer/src/views/Blocks.vue",[],[],"/home/imstaked/explorer/src/views/GovernanceProposalView.vue",["732"],[],"<template>\n  <section>\n    <b-card\n      no-body\n    >\n      <b-card-header>\n        <b-card-title>\n          #{{ proposal.id }}\n          <b-badge\n            v-if=\"proposal.status == 1\"\n            pill\n            variant=\"light-info\"\n            class=\"text-right\"\n          >\n            Deposit\n          </b-badge>\n          <b-badge\n            v-if=\"proposal.status == 2\"\n            pill\n            variant=\"light-primary\"\n            class=\"text-right\"\n          >\n            Voting\n          </b-badge>\n          <b-badge\n            v-if=\"proposal.status == 3\"\n            pill\n            variant=\"light-success\"\n            class=\"text-right\"\n          >\n            Passed\n          </b-badge>\n          <b-badge\n            v-if=\"proposal.status == 4\"\n            pill\n            variant=\"light-danger\"\n            class=\"text-right\"\n          >\n            Rejected\n          </b-badge>\n          {{ proposal.title }}\n        </b-card-title>\n      </b-card-header>\n      <b-card-body>\n        <b-table-simple\n          stacked=\"sm\"\n          hover\n          striped\n        >\n          <tbody>\n            <b-tr>\n              <b-td style=\"text-transform: capitalize; vertical-align: top; width:200px\">\n                {{ $t('proposal_proposer') }}\n              </b-td><b-td><router-link :to=\"`../account/${proposer.proposer}`\">\n                {{ formatAddress(proposer.proposer) }}\n              </router-link> </b-td>\n            </b-tr>\n            <b-tr>\n              <b-td>\n                {{ $t('proposal_total_deposit') }}\n              </b-td><b-td>{{ formatToken(proposal.total_deposit) }} </b-td>\n            </b-tr>\n            <b-tr>\n              <b-td>\n                {{ $t('proposal_submit_time') }}\n              </b-td><b-td>{{ formatDate(proposal.submit_time) }}</b-td>\n            </b-tr>\n            <b-tr>\n              <b-td>\n                {{ $t('voting_time') }}\n              </b-td><b-td>{{ formatDate(proposal.voting_start_time) }} - {{ formatDate(proposal.voting_end_time) }}</b-td>\n            </b-tr>\n          </tbody>\n        </b-table-simple>\n        <div>\n          <object-field-component\n            :tablefield=\"proposal.contents\"\n            :small=\"false\"\n          /></div>\n        <b-table-simple v-if=\"proposal.type.indexOf('SoftwareUpgrade') > 0\">\n          <b-tr>\n            <b-td class=\"text-center\">\n              {{ $t('upgrade_time') }} {{ upgradeTime }}\n              <flip-countdown :deadline=\"upgradeTime\" />\n            </b-td>\n          </b-tr>\n        </b-table-simple>\n      </b-card-body>\n      <b-card-footer>\n        <router-link :to=\"from\">\n          <b-button\n            variant=\"outline-primary\"\n          >\n            {{ $t('btn_back_list') }}\n          </b-button>\n        </router-link>\n        <b-button\n          v-b-modal.operation-modal\n          :disabled=\"proposal.status!=2\"\n          variant=\"primary\"\n          class=\"btn float-right mg-2\"\n          @click=\"openModal('Vote')\"\n        >\n          {{ $t('btn_vote') }}\n        </b-button>\n      </b-card-footer>\n    </b-card>\n    <b-card no-body>\n      <b-card-header>\n        <b-card-title>\n          Votes\n        </b-card-title>\n      </b-card-header>\n      <b-card-body>\n        <b-progress\n          :max=\"100\"\n          height=\"2rem\"\n          class=\"mb-2\"\n          show-progress\n        >\n          <b-progress-bar\n            :id=\"'vote-yes'+proposal.id\"\n            variant=\"success\"\n            :value=\"percent(proposal.tally.yes)\"\n            :label=\"`${percent(proposal.tally.yes).toFixed()}%`\"\n            show-progress\n          />\n          <b-progress-bar\n            :id=\"'vote-no'+proposal.id\"\n            variant=\"warning\"\n            :value=\"percent(proposal.tally.no)\"\n            :label=\"`${percent(proposal.tally.no).toFixed()}%`\"\n            show-progress\n          />\n          <b-progress-bar\n            :id=\"'vote-veto'+proposal.id\"\n            variant=\"danger\"\n            :value=\"percent(proposal.tally.veto)\"\n            :label=\"`${percent(proposal.tally.veto).toFixed()}%`\"\n            show-progress\n          />\n          <b-progress-bar\n            :id=\"'vote-abstain'+proposal.id\"\n            variant=\"info\"\n            :value=\"percent(proposal.tally.abstain)\"\n            :label=\"`${percent(proposal.tally.abstain).toFixed()}%`\"\n            show-progress\n          />\n        </b-progress>\n        <b-tooltip\n          :target=\"'vote-yes'+proposal.id\"\n        >\n          {{ percent(proposal.tally.yes) }}% voted Yes\n        </b-tooltip>\n        <b-tooltip\n          :target=\"'vote-no'+proposal.id\"\n        >\n          {{ percent(proposal.tally.no) }}% voted No\n        </b-tooltip>\n        <b-tooltip\n          :target=\"'vote-veto'+proposal.id\"\n        >\n          {{ percent(proposal.tally.veto) }}% voted No With Veto\n        </b-tooltip>\n        <b-tooltip\n          :target=\"'vote-abstain'+proposal.id\"\n        >\n          {{ percent(proposal.tally.abstain) }}% voted Abstain\n        </b-tooltip>\n        <b-table\n          v-if=\"votes.votes && votes.votes.length > 0\"\n          stacked=\"sm\"\n          :fields=\"votes_fields\"\n          :items=\"votes.votes\"\n          striped\n        >\n          <template #cell(voter)=\"data\">\n            <router-link :to=\"`../account/${data.item.voter}`\">\n              {{ formatAddress(data.item.voter) }}\n            </router-link>\n          </template>\n        </b-table>\n        <div\n          v-if=\"next\"\n          class=\"addzone text-center pt-50 pb-50 bg-transparent text-primary\"\n          @click=\"loadVotes()\"\n        >\n          <feather-icon icon=\"PlusIcon\" />\n          Load More Votes\n        </div>\n      </b-card-body>\n    </b-card>\n    <b-card\n      v-if=\"proposal.total_deposit\"\n      no-body\n    >\n      <b-card-header>\n        <b-card-title>\n          Deposits ({{ formatToken(proposal.total_deposit) }})\n        </b-card-title>\n      </b-card-header>\n      <b-card-body>\n        <b-table\n          v-if=\"Array.isArray(deposits.deposits || deposits)\"\n          stacked=\"sm\"\n          :items=\"deposits.deposits || deposits\"\n          :fields=\"deposit_fields\"\n          striped\n        >\n          <template #cell(depositor)=\"data\">\n            <router-link :to=\"`../account/${data.item.depositor}`\">\n              {{ formatAddress(data.item.depositor) }}\n            </router-link>\n          </template>\n        </b-table>\n      </b-card-body>\n      <b-card-footer>\n        <router-link :to=\"from\">\n          <b-button\n            variant=\"outline-primary\"\n          >\n            {{ $t('btn_back_list') }}\n          </b-button>\n        </router-link>\n        <b-button\n          v-b-modal.operation-modal\n          :disabled=\"proposal.status!=1\"\n          variant=\"primary\"\n          class=\"btn float-right mg-2\"\n          @click=\"openModal('GovDeposit')\"\n        >\n          {{ $t('btn_deposit') }}\n        </b-button>\n        <b-button\n          v-b-modal.operation-modal\n          :disabled=\"proposal.status!=2\"\n          variant=\"primary\"\n          class=\"btn float-right mg-2 mr-1\"\n          @click=\"openModal('Vote')\"\n        >\n          {{ $t('btn_vote') }}\n        </b-button>\n      </b-card-footer>\n    </b-card>\n    <operation-modal\n      :type=\"operationModalType\"\n      :proposal-id=\"Number(proposal.id)\"\n      :proposal-title=\"proposal.title\"\n    />\n  </section>\n</template>\n\n<script>\nimport {\n  BCard, BCardBody, BCardFooter, BButton, BTable, BTableSimple, BTr, BTd, BCardTitle, BCardHeader,\n  BProgressBar, BProgress, BTooltip, BBadge,\n} from 'bootstrap-vue'\nimport FlipCountdown from 'vue2-flip-countdown'\n// import fetch from 'node-fetch'\n\nimport {\n  getCachedValidators, getStakingValidatorByAccount, percent, tokenFormatter,\n} from '@/libs/utils'\nimport { Proposal, Proposer } from '@/libs/data'\nimport dayjs from 'dayjs'\nimport OperationModal from '@/views/components/OperationModal/index.vue'\nimport ObjectFieldComponent from './components/ObjectFieldComponent.vue'\n\n// import { formatToken } from '@/libs/data/data'\n\nexport default {\n  components: {\n    BCard,\n    BCardTitle,\n    BCardBody,\n    BCardFooter,\n    BButton,\n    BTable,\n    BTableSimple,\n    BCardHeader,\n    BTr,\n    BTd,\n    BProgressBar,\n    BProgress,\n    BTooltip,\n    BBadge,\n    ObjectFieldComponent,\n    FlipCountdown,\n    OperationModal,\n  },\n  data() {\n    return {\n      latest: {},\n      next: null,\n      proposal: new Proposal(),\n      proposer: new Proposer(),\n      deposits: [],\n      votes: [],\n      operationModalType: '',\n      from: '../gov',\n      votes_fields: [\n        {\n          key: 'voter',\n          sortable: true,\n          formatter: v => this.formatAddress(v),\n        },\n        {\n          key: 'option',\n          sortable: true,\n          formatter: value => {\n            switch (value) {\n              case 1:\n              case 'VOTE_OPTION_YES':\n                return 'Yes'\n              case 2:\n              case 'VOTE_OPTION_ABSTAIN':\n                return 'Abstain'\n              case 3:\n              case 'VOTE_OPTION_NO':\n                return 'No'\n              case 4:\n              case 'VOTE_OPTION_NO_WITH_VETO':\n                return 'No With Veto'\n              default:\n                return value\n            }\n          },\n        },\n      ],\n      deposit_fields: [\n        {\n          key: 'depositor',\n          formatter: v => this.formatAddress(v),\n        },\n        {\n          key: 'amount',\n          sortable: true,\n          formatter: tokenFormatter,\n        },\n      ],\n    }\n  },\n  computed: {\n    upgradeTime() {\n      if (this.proposal.type.indexOf('SoftwareUpgrade') > 0) {\n        if (Number(this.proposal?.contents.plan.height || 0) > 0 && this.latest?.block) {\n          const blocks = Number(this.proposal.contents.plan.height) - Number(this.latest.block?.header?.height || 0)\n          if (blocks > 0) {\n            const endtime = dayjs().add(blocks * 6, 'second').format('YYYY-MM-DD HH:mm:ss')\n            return endtime\n          }\n        }\n        return dayjs(this.proposal.contents.plan.time).format('YYYY-MM-DD HH:mm:ss')\n      }\n      return '0001-01-01 00:00:00'\n    },\n  },\n  created() {\n    const pid = this.$route.params.proposalid\n    if (this.$route.query.from) {\n      this.from = this.$route.query.from\n    }\n\n    this.$http.getLatestBlock().then(res => {\n      this.latest = res\n    })\n\n    this.$http.getGovernance(pid).then(p => {\n      if (p.status === 2) {\n        this.$http.getGovernanceTally(pid, 0).then(t => p.updateTally(t))\n      }\n      this.proposal = p\n    })\n\n    if (!getCachedValidators()) {\n      this.$http.getValidatorList()\n    }\n\n    this.$http.getGovernanceProposer(pid).then(res => {\n      this.proposer = res\n    })\n    this.$http.getGovernanceDeposits(pid).then(res => {\n      this.deposits = res\n    }).catch(() => {})\n    this.$http.getGovernanceVotes(pid).then(res => {\n      this.votes = res\n      this.next = res.pagination ? res.pagination.next_key : null\n    })\n  },\n  methods: {\n    percent: v => percent(v),\n    formatDate: v => dayjs(v).format('YYYY-MM-DD HH:mm'),\n    formatToken: v => tokenFormatter(v, {}),\n    loadVotes() {\n      if (this.next) {\n        const pid = this.$route.params.proposalid\n        const { next } = this\n        this.next = null\n        this.$http.getGovernanceVotes(pid, next).then(res => {\n          this.$set(this.votes, 'votes', this.votes.votes.concat(res.votes))\n          this.next = res.pagination ? res.pagination.next_key : null\n        })\n      }\n    },\n    formatAddress(v) {\n      return getStakingValidatorByAccount(this.$http.config.chain_name, v)\n    },\n    openModal(type) {\n      this.operationModalType = type\n    },\n  },\n}\n</script>\n\n<style lang=\"css\">\n.addzone {\n    border: 2px dashed #ced4da;\n    background: #fff;\n    border-radius: 6px;\n    cursor: pointer;\n    box-shadow: none;\n}\n.addzone :hover {\n    border: 2px dashed #7367F0;\n}\n@media (min-width: 768px) {\n  td:first-child { width: 20% ;}\n}\n</style>\n","/home/imstaked/explorer/src/views/Governance.vue",[],[],"/home/imstaked/explorer/src/views/StakingValidator.vue",[],[],"/home/imstaked/explorer/src/views/Staking.vue",[],[],"/home/imstaked/explorer/src/views/WalletAccountReceive.vue",[],[],"/home/imstaked/explorer/src/views/WalletAccountDetail.vue",["733"],[],"<template>\n  <div>\n    <div v-if=\"!error\">\n      <b-card\n        bg-variant=\"secondary\"\n        style=\"color: #fff\"\n      >\n        <div\n          class=\"d-flex flex-row align-items-center text-truncate\"\n        >\n          <b-avatar\n            id=\"address-qr\"\n            rounded\n            size=\"52\"\n          >\n            <feather-icon\n              icon=\"CameraIcon\"\n              size=\"32\"\n            />\n          </b-avatar>\n          <div class=\"ml-2\">\n            <h3\n              style=\"color: #fff\"\n              class=\"mb-0\"\n            >\n              Address: <feather-icon\n                icon=\"CopyIcon\"\n                size=\"18\"\n                @click=\"copy()\"\n              />\n            </h3>\n            {{ address }}\n            <span v-if=\"isEthAddr\"> - {{ ethaddress() }}</span>\n          </div>\n        </div>\n      </b-card>\n      <b-card\n        class=\"d-flex flex-row\"\n      >\n        <b-card-header class=\"pt-0 pl-0 pr-0\">\n          <b-card-title>Assets</b-card-title>\n          <div>\n            <b-button\n              v-b-modal.operation-modal\n              variant=\"primary\"\n              size=\"sm\"\n              class=\"mr-25\"\n              @click=\"setOperationModalType('Transfer')\"\n            >\n              <feather-icon\n                icon=\"SendIcon\"\n                class=\"d-md-none\"\n              /><small class=\"d-none d-md-block\">Transfer</small>\n            </b-button>\n            <b-button\n              v-b-modal.operation-modal\n              variant=\"danger\"\n              size=\"sm\"\n              @click=\"setOperationModalType('IBCTransfer')\"\n            ><feather-icon\n               icon=\"SendIcon\"\n               class=\"d-md-none\"\n             />\n              <span class=\"d-none d-md-block\">IBC Transfer</span>\n            </b-button>\n          </div>\n        </b-card-header>\n        <b-card-body class=\"pl-0 pr-0\">\n          <b-row>\n            <b-col\n              xm=\"12\"\n              md=\"4\"\n            >\n              <chart-component-doughnut\n                v-if=\"chartData\"\n                :height=\"235\"\n                :width=\"235\"\n                :data=\"chartData\"\n                class=\"mb-3\"\n              />\n            </b-col>\n            <b-col\n              class=\"border-left d-none d-md-block\"\n              md=\"1\"\n            />\n            <b-col\n              xm=\"12\"\n              md=\"7\"\n            >\n              <!-- tokens -->\n              <div\n                v-for=\"(token, index) in assetTable.items\"\n                :key=\"`asset-${index}`\"\n                class=\"d-flex justify-content-between mb-1\"\n              >\n                <div class=\"d-flex align-items-center\">\n                  <b-avatar\n                    :variant=\"`light-${token.color}`\"\n                    rounded\n                  >\n                    <feather-icon\n                      :icon=\"token.icon\"\n                      size=\"16\"\n                      :class=\"`text-${token.color}`\"\n                    />\n                  </b-avatar>\n                  <span class=\"font-weight-bold ml-75 d-none d-md-block\">{{ token.type }} </span>\n                  <span class=\"ml-25\">{{ token.percent }}%</span>\n                </div>\n                <div class=\"d-flex flex-column\">\n                  <span\n                    v-b-tooltip.hover.top=\"token.denom\"\n                    class=\"text-right\"\n                  >{{ formatToken(token) }}</span>\n                  <small class=\"text-right\">{{ currency }}{{ formatNumber(token.currency) }}</small>\n                </div>\n              </div>\n              <!--/ tokens -->\n              <div class=\"text-right border-top pt-1\">\n                <h2>Total: {{ currency }}{{ formatNumber(assetTable.currency) }}</h2>\n              </div>\n            </b-col>\n          </b-row>\n        </b-card-body>\n      </b-card>\n      <b-card\n        v-if=\"unbonding && unbonding.length > 0\"\n      >\n        <b-card-header class=\"pt-0 pl-0 pr-0\">\n          <b-card-title>Unbonding Tokens</b-card-title>\n        </b-card-header>\n        <b-card-body class=\"pl-0 pr-0\">\n          <b-row\n            v-for=\"item in unbonding\"\n            :key=\"item.validator_address\"\n          >\n            <b-col cols=\"12\">\n              <span class=\"font-weight-bolder\">From: <router-link :to=\"`../staking/${item.validator_address}`\">{{ item.validator_address }}</router-link></span>\n            </b-col>\n            <b-col cols=\"12\">\n              <b-table\n                :items=\"item.entries\"\n                class=\"mt-1\"\n                striped\n                hover\n                responsive=\"sm\"\n                stacked=\"sm\"\n              >\n                <template #cell(completion_time)=\"data\">\n                  {{ formatDate(data.item.completion_time) }}\n                </template>\n                <template #cell(initial_balance)=\"data\">\n                  {{ data.item.initial_balance }}{{ stakingParameters.bond_denom }}\n                </template>\n                <template #cell(balance)=\"data\">\n                  {{ data.item.balance }}{{ stakingParameters.bond_denom }}\n                </template>\n              </b-table>\n            </b-col>\n          </b-row>\n        </b-card-body>\n      </b-card>\n      <b-card\n        v-if=\"delegations\"\n      >\n        <b-card-header class=\"pt-0 pl-0 pr-0\">\n          <b-card-title>Delegation</b-card-title>\n          <div>\n            <b-button\n              v-b-modal.operation-modal\n              variant=\"primary\"\n              size=\"sm\"\n              class=\"mr-25\"\n              @click=\"setOperationModalType('Delegate')\"\n            >\n              <feather-icon\n                icon=\"LogInIcon\"\n                class=\"d-md-none\"\n              /><small class=\"d-none d-md-block\">Delegate</small>\n            </b-button>\n            <b-button\n              v-if=\"delegations\"\n              v-b-modal.operation-modal\n              variant=\"primary\"\n              size=\"sm\"\n              @click=\"setOperationModalType('Withdraw')\"\n            >\n              <feather-icon\n                icon=\"ShareIcon\"\n                class=\"d-md-none\"\n              /><small class=\"d-none d-md-block\"> Withdraw Rewards</small>\n            </b-button>\n          </div>\n        </b-card-header>\n        <b-card-body class=\"pl-0 pr-0\">\n          <b-table\n            :items=\"deleTable\"\n            stacked=\"sm\"\n          >\n            <template #cell(action)=\"data\">\n              <!-- size -->\n              <b-button-group\n                size=\"sm\"\n              >\n                <b-button\n                  v-b-modal.operation-modal\n                  v-ripple.400=\"'rgba(113, 102, 240, 0.15)'\"\n                  v-b-tooltip.hover.top=\"'Delegate'\"\n                  variant=\"outline-primary\"\n                  @click=\"selectValue(data.value,'Delegate')\"\n                >\n                  <feather-icon icon=\"LogInIcon\" />\n                </b-button>\n                <b-button\n                  v-b-modal.operation-modal\n                  v-ripple.400=\"'rgba(113, 102, 240, 0.15)'\"\n                  v-b-tooltip.hover.top=\"'Redelegate'\"\n                  variant=\"outline-primary\"\n                  @click=\"selectValue(data.value,'Redelegate')\"\n                >\n                  <feather-icon icon=\"ShuffleIcon\" />\n                </b-button>\n                <b-button\n                  v-b-modal.operation-modal\n                  v-ripple.400=\"'rgba(113, 102, 240, 0.15)'\"\n                  v-b-tooltip.hover.top=\"'Unbond'\"\n                  variant=\"outline-primary\"\n                  @click=\"selectValue(data.value,'Unbond')\"\n                >\n                  <feather-icon icon=\"LogOutIcon\" />\n                </b-button>\n              </b-button-group>\n            </template>\n          </b-table>\n        </b-card-body>\n      </b-card>\n\n      <b-card title=\"Transactions\">\n        <b-table\n          :items=\"txs\"\n          striped\n          hover\n          responsive=\"sm\"\n          stacked=\"sm\"\n        >\n          <template #cell(height)=\"data\">\n            <router-link :to=\"`../blocks/${data.item.height}`\">\n              {{ data.item.height }}\n            </router-link>\n          </template>\n          <template #cell(txhash)=\"data\">\n            <router-link :to=\"`../tx/${data.item.txhash}`\">\n              {{ formatHash(data.item.txhash) }}\n            </router-link>\n          </template>\n        </b-table>\n\n        <b-pagination\n          v-if=\"Number(transactions.page_total) > 1\"\n          :total-rows=\"transactions.total_count\"\n          :per-page=\"transactions.limit\"\n          :value=\"transactions.page_number\"\n          align=\"center\"\n          class=\"mt-1\"\n          @change=\"pageload\"\n        />\n      </b-card>\n\n      <b-card\n        v-if=\"account\"\n        title=\"Profile\"\n        class=\"text-trancate\"\n      >\n        <b-table-simple stacked=\"sm\">\n          <b-tbody v-if=\"account.type === 'cosmos-sdk/BaseAccount'\">\n            <b-tr>\n              <b-td>\n                Account Type\n              </b-td><b-td> {{ account.type }} </b-td>\n            </b-tr>\n            <b-tr>\n              <b-td class=\"max-width:100px;\">\n                Account Number\n              </b-td><b-td> {{ account.value.account_number }} </b-td>\n            </b-tr>\n            <b-tr>\n              <b-td> Sequence </b-td><b-td> {{ account.value.sequence }} </b-td>\n            </b-tr>\n            <b-tr>\n              <b-td> Public Key </b-td><b-td> <object-field-component :tablefield=\"account.value.public_key\" /> </b-td>\n            </b-tr>\n          </b-tbody>\n          <b-tbody v-else-if=\"account.type === 'cosmos-sdk/PeriodicVestingAccount' && account.value.base_vesting_account\">\n            <b-tr>\n              <b-td>\n                Account Type\n              </b-td>\n              <b-td>\n                {{ account.type }}\n              </b-td>\n            </b-tr>\n            <b-tr>\n              <b-td>\n                Account Number\n              </b-td><b-td> {{ account.value.base_vesting_account.base_account.account_number }} </b-td>\n            </b-tr>\n            <b-tr>\n              <b-td> Sequence </b-td><b-td> {{ account.value.base_vesting_account.base_account.sequence }} </b-td>\n            </b-tr>\n            <b-tr>\n              <b-td> Public Key </b-td><b-td> <object-field-component :tablefield=\"account.value.base_vesting_account.base_account.public_key\" /> </b-td>\n            </b-tr>\n            <b-tr>\n              <b-td> Original Vesting </b-td><b-td> {{ formatToken(account.value.base_vesting_account.original_vesting) }} </b-td>\n            </b-tr>\n            <b-tr>\n              <b-td> Delegated Free </b-td><b-td> {{ formatToken(account.value.base_vesting_account.delegated_free) }} </b-td>\n            </b-tr>\n            <b-tr>\n              <b-td> Delegated Vesting </b-td><b-td> {{ formatToken(account.value.base_vesting_account.delegated_vesting) }} </b-td>\n            </b-tr>\n            <b-tr>\n              <b-td> Vesting Time </b-td><b-td> {{ formatTime(account.value.start_time) }} - {{ formatTime(account.value.base_vesting_account.end_time) }}</b-td>\n            </b-tr>\n            <b-tr>\n              <b-td> Vesting Periods </b-td>\n              <b-td>\n                <b-table-simple>\n                  <th>Length</th><th>Amount</th>\n                  <b-tr\n                    v-for=\"p, index in account.value.vesting_periods\"\n                    :key=\"index\"\n                  >\n                    <td><small>{{ p.length }} <br>{{ formatLength(p.length) }}</small> </td><td>{{ formatToken(p.amount) }}</td>\n                  </b-tr>\n                </b-table-simple>\n              </b-td>\n            </b-tr>\n          </b-tbody>\n          <b-tbody v-else-if=\"account.type === 'cosmos-sdk/DelayedVestingAccount' && account.value.base_vesting_account\">\n            <b-tr>\n              <b-td>\n                Account Type\n              </b-td><b-td> {{ account.type }} </b-td>\n            </b-tr>\n            <b-tr>\n              <b-td style=\"max-width:100px;\">\n                Account Number\n              </b-td><b-td> {{ account.value.base_vesting_account.base_account.account_number }} </b-td>\n            </b-tr>\n            <b-tr>\n              <b-td> Sequence </b-td><b-td> {{ account.value.base_vesting_account.base_account.sequence }} </b-td>\n            </b-tr>\n            <b-tr>\n              <b-td> Public Key </b-td><b-td> <object-field-component :tablefield=\"account.value.base_vesting_account.base_account.public_key\" /> </b-td>\n            </b-tr>\n            <b-tr>\n              <b-td> Original Vesting </b-td><b-td> {{ formatToken(account.value.base_vesting_account.original_vesting) }} </b-td>\n            </b-tr>\n            <b-tr>\n              <b-td> Delegated Free </b-td><b-td> {{ formatToken(account.value.base_vesting_account.delegated_free) }} </b-td>\n            </b-tr>\n            <b-tr>\n              <b-td> Delegated Vesting </b-td><b-td> {{ formatToken(account.value.base_vesting_account.delegated_vesting) }} </b-td>\n            </b-tr>\n            <b-tr>\n              <b-td> End Time </b-td><b-td> {{ formatTime(account.value.base_vesting_account.end_time) }}</b-td>\n            </b-tr>\n          </b-tbody>\n          <object-field-component\n            v-else\n            :tablefield=\"account.value || account\"\n          />\n        </b-table-simple>\n      </b-card>\n\n      <b-popover\n        target=\"address-qr\"\n        variant=\"dark\"\n        triggers=\"hover\"\n        placement=\"bottom\"\n      >\n        <vue-qr :text=\"address\" />\n      </b-popover>\n\n      <operation-modal\n        :type=\"operationModalType\"\n        :address=\"address\"\n        :validator-address=\"selectedValidator\"\n      />\n      <div id=\"txevent\" />\n    </div>\n    <div v-else>\n      <div class=\"misc-inner p-2 p-sm-3\">\n        <div class=\"w-100 text-center\">\n          <h2 class=\"mb-1\">\n            Account not found  🕵🏻‍♀️\n          </h2>\n          <p class=\"mb-2\">\n            Oops! 😖 {{ error }}.\n          </p>\n\n          <b-button\n            variant=\"primary\"\n            class=\"mb-2 btn-sm-block\"\n            :to=\"{path:'../'}\"\n          >\n            Back to home\n          </b-button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { $themeColors } from '@themeConfig'\nimport dayjs from 'dayjs'\nimport {\n  BCard, BAvatar, BPopover, BTable, BRow, BCol, BTableSimple, BTr, BTd, BTbody, BCardHeader, BCardTitle, BButton, BCardBody, VBModal,\n  BButtonGroup, VBTooltip, BPagination,\n} from 'bootstrap-vue'\nimport FeatherIcon from '@/@core/components/feather-icon/FeatherIcon.vue'\nimport ToastificationContent from '@core/components/toastification/ToastificationContent.vue'\nimport Ripple from 'vue-ripple-directive'\nimport VueQr from 'vue-qr'\nimport chainAPI from '@/libs/fetch'\nimport {\n  formatToken, formatTokenAmount, formatTokenDenom, getStakingValidatorOperator, percent, tokenFormatter, toDay,\n  toDuration, abbrMessage, abbrAddress, getUserCurrency, getUserCurrencySign, numberWithCommas, toETHAddress,\n} from '@/libs/utils'\nimport OperationModal from '@/views/components/OperationModal/index.vue'\nimport ObjectFieldComponent from './components/ObjectFieldComponent.vue'\nimport ChartComponentDoughnut from './components/charts/ChartComponentDoughnut.vue'\n\nexport default {\n  components: {\n    BRow,\n    BCol,\n    BCard,\n    BAvatar,\n    BPopover,\n    BTable,\n    FeatherIcon,\n    VueQr,\n    BTableSimple,\n    BTbody,\n    BCardHeader,\n    BCardTitle,\n    BCardBody,\n    BButton,\n    BButtonGroup,\n    BTr,\n    BTd,\n    BPagination,\n    // eslint-disable-next-line vue/no-unused-components\n    ToastificationContent,\n    ObjectFieldComponent,\n    ChartComponentDoughnut,\n    OperationModal,\n  },\n  directives: {\n    'b-modal': VBModal,\n    'b-tooltip': VBTooltip,\n    Ripple,\n  },\n  beforeRouteUpdate(to, from, next) {\n    // const { address } = this.$route.params\n    const { address } = to.params\n    if (address !== from.params.hash) {\n      this.address = address\n      this.$http.getAuthAccount(this.address).then(acc => {\n        this.account = acc\n        this.initial()\n        this.$http.getTxsBySender(this.address).then(res => {\n          this.transactions = res\n        })\n      }).catch(err => {\n        this.error = err\n      })\n      next()\n    }\n  },\n  data() {\n    const { address } = this.$route.params\n    return {\n      currency: getUserCurrencySign(),\n      selectedValidator: '',\n      totalCurrency: 0,\n      address,\n      account: null,\n      assets: [],\n      reward: [],\n      delegations: [],\n      redelegations: [],\n      unbonding: [],\n      quotes: {},\n      transactions: [],\n      stakingParameters: {},\n      operationModalType: '',\n      error: null,\n    }\n  },\n  computed: {\n    accountTitle() {\n      if (this.account && this.account.type) {\n        return this.account.type.substring(this.account.type.indexOf('/') + 1)\n      }\n      return 'Profile'\n    },\n    txs() {\n      if (this.transactions.txs) {\n        return this.transactions.tx_responses.map(x => ({\n          height: Number(x.height),\n          txhash: x.txhash,\n          msgs: abbrMessage(x.tx.body.messages),\n          time: toDay(x.timestamp),\n        }))\n      }\n      return []\n    },\n    assetTable() {\n      let total = []\n      let sum = 0\n      let sumCurrency = 0\n      total = total.concat(this.assets.map(x => {\n        const xh = x\n        xh.type = 'Balance'\n        xh.color = 'success'\n        xh.icon = 'CreditCardIcon'\n        xh.currency = this.formatCurrency(xh.amount, xh.denom)\n        sumCurrency += xh.currency\n        sum += Number(xh.amount)\n        return xh\n      }))\n\n      let stakingDenom = ''\n\n      if (this.delegations && this.delegations.length > 0) {\n        let temp = 0\n        this.delegations.forEach(x => {\n          const xh = x.balance\n          temp += Number(xh.amount)\n          sumCurrency += this.formatCurrency(xh.amount, xh.denom)\n          sum += Number(xh.amount)\n          stakingDenom = xh.denom\n        })\n        total.push({\n          type: 'Delegation',\n          color: 'primary',\n          icon: 'LockIcon',\n          amount: temp,\n          denom: stakingDenom,\n          currency: this.formatCurrency(temp, stakingDenom),\n        })\n      }\n\n      if (this.reward.total) {\n        total = total.concat(this.reward.total.map(x => {\n          const xh = x\n          xh.type = 'Reward'\n          xh.color = 'warning'\n          xh.icon = 'TrendingUpIcon'\n          xh.currency = this.formatCurrency(xh.amount, xh.denom)\n          sumCurrency += xh.currency\n          sum += Number(xh.amount)\n          return xh\n        }))\n      }\n      if (this.unbonding) {\n        let tmp1 = 0\n        this.unbonding.forEach(x => {\n          x.entries.forEach(e => {\n            tmp1 += Number(e.balance)\n          })\n        })\n        if (this.stakingParameters) stakingDenom = this.stakingParameters.bond_denom\n        const unbonding = this.formatCurrency(tmp1, stakingDenom)\n        sumCurrency += unbonding\n        sum += tmp1\n        total.push({\n          type: 'unbonding',\n          color: 'danger',\n          icon: 'TrendingDownIcon',\n          denom: stakingDenom,\n          amount: tmp1,\n          percent: 0,\n          currency: unbonding,\n        })\n      }\n      total = total.map(x => {\n        const xh = x\n        xh.percent = percent(Number(x.amount) / sum)\n        return xh\n      })\n      return {\n        items: total,\n        currency: parseFloat(sumCurrency.toFixed(2)),\n      }\n    },\n    chartData() {\n      const data = this.assetTable.items.reduce((t, c) => {\n        const th = t\n        if (t[c.type]) {\n          th[c.type] += Number(c.amount)\n        } else {\n          th[c.type] = Number(c.amount)\n        }\n        return th\n      }, [])\n      return {\n        datasets: [\n          {\n            labels: Object.keys(data),\n            data: Object.values(data),\n            backgroundColor: [$themeColors.success, $themeColors.primary, $themeColors.warning, $themeColors.danger, $themeColors.info],\n            borderWidth: 0,\n            pointStyle: 'rectRounded',\n          },\n        ],\n      }\n    },\n    deleTable() {\n      const re = []\n      if (this.reward.rewards && this.delegations && this.delegations.length > 0) {\n        this.delegations.forEach(e => {\n          const reward = this.reward.rewards.find(r => r.validator_address === e.delegation.validator_address)\n          re.push({\n            validator: getStakingValidatorOperator(this.$http.config.chain_name, e.delegation.validator_address, 8),\n            token: formatToken(e.balance, {}, 2),\n            reward: tokenFormatter(reward.reward, this.denoms),\n            action: e.delegation.validator_address,\n          })\n        })\n      }\n      return re\n    },\n    accTable() {\n      let table = {}\n      if (this.account && this.account.type === 'cosmos-sdk/PeriodicVestingAccount') {\n        table = this.account.value\n      }\n      return table\n    },\n    denoms() {\n      return this.$store.state.chains.denoms\n    },\n    isEthAddr() {\n      return JSON.stringify(this.account).indexOf('PubKeyEthSecp256k1') > 0\n    },\n  },\n  created() {\n    this.$http.getAuthAccount(this.address).then(acc => {\n      this.account = acc.account\n      this.initial()\n      this.$http.getTxsBySender(this.address).then(res => {\n        this.transactions = res\n      })\n      this.$http.getStakingParameters().then(res => {\n        this.stakingParameters = res\n      })\n    }).catch(err => {\n      this.error = err\n    })\n  },\n  mounted() {\n    const elem = document.getElementById('txevent')\n    elem.addEventListener('txcompleted', () => {\n      this.initial()\n    })\n  },\n  methods: {\n    initial() {\n      this.$http.getBankAccountBalance(this.address).then(bal => {\n        this.assets = bal\n      })\n      this.$http.getStakingReward(this.address).then(res => {\n        this.reward = res\n      })\n      this.$http.getStakingDelegations(this.address).then(res => {\n        this.delegations = res.delegation_responses || res\n      })\n      this.$http.getStakingUnbonding(this.address).then(res => {\n        this.unbonding = res.unbonding_responses || res\n      })\n    },\n    formatNumber(v) {\n      return numberWithCommas(v)\n    },\n    pageload(v) {\n      this.$http.getTxsBySender(this.address, v).then(res => {\n        this.transactions = res\n      })\n    },\n    selectValue(v, type) {\n      this.selectedValidator = v\n      this.setOperationModalType(type)\n    },\n    setOperationModalType(type) {\n      this.operationModalType = type\n    },\n    formatHash: abbrAddress,\n    formatDenom(v) {\n      return formatTokenDenom(this.denoms[v] ? this.denoms[v] : v)\n    },\n    formatAmount(v, dec = 2, denom = 'uatom', format = true) {\n      return formatTokenAmount(v, dec, denom, format)\n    },\n    formatToken(v) {\n      return tokenFormatter(v, this.denoms)\n    },\n    formatCurrency(amount, denom) {\n      const qty = this.formatAmount(amount, 2, denom, false)\n      const d2 = this.formatDenom(denom)\n      const userCurrency = getUserCurrency()\n      const quote = this.$store.state.chains.quotes[d2]\n      if (quote) {\n        const price = quote[userCurrency]\n        return parseFloat((qty * price).toFixed(2))\n      }\n      return 0\n    },\n    formatDate: v => dayjs(v).format('YYYY-MM-DD HH:mm:ss'),\n    formatTime: v => toDay(Number(v) * 1000),\n    formatLength: v => toDuration(Number(v) * 1000),\n    copy() {\n      this.$copyText(this.address).then(() => {\n        this.$toast({\n          component: ToastificationContent,\n          props: {\n            title: 'Address copied',\n            icon: 'BellIcon',\n          },\n        })\n      }, e => {\n        this.$toast({\n          component: ToastificationContent,\n          props: {\n            title: `Failed to copy address! ${e}`,\n            icon: 'BellIcon',\n            variant: 'danger',\n          },\n        })\n      })\n    },\n    ethaddress() {\n      return toETHAddress(this.address)\n    },\n  },\n}\n</script>\n","/home/imstaked/explorer/src/views/UptimeMyValidators.vue",[],[],"/home/imstaked/explorer/src/views/Uptime.vue",[],[],"/home/imstaked/explorer/src/views/WalletDelegations.vue",["734"],[],"<template>\n  <div>\n    <router-link\n      v-if=\"delegations.length === 0\"\n      to=\"/wallet/import\"\n    >\n      <b-card class=\"addzone text-center\">\n        <feather-icon icon=\"PlusIcon\" />\n        Connect Wallet\n      </b-card>\n    </router-link>\n    <b-card\n      v-for=\"(items,k) in groupedDelegations\"\n      :key=\"`row-${k}`\"\n      :title=\"k\"\n    >\n      <b-row class=\"bg-light-secondary text-white\">\n        <b-col\n          md=\"4\"\n          sm=\"12\"\n          class=\"p-1 font-weight-bold\"\n        >\n          VALIDATOR\n        </b-col>\n        <b-col\n          md=\"3\"\n          sm=\"12\"\n          class=\"p-1 font-weight-bold\"\n        >\n          DELEGATION\n        </b-col>\n        <b-col\n          md=\"5\"\n          sm=\"12\"\n          class=\"p-1 font-weight-bold\"\n        >\n          REWARD\n        </b-col>\n      </b-row>\n      <b-row\n        v-for=\"(row,j) in items\"\n        :key=\"`${row.validator.validator}-${j}`\"\n        class=\"border-bottom\"\n      >\n        <b-col\n          md=\"4\"\n          sm=\"12\"\n          class=\"d-flex align-items-center\"\n        >\n          <router-link :to=\"`/${row.validator.chain}/staking/${row.validator.validator}`\">\n            <div cols=\"6\">\n              <b-avatar\n                :src=\"row.validator.logo\"\n                size=\"18\"\n                variant=\"light-primary\"\n                rounded=\"\"\n              />\n              {{ row.validator.moniker }}\n            </div>\n          </router-link>\n        </b-col>\n        <b-col\n          md=\"3\"\n          sm=\"12\"\n          class=\"d-flex align-items-center\"\n        >\n          {{ row.delegation }}\n        </b-col>\n        <b-col\n          md=\"5\"\n          sm=\"12\"\n        >\n          <router-link :to=\"`/${row.validator.chain}/account/${row.delegator_address}`\">\n            <div>{{ row.reward }}</div>\n            <div class=\"text-success\">\n              {{ currency }}{{ toCurrency(row.reward) }}\n            </div>\n          </router-link>\n        </b-col>\n      </b-row>\n    </b-card>\n  </div>\n</template>\n\n<script>\nimport {\n  VBTooltip, BCard, BAvatar, BRow, BCol,\n} from 'bootstrap-vue'\nimport Ripple from 'vue-ripple-directive'\nimport {\n  formatToken, getCachedValidators, getLocalAccounts, getLocalChains, getUserCurrency, getUserCurrencySign, numberWithCommas, tokenFormatter,\n} from '@/libs/utils'\nimport FeatherIcon from '@/@core/components/feather-icon/FeatherIcon.vue'\n\nexport default {\n  components: {\n    BAvatar,\n    BCard,\n    BRow,\n    BCol,\n    FeatherIcon,\n  },\n  directives: {\n    'b-tooltip': VBTooltip,\n    Ripple,\n  },\n  data() {\n    return {\n      address: '',\n      selectedValidator: '',\n      accounts: [],\n      delegations: [],\n      rewards: {},\n      operationModalType: '',\n      ibcDenoms: {},\n      currency: getUserCurrencySign(),\n      currency2: getUserCurrency(),\n    }\n  },\n  computed: {\n    formatedDelegations() {\n      return this.delegations.map(x => ({\n        validator: {\n          logo: x.chain.logo,\n          validator: x.delegation.validator_address,\n          moniker: this.findMoniker(x.chain.chain_name, x.delegation.validator_address),\n          chain: x.chain.chain_name,\n        },\n        delegator: x.keyname,\n        delegator_address: x.delegation.delegator_address,\n        delegation: formatToken(x.balance),\n        reward: this.findReward(x.delegation.delegator_address, x.delegation.validator_address),\n        // action: '',\n      }))\n    },\n    groupedDelegations() {\n      const group = {}\n      this.delegations.forEach(x => {\n        const d = {\n          validator: {\n            logo: x.chain.logo,\n            validator: x.delegation.validator_address,\n            moniker: this.findMoniker(x.chain.chain_name, x.delegation.validator_address),\n            chain: x.chain.chain_name,\n          },\n          delegator: x.keyname,\n          delegator_address: x.delegation.delegator_address,\n          delegation: formatToken(x.balance),\n          reward: this.findReward(x.delegation.delegator_address, x.delegation.validator_address),\n          // action: '',\n        }\n        if (group[x.keyname]) {\n          group[x.keyname].push(d)\n        } else {\n          group[x.keyname] = [d]\n        }\n      })\n      return group\n    },\n  },\n  created() {\n    this.init()\n  },\n  methods: {\n    selectValue(type, v) {\n      this.operationModalType = type\n      this.address = v.delegator_address\n      this.selectedValidator = v.validator.validator\n      return v\n    },\n    findMoniker(chain, addr) {\n      const vals = JSON.parse(getCachedValidators(chain))\n      if (vals) {\n        const val = vals.find(x => x.operator_address === addr)\n        if (val) {\n          return val.description.moniker\n        }\n      }\n      return addr\n    },\n    findReward(delegator, validator) {\n      const reward = this.rewards[delegator]?.rewards.find(x => x.validator_address === validator) || null\n      if (reward) {\n        return tokenFormatter(reward.reward, this.ibcDenoms)\n      }\n      return '-'\n    },\n    getPrice(denom) {\n      const quote = this.$store.state.chains.quotes[denom]\n      return quote ? quote[this.currency2] : 0\n    },\n    toCurrency(token) {\n      let profit = 0\n      token.split(', ').forEach(r => {\n        const t = r.trim().replace(/,/, '').split(' ')\n        profit += Number(t[0]) * this.getPrice(t[1])\n      })\n      return numberWithCommas(profit.toFixed(2))\n    },\n    init() {\n      this.accounts = getLocalAccounts()\n      const chains = getLocalChains()\n      if (this.accounts) {\n        Object.keys(this.accounts).forEach(acc => {\n          this.accounts[acc].address.forEach(add => {\n            const chain = chains[add.chain]\n            this.$http.getStakingReward(add.addr, chain).then(res => {\n              this.rewards[add.addr] = res\n              res.total.forEach(t => {\n                if (t.denom.startsWith('ibc')) {\n                  this.$http.getIBCDenomTrace(t.denom, chain).then(denom => {\n                    this.$set(this.ibcDenoms, t.denom, denom)\n                  })\n                }\n              })\n            })\n            this.$http.getStakingDelegations(add.addr, chain).then(res => {\n              if (res.delegation_responses && res.delegation_responses.length > 0) {\n                const delegation = res.delegation_responses.map(x => {\n                  const x2 = x\n                  x2.keyname = acc\n                  x2.chain = chain\n                  return x2\n                })\n                this.delegations = this.delegations.concat(delegation)\n              }\n            }).catch(() => {})\n          })\n        })\n      }\n    },\n  },\n}\n</script>\n\n<style lang=\"css\">\n.addzone {\n    border: 2px dashed #ced4da;\n    background: #fff;\n    border-radius: 6px;\n    cursor: pointer;\n    box-shadow: none;\n}\n.addzone :hover {\n    border: 2px dashed #7367F0;\n}\n\n</style>\n","/home/imstaked/explorer/src/views/WalletAccountImportAddress.vue",[],["735","736","737"],"/home/imstaked/explorer/src/views/WalletAccounts.vue",["738","739"],[],"<template>\n  <div class=\"text-center\">\n    <b-card\n      v-if=\"calculateTotalChange !== 0\"\n      border-variant=\"primary\"\n    >\n      <b-row class=\"mx-0 d-flex align-items-center\">\n        <b-col\n          md=\"4\"\n          class=\"py-0\"\n        >\n          <b-dropdown\n            :text=\"`Currency: ${currency2.toUpperCase()}`\"\n            size=\"sm\"\n            class=\"text-uppercase\"\n            variant=\"primary\"\n          >\n            <b-dropdown-item @click=\"setCurrency('usd')\">\n              USD\n            </b-dropdown-item>\n            <b-dropdown-item @click=\"setCurrency('cny')\">\n              CNY (人民币)\n            </b-dropdown-item>\n            <b-dropdown-item @click=\"setCurrency('eur')\">\n              EUR (Euro)\n            </b-dropdown-item>\n            <b-dropdown-item @click=\"setCurrency('jpy')\">\n              JPY (日本円)\n            </b-dropdown-item>\n            <b-dropdown-item @click=\"setCurrency('hkd')\">\n              HKD (港幣)\n            </b-dropdown-item>\n            <b-dropdown-item @click=\"setCurrency('sgd')\">\n              SGD (新加坡元)\n            </b-dropdown-item>\n            <b-dropdown-item @click=\"setCurrency('krw')\">\n              KRW (대한민국원)\n            </b-dropdown-item>\n          </b-dropdown>\n          <h2 class=\"mt-1 mb-0\">\n            {{ currency }}{{ (calculateTotal) }}\n          </h2>\n          <small\n            v-if=\"calculateTotalChange > 0\"\n            class=\"my-0 text-success\"\n          >\n            +{{ formatTotalChange(calculateTotalChange) }} (24h)\n          </small>\n          <small\n            v-else\n            class=\"my-0 text-danger\"\n          >\n            {{ formatTotalChange(calculateTotalChange) }} (24h)\n          </small>\n          <span @click=\"refreshPrice()\">\n            <feather-icon\n              icon=\"RefreshCwIcon\"\n              size=\"12\"\n            /></span>\n          <!-- chart -->\n          <chart-component-doughnut\n            :height=\"160\"\n            :width=\"160\"\n            :data=\"calculateChartDoughnut\"\n          />\n        </b-col>\n        <b-col\n          md=\"8\"\n        >\n          <echart-scatter\n            :items.sync=\"scatters\"\n            auto-resize\n          />\n        </b-col>\n      </b-row>\n    </b-card>\n\n    <div\n      v-for=\"item,index in accounts\"\n      :key=\"index\"\n    >\n      <div>\n        <div class=\"d-flex justify-content-between align-items-end mb-1\">\n          <b-button\n            v-ripple.400=\"'rgba(255, 255, 255, 0.15)'\"\n            variant=\"warning\"\n            :to=\"`/wallet/import?name=${item.name}`\"\n          >\n            <feather-icon\n              icon=\"EditIcon\"\n              class=\"mr-50\"\n            />\n            <span class=\"align-middle\">{{ item.name }}</span>\n          </b-button>\n          <div class=\"mr-50\">\n            <router-link\n              :to=\"`/wallet/import?name=${item.name}`\"\n              class=\"mr-50\"\n            >\n              <feather-icon\n                icon=\"EditIcon\"\n                class=\"mr-10\"\n              />\n              <span class=\"align-middle\">Edit</span>\n            </router-link>\n          </div>\n        </div>\n\n        <b-row>\n          <b-col\n            v-for=\"acc, j in item.address\"\n            :key=\"j\"\n            sm=\"12\"\n            md=\"6\"\n            xl=\"4\"\n          >\n\n            <b-card\n              no-body\n              class=\"card-browser-states\"\n            >\n              <b-card-header>\n                <div>\n                  <b-card-title> <span class=\"text-uppercase\">{{ acc.chain }}</span></b-card-title>\n                </div>\n                <feather-icon\n                  v-b-tooltip.hover.v-danger\n                  :title=\"`Remove ${acc.chain.toUpperCase()}`\"\n                  icon=\"XSquareIcon\"\n                  size=\"18\"\n                  class=\"cursor-pointer text-danger\"\n                  @click=\"removeAddress(acc.addr)\"\n                />\n              </b-card-header>\n              <b-card-body class=\"text-truncate\">\n                <b-row>\n                  <b-col>\n                    <div class=\"d-flex justify-content-between\">\n                      <b-avatar\n                        :src=\"acc.logo\"\n                        size=\"28\"\n                        variant=\"light-primary\"\n                        rounded\n                      />\n                      <div class=\"text-right\">\n                        <h4 class=\"my-0\">{{ currency }}{{ formatBalance(acc.addr) }}\n                        </h4>\n                        <small :class=\"formatBalanceChangesColor(acc.addr)\"> {{ formatBalanceChanges(acc.addr) }}</small>\n                      </div>\n                    </div>\n                    <app-collapse>\n                      <app-collapse-item title=\"Assets\">\n                        <template #header>\n                          <div>\n                            <feather-icon\n                              icon=\"CopyIcon\"\n                              @click=\"copy(acc.addr)\"\n                            />&nbsp;\n                            <small class=\"text-muted\">{{ formatAddr(acc.addr) }}</small>\n                          </div>\n                        </template>\n                        <div\n                          v-for=\"b,i in balances[acc.addr]\"\n                          :key=\"i\"\n                          class=\"d-flex justify-content-between\"\n                        >\n                          <div\n                            class=\"ml-25 font-weight-bolder text-uppercase text-success d-flex flex-column text-left\"\n                            title=\"Balance\"\n                          >\n                            {{ formatAmount(b.amount, b.denom) }} {{ formatDenom(b.denom) }}\n                            <span class=\"font-small-2 text-muted text-nowrap\">{{ currency }}{{ formatCurrency(b.amount, b.denom) }}</span>\n                          </div>\n                          <div class=\"d-flex flex-column text-right\">\n                            <span class=\"font-weight-bold mb-0\">{{ currency }}{{ formatPrice(b.denom) }}</span>\n                            <small\n                              :class=\"priceColor(b.denom)\"\n                              class=\"py-0\"\n                            >{{ formatChanges(b.denom) }}</small>\n                          </div>\n                        </div>\n                        <div\n                          v-for=\"b,i in delegations[acc.addr]\"\n                          :key=\"`d-${i}`\"\n                          class=\"d-flex justify-content-between align-items-center\"\n                        >\n                          <div\n                            class=\"ml-25 font-weight-bolder text-uppercase text-primary d-flex flex-column text-left\"\n                            title=\"Balance\"\n                          >\n                            {{ formatAmount(b.amount, b.denom) }} {{ formatDenom(b.denom) }}\n                            <span class=\"font-small-2 text-muted text-nowrap\">{{ currency }}{{ formatCurrency(b.amount, b.denom) }}</span>\n                          </div>\n                          <div class=\"d-flex flex-column text-right\">\n                            <span class=\"font-weight-bold mb-0\">{{ currency }}{{ formatPrice(b.denom) }}</span>\n                            <small\n                              :class=\"priceColor(b.denom)\"\n                              class=\"py-0\"\n                            >{{ formatChanges(b.denom) }}</small>\n                          </div>\n                        </div>\n                        <b-button\n                          block\n                          size=\"sm\"\n                          variant=\"outline-primary\"\n                          :to=\"`/${acc.chain}/account/${acc.addr}`\"\n                          class=\"mt-1 mb-0\"\n                          @click=\"updateDefaultWallet(item.name)\"\n                        >\n                          <feather-icon icon=\"TrelloIcon\" /> Detail\n                        </b-button>\n                      </app-collapse-item>\n                    </app-collapse>\n                  </b-col>\n                </b-row>\n              </b-card-body>\n            </b-card>\n          </b-col>\n        </b-row>\n      </div>\n    </div>\n\n    <router-link to=\"/wallet/import\">\n      <b-card class=\"addzone\">\n        <feather-icon icon=\"PlusIcon\" />\n        Connect Wallet\n      </b-card>\n    </router-link>\n    <operation-modal\n      :type=\"operationModalType\"\n      :address=\"selectedAddress\"\n      :selected-chain-name=\"selectedChainName\"\n    />\n  </div>\n</template>\n\n<script>\nimport {\n  BCard, BCardHeader, BCardTitle, BCardBody, VBModal, BRow, BCol, BAvatar, BButton,\n  BDropdown, BDropdownItem, VBTooltip,\n} from 'bootstrap-vue'\nimport Ripple from 'vue-ripple-directive'\nimport FeatherIcon from '@/@core/components/feather-icon/FeatherIcon.vue'\nimport {\n  chartColors,\n  formatNumber,\n  formatTokenAmount, formatTokenDenom, getLocalAccounts, getLocalChains, getUserCurrency, getUserCurrencySign, numberWithCommas, setUserCurrency,\n} from '@/libs/utils'\nimport ToastificationContent from '@core/components/toastification/ToastificationContent.vue'\nimport AppCollapse from '@core/components/app-collapse/AppCollapse.vue'\nimport AppCollapseItem from '@core/components/app-collapse/AppCollapseItem.vue'\nimport OperationModal from '@/views/components/OperationModal/index.vue'\nimport ChartComponentDoughnut from './components/charts/ChartComponentDoughnut.vue'\nimport EchartScatter from './components/charts/EchartScatter.vue'\n\nexport default {\n  components: {\n    BAvatar,\n    BCard,\n    BRow,\n    BButton,\n    BCol,\n    BCardHeader,\n    BCardBody,\n    BCardTitle,\n    BDropdown,\n    BDropdownItem,\n    // eslint-disable-next-line vue/no-unused-components\n    VBTooltip,\n    FeatherIcon,\n    // eslint-disable-next-line vue/no-unused-components\n    ToastificationContent,\n    ChartComponentDoughnut,\n    AppCollapse,\n    AppCollapseItem,\n    EchartScatter,\n    OperationModal,\n  },\n  directives: {\n    'b-tooltip': VBTooltip,\n    'b-modal': VBModal,\n    Ripple,\n  },\n  data() {\n    return {\n      currency: getUserCurrencySign(),\n      currency2: getUserCurrency(),\n      selectedAddress: '',\n      selectedName: '',\n      transferWindow: false,\n      accounts: [],\n      balances: {},\n      delegations: {},\n      ibcDenom: {},\n      quotes: {},\n      operationModalType: '',\n      selectedChainName: '',\n      options: {\n        maintainAspectRatio: false,\n        legend: {\n          display: false,\n        },\n        // responsive: true,\n        title: {\n          display: true,\n          text: 'Token Portfolio',\n        },\n        tooltips: {\n          mode: 'index',\n          intersect: true,\n        },\n        scales: {\n          yAxes: [{\n            // type: 'linear', // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance\n            type: 'logarithmic',\n            display: true,\n            position: 'left',\n            id: 'y-axis-1',\n            ticks: {\n              min: 0,\n              autoskipping: true,\n              display: true,\n              maxTicksLimit: 7,\n              callback(val) {\n                return formatNumber(val, true, 0)\n              },\n              color: 'red',\n            },\n            offset: true,\n            gridLines: {\n              display: true,\n              offsetGridLines: false,\n            },\n          }, {\n            type: 'linear', // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance\n            display: false,\n            position: 'right',\n            id: 'y-axis-2',\n            gridLines: {\n              drawOnChartArea: true,\n            },\n          }],\n        },\n      },\n    }\n  },\n  computed: {\n    calculateTotal() {\n      let total = 0\n      if (this.calculateByDenom.value) {\n        Object.values(this.calculateByDenom.value).forEach(i => {\n          total += i\n        })\n      }\n      return numberWithCommas(parseFloat(total.toFixed(2)))\n    },\n    scatters() {\n      const total = []\n      if (this.calculateByDenom.qty) {\n        Object.entries(this.calculateByDenom.qty).forEach(i => {\n          const price = this.getPrice(i[0])\n          total.push([Math.sqrt(i[1]), Math.sqrt(price), i[1] * price, i[0]])\n        })\n      }\n      return total.sort((a, b) => b[2] - a[2])\n    },\n    calculateTotalChange() {\n      let total = 0\n      if (this.calculateByDenom.value) {\n        Object.entries(this.calculateByDenom.value).forEach(i => {\n          total += i[1] * this.getChanges(i[0]) * 0.01\n        })\n      }\n      return parseFloat(total.toFixed(2))\n    },\n    calculateByDenom() {\n      const v = Object.values(this.balances)\n      const total = {}\n      const qty = {}\n      if (v) {\n        v.forEach(tokens => {\n          tokens.forEach(x => {\n            const denom = this.formatDenom(x.denom)\n            if (total[denom]) {\n              total[denom] += this.formatCurrency(x.amount, x.denom)\n            } else {\n              total[denom] = this.formatCurrency(x.amount, x.denom)\n            }\n            if (qty[denom]) {\n              qty[denom] += this.formatAmount(x.amount, x.denom, false)\n            } else {\n              qty[denom] = this.formatAmount(x.amount, x.denom, false)\n            }\n          })\n        })\n      }\n      const d = Object.values(this.delegations)\n      if (d) {\n        d.forEach(tokens => {\n          tokens.forEach(x => {\n            const denom = this.formatDenom(x.denom)\n            if (total[denom]) {\n              total[denom] += this.formatCurrency(x.amount, x.denom)\n            } else {\n              total[denom] = this.formatCurrency(x.amount, x.denom)\n            }\n            if (qty[denom]) {\n              qty[denom] += this.formatAmount(x.amount, x.denom, false)\n            } else {\n              qty[denom] = this.formatAmount(x.amount, x.denom, false)\n            }\n          })\n        })\n      }\n      return { value: total, qty }\n    },\n    calculateChartDoughnut() {\n      const total = this.calculateByDenom\n      const labels = []\n      const data = []\n      Object.entries(total.value).sort((a, b) => b[1] - a[1]).forEach(i => {\n        labels.push(i[0])\n        data.push(i[1])\n      })\n      return {\n        datasets: [\n          {\n            labels,\n            data,\n            backgroundColor: chartColors(),\n            borderWidth: 0,\n            pointStyle: 'rectRounded',\n          },\n        ],\n      }\n    },\n  },\n  created() {\n    this.init()\n  },\n  mounted() {\n  },\n  methods: {\n    refreshPrice() {\n      this.$store.dispatch('chains/getQuotes')\n    },\n    init() {\n      this.accounts = getLocalAccounts()\n      const chains = getLocalChains()\n      if (this.accounts) {\n        Object.keys(this.accounts).forEach(acc => {\n          this.accounts[acc].address.forEach(add => {\n            this.$http.getBankBalances(add.addr, chains[add.chain]).then(res => {\n              const { balances } = res\n              if (balances && balances.length > 0) {\n                this.$set(this.balances, add.addr, balances)\n                balances.forEach(token => {\n                  if (token.denom.startsWith('ibc')) {\n                    this.$http.getIBCDenomTrace(token.denom, chains[add.chain]).then(denom => {\n                      this.$set(this.ibcDenom, token.denom, denom)\n                    })\n                  }\n                })\n              }\n            })\n            this.$http.getStakingDelegations(add.addr, chains[add.chain]).then(res => {\n              if (res.delegation_responses) {\n                const delegation = res.delegation_responses.map(x => x.balance).reduce((t, c) => {\n                  const t1 = t\n                  if (t1[c.denom]) {\n                    t1[c.denom] += Number(c.amount)\n                  } else {\n                    t1[c.denom] = Number(c.amount)\n                  }\n                  return t1\n                }, {})\n                this.$set(this.delegations, add.addr, Object.keys(delegation).map(x => ({ amount: String(delegation[x]), denom: x })))\n              }\n            }).catch(() => {})\n          })\n        })\n      }\n    },\n    setCurrency(c) {\n      setUserCurrency(c)\n      this.currency2 = c\n      this.currency = getUserCurrencySign()\n    },\n    transfer(type, addr, chain) {\n      this.operationModalType = type\n      this.selectedAddress = addr\n      this.selectedChainName = chain\n    },\n    completeAdd() {\n      this.init()\n      this.$bvModal.hide('add-account')\n    },\n    formatDenom(v) {\n      if (!v) return ''\n      const denom = (v.startsWith('ibc') ? this.ibcDenom[v] : v)\n      return formatTokenDenom(denom)\n    },\n    formatTotalChange(v) {\n      return numberWithCommas(v)\n    },\n    formatAmount(v, denom = 'uatom', format = true) {\n      if (!v) return ''\n      const denom2 = (denom.startsWith('ibc') ? this.ibcDenom[denom] : denom)\n      return formatTokenAmount(v, 2, denom2, format)\n    },\n    formatAddr(v) {\n      return v.substring(0, 10).concat('...', v.substring(v.length - 10))\n    },\n    formatCurrency(amount, denom) {\n      const qty = this.formatAmount(amount, denom, false)\n      return parseFloat((qty * this.getPrice(denom)).toFixed(2))\n    },\n    priceColor(denom) {\n      const d2 = this.formatDenom(denom)\n      const quote = this.$store.state.chains.quotes[d2]\n      if (quote) {\n        const price = quote[`${this.currency2}_24h_change`]\n        return price > 0 ? 'text-success' : 'text-danger'\n      }\n      return ''\n    },\n    getPrice(denom) {\n      const d2 = this.formatDenom(denom)\n      const quote = this.$store.state.chains.quotes[d2]\n      return quote ? quote[this.currency2] || 0 : 0\n    },\n    getChanges(denom) {\n      const d2 = this.formatDenom(denom)\n      const quote = this.$store.state.chains.quotes[d2]\n      if (quote) {\n        const price = quote[`${this.currency2}_24h_change`]\n        return price || 0\n      }\n      return 0\n    },\n    formatChanges(denom) {\n      const price = this.getChanges(denom)\n      if (price > 0) {\n        return `+${parseFloat(price.toFixed(2))}%`\n      }\n      return '0'\n    },\n    formatPrice(denom) {\n      const d2 = this.formatDenom(denom)\n      const quote = this.$store.state.chains.quotes[d2]\n      if (quote) {\n        const price = quote[this.currency2]\n        return price\n      }\n      return 0\n    },\n    formatBalance(v) {\n      let total = 0\n      const balance = this.balances[v]\n      if (balance) {\n        const ret = balance.map(x => this.formatCurrency(x.amount, x.denom)).reduce((t, c) => t + c)\n        total += ret\n      }\n      const delegations = this.delegations[v]\n      if (delegations) {\n        const ret = delegations.map(x => this.formatCurrency(x.amount, x.denom)).reduce((t, c) => t + c, 0)\n        total += ret\n      }\n      return numberWithCommas(parseFloat(total.toFixed(2)))\n    },\n    formatBalanceChanges(v) {\n      let total = 0\n      const balance = this.balances[v]\n      if (balance) {\n        const ret = balance.map(x => this.formatCurrency(x.amount, x.denom) * this.getChanges(x.denom) * 0.01).reduce((t, c) => t + c)\n        total += ret\n      }\n      const delegations = this.delegations[v]\n      if (delegations) {\n        const ret = delegations.map(x => this.formatCurrency(x.amount, x.denom) * this.getChanges(x.denom) * 0.01).reduce((t, c) => t + c, 0)\n        total += ret\n      }\n      return total > 0 ? `+${parseFloat(total.toFixed(2))}` : parseFloat(total.toFixed(2))\n    },\n    formatBalanceChangesColor(v) {\n      const total = this.formatBalanceChanges(v)\n      return total > 0 ? 'text-success' : 'text-danger'\n    },\n    removeAddress(v) {\n      Object.keys(this.accounts).forEach(key => {\n        const item = this.accounts[key]\n        const newAddrs = item.address.filter(a => a.addr !== v)\n        if (newAddrs.length > 0) {\n          this.$set(item, 'address', newAddrs)\n        } else {\n          delete this.accounts[key]\n        }\n      })\n      localStorage.setItem('accounts', JSON.stringify(this.accounts))\n    },\n    updateDefaultWallet(v) {\n      this.$store.commit('setDefaultWallet', v)\n    },\n    copy(v) {\n      this.$copyText(v).then(() => {\n        this.$toast({\n          component: ToastificationContent,\n          props: {\n            title: 'Address copied',\n            icon: 'BellIcon',\n          },\n        })\n      }, e => {\n        this.$toast({\n          component: ToastificationContent,\n          props: {\n            title: `Failed to copy address! ${e}`,\n            icon: 'BellIcon',\n            variant: 'danger',\n          },\n        })\n      })\n    },\n  },\n}\n</script>\n\n<style lang=\"css\">\n.addzone {\n    border: 2px dashed #ced4da;\n    background: #fff;\n    border-radius: 6px;\n    cursor: pointer;\n    box-shadow: none;\n}\n.addzone :hover {\n    border: 2px dashed #7367F0;\n}\n\n</style>\n","/home/imstaked/explorer/src/views/Home.vue",[],["740","741","742"],"/home/imstaked/explorer/src/views/StateSync.vue",[],[],"/home/imstaked/explorer/src/views/error/ChainNotExist.vue",[],["743","744","745"],"/home/imstaked/explorer/src/views/error/Error404.vue",[],["746","747","748"],"/home/imstaked/explorer/src/views/Parameters.vue",[],[],"/home/imstaked/explorer/src/views/Dashboard.vue",[],[],"/home/imstaked/explorer/src/views/WalletVotes.vue",[],[],"/home/imstaked/explorer/src/views/WalletTransactions.vue",[],[],"/home/imstaked/explorer/src/@core/layouts/components/Coffee.vue",[],[],"/home/imstaked/explorer/src/libs/utils.js",[],["749"],"/home/imstaked/explorer/src/store/app/index.js",[],[],"/home/imstaked/explorer/src/libs/osmos.js",["750"],[],"/*\n * @Description: file\n * @Autor: dingyiming\n * @Date: 2021-11-22 21:20:10\n * @LastEditors: dingyiming\n * @LastEditTime: 2021-11-25 00:45:16\n */\nimport { sha256 } from '@cosmjs/crypto'\nimport { toHex } from '@cosmjs/encoding'\nimport fetch from 'node-fetch'\nimport { formatTokenDenom, getLocalChains } from './utils'\n\nexport const poolIds = {\n  1: true,\n  2: true,\n  3: true,\n  4: true,\n  5: true,\n  6: true,\n  7: true,\n  8: true,\n  9: true,\n  10: true,\n  13: true,\n  15: true,\n  461: true,\n  482: true,\n  497: true,\n  498: true,\n  548: true,\n  // 557: true,\n  // 558: true,\n  // 571: true,\n  // 572: true,\n}\n\nexport const CoinGeckoMap = {\n  ATOM: ['cosmos'],\n  OSMO: ['osmosis'],\n  IRIS: ['iris-network'],\n  AKT: ['akash-network'],\n  LUNA: ['terra-luna'],\n  UST: ['terrausd'],\n  KRT: ['terra-krw'],\n  BAND: ['band-protocol'],\n  CRO: ['crypto-com-chain'],\n  KAVA: ['kava'],\n  OKT: ['okexchain'],\n  CTK: ['certik'],\n  XPRT: ['persistence'],\n  REGEN: ['regen'],\n  SCRT: ['secret'],\n  DVPN: ['sentinel'],\n  ION: ['ion'],\n  ROWAN: ['sifchain'],\n  IOV: ['starname'],\n  BTSG: ['bitsong'],\n  NGM: ['e-money'],\n  EEUR: ['e-money-eur'],\n  LIKE: ['likecoin'],\n  JUNO: ['juno-network'],\n  STGZ: ['stargaze-protocol'],\n  VDL: ['vidulum'],\n  XKI: ['ki'],\n  INJ: ['injective-protocol'],\n}\n\nexport function getChainConfigForSymbol(symbol) {\n  const key = CoinGeckoMap[symbol]\n  if (key) {\n    const confs = getLocalChains()\n    return Object.values(confs).find(x => x.coingecko === key[0])\n  }\n  return null\n}\n\nexport function getPairName(pool, denomTrace, type = 'base', isFormat = true) {\n  const index = type === 'base' ? 0 : 1\n  if (pool && pool.poolAssets) {\n    const denom = pool.poolAssets[index].token.denom.startsWith('ibc')\n      ? denomTrace[pool.poolAssets[index].token.denom]?.base_denom : pool.poolAssets[index].token.denom\n    return isFormat ? formatTokenDenom(denom) : denom\n  }\n  return '-'\n}\n\nexport default class OsmosAPI {\n  preHandler() {\n    this.version = ''\n  }\n\n  async get(url) {\n    const chains = getLocalChains()\n    const conf = chains.osmosis\n    const index = this.getApiIndex(conf)\n    this.host = Array.isArray(conf.api) ? conf.api[index] : conf.api\n    return fetch(`${this.host}${url}`).then(res => res.json())\n  }\n\n  getApiIndex(config = null) {\n    const conf = config || this.config\n    const index = Number(localStorage.getItem(`${conf.chain_name}-api-index`) || 0)\n    return index < conf.api.length ? index : 0\n  }\n\n  async getMarketData(from, to, days = 14) {\n    if (from && to) {\n      this.exe_time = ''\n      return Promise.all(\n        [fetch(`https://api.coingecko.com/api/v3/coins/${from}/market_chart?vs_currency=usd&days=${days}`).then(res => res.json()),\n          fetch(`https://api.coingecko.com/api/v3/coins/${to}/market_chart?vs_currency=usd&days=${days}`).then(res => res.json())],\n      ).then(data => {\n        const output = []\n        if (data.length >= 2) {\n          data[0].prices.forEach((x, i) => {\n            if (data[1].prices[i]) {\n              output.push([x[0], (x[1] / data[1].prices[i][1]).toFixed(6)])\n            }\n          })\n        }\n        return { prices: output }\n      })\n    }\n    return { prices: [] }\n  }\n\n  async getOHCL4Pairs(from, to) {\n    if (from && to) {\n      this.exe_time = ''\n      return Promise.all(\n        [fetch(`https://api.coingecko.com/api/v3/coins/${from}/ohlc?vs_currency=usd&days=1`).then(res => res.json()),\n          fetch(`https://api.coingecko.com/api/v3/coins/${to}/ohlc?vs_currency=usd&days=1`).then(res => res.json())],\n      ).then(ohlc => {\n        const output = []\n        ohlc[0].forEach((e, i) => {\n          const price = [e[0]]\n          for (let j = 1; j <= 4; j += 1) {\n            price.push(e[j] / ohlc?.[1]?.[i]?.[j])\n          }\n          output.push(price)\n        })\n        const result = []\n        for (let i = 0; i < output.length; i += 1) {\n          const itemArr = output[i]\n          result.push([\n            itemArr[0],\n            itemArr[1], // open\n            itemArr[2], // high\n            itemArr[3], // low\n            itemArr[4], // close\n            0, // volume\n          ])\n        }\n        return result\n      })\n    }\n    return null\n  }\n\n  // Custom Module\n  async getPools() {\n    const tradeable = []\n    Object.keys(poolIds).forEach(k => {\n      if (poolIds[k]) {\n        tradeable.push(k)\n      }\n    })\n    return this.get('/osmosis/gamm/v1beta1/pools?pagination.limit=700').then(res => {\n      const output = res.pools.filter(x => tradeable.includes(x.id))\n      return output\n    })\n  }\n\n  async getDenomTraces() {\n    return this.get('/ibc/apps/transfer/v1/denom_traces?pagination.limit=500').then(x => {\n      const combined = {}\n      x.denom_traces.forEach(item => {\n        const k = 'ibc/'.concat(toHex(sha256(new TextEncoder('utf-8').encode(`${item.path}/${item.base_denom}`))).toUpperCase())\n        combined[k] = item\n      })\n      return combined\n    })\n  }\n\n  async getIncentivesPools() {\n    return this.get('/osmosis/pool-incentives/v1beta1/incentivized_pools?pagination.limit=700')\n  }\n}\n","/home/imstaked/explorer/src/store/app-config/index.js",[],[],"/home/imstaked/explorer/src/store/vertical-menu/index.js",[],[],"/home/imstaked/explorer/src/store/chains/index.js",[],[],"/home/imstaked/explorer/themeConfig.js",[],[],"/home/imstaked/explorer/src/libs/data/index.js",[],[],"/home/imstaked/explorer/src/views/components/FullHeader.vue",[],[],"/home/imstaked/explorer/src/views/components/charts/EchartScatter.vue",[],[],"/home/imstaked/explorer/src/layouts/full/LayoutFull.vue",[],[],"/home/imstaked/explorer/src/layouts/vertical/LayoutVertical.vue",[],[],"/home/imstaked/explorer/src/views/UptimeMyChainBlocks.vue",[],[],"/home/imstaked/explorer/src/views/components/ObjectFieldComponent.vue",["751"],[],"<template>\n  <b-table-simple\n    v-if=\"typeof tablefield === 'object'\"\n    hover\n    :small=\"small\"\n    striped\n    stacked=\"sm\"\n    responsive=\"sm\"\n  >\n    <b-tbody>\n      <b-tr\n        v-for=\"(value, name) in tablefield\"\n        :key=\"name\"\n      >\n        <b-td\n          style=\"text-transform: capitalize; vertical-align: top;\"\n        >\n          {{ formatTitle(name) }}\n        </b-td>\n        <b-td v-if=\"isTokenField(value)\">\n          {{ formatTokens( value ) }}\n        </b-td>\n        <b-td v-else-if=\"isArrayText(value)\">\n          {{ value.join(', ') }}\n        </b-td>\n        <b-td v-else-if=\"isHex(value)\">\n          {{ formatHexAddress(value) }}\n        </b-td>\n        <b-td v-else-if=\"Array.isArray(value)\">\n          <array-field-component :tablefield=\"value\" />\n        </b-td>\n        <b-td\n          v-else-if=\"typeof (value) ==='object'\"\n          hover\n          class=\"overflow-hidden\"\n        >\n          <b-tabs\n            v-if=\"value\"\n            small\n          >\n            <b-tab\n              v-for=\"key in Object.keys(value)\"\n              :key=\"key\"\n              :title=\"formatTitle(key)\"\n              class=\"p-0 text-capitalize\"\n              title-item-class=\"bg-light-primary\"\n            >\n              <array-field-component\n                v-if=\"Array.isArray(value[key])\"\n                :tablefield=\"value[key]\"\n              />\n              <object-field-component\n                v-else-if=\"typeof value[key] === 'object'\"\n                :tablefield=\"value[key]\"\n              />\n              <object-field-component\n                v-else-if=\"isObjectText(value[key])\"\n                :tablefield=\"toObject(value[key])\"\n              />\n              <div\n                v-else\n                style=\"max-width: 800px; max-height: 300px; overflow: auto;\"\n              >{{ value[key] }}</div>\n            </b-tab>\n          </b-tabs>\n        </b-td>\n        <b-td v-else>\n          <VueMarkdown v-if=\"name==='description'\">\n            {{ addNewLine(value) }}\n          </VueMarkdown>\n          <div\n            v-else\n            style=\"max-width: 800px; max-height: 300px; overflow: auto;\"\n          >{{ value }}</div>\n        </b-td>\n      </b-tr>\n    </b-tbody>\n  </b-table-simple>\n</template>\n\n<script>\nimport {\n  BTableSimple, BTr, BTd, BTabs, BTab, BTbody,\n} from 'bootstrap-vue'\nimport {\n  abbr, getStakingValidatorByHex, isHexAddress, isStringArray, isToken, percent, tokenFormatter,\n} from '@/libs/utils'\nimport VueMarkdown from 'vue-markdown'\nimport ArrayFieldComponent from './ArrayFieldComponent.vue'\n\nexport default {\n  name: 'ObjectFieldComponent',\n  components: {\n    BTableSimple,\n    BTr,\n    BTd,\n    BTabs,\n    BTab,\n    BTbody,\n    ArrayFieldComponent,\n    VueMarkdown,\n  },\n  props: {\n    tablefield: {\n      type: [Array, Object],\n      default: () => {},\n    },\n    small: {\n      type: Boolean,\n      default: true,\n    },\n  },\n  data() {\n    return {\n      options: {\n        markdownIt: {\n          linkify: true,\n        },\n        linkAttributes: {\n          attrs: {\n            target: '_blank',\n            rel: 'noopener',\n          },\n        },\n      },\n    }\n  },\n  methods: {\n    formatObject(value) {\n      // console.log(value, typeof (value) === 'object', Object.keys(value))\n      // if (typeof (value) === 'object' && Object.keys(value).length === 1) {\n      //   console.log(value)\n      //   return value[Object.keys(value)[0]]\n      // }\n      return value\n    },\n    formatTitle: v => v.replaceAll('_', ' '),\n    isObjectText(v) {\n      return String(v).startsWith('{') && String(v).endsWith('}')\n    },\n    toObject(v) {\n      return JSON.parse(v)\n    },\n    formatText: v => abbr(v, 60),\n    eval_value(value) {\n      return Array.from(value)\n    },\n    isTokenField(value) {\n      return value ? isToken(value) : false\n    },\n    isHex(value) {\n      return value ? isHexAddress(value) : false\n    },\n    formatHexAddress(v) {\n      return getStakingValidatorByHex(this.$http.config.chain_name, v)\n    },\n    isArrayText(value) {\n      return value ? isStringArray(value) : false\n    },\n    formatTokens(value) {\n      return tokenFormatter(value)\n    },\n    addNewLine(value) {\n      const percentage = /^0\\.\\d+/\n      if (percentage.test(value)) {\n        return `${percent(value)}%`\n      }\n      return value ? value.replace(/(?:\\\\[rn])+/g, '\\n') : '-'\n    },\n  },\n}\n</script>\n\n<style lang='css' scoped>\n@media (min-width: 768px) {\n  td:first-child { width: 20% ;}\n}\n</style>\n","/home/imstaked/explorer/src/views/components/ArrayFieldComponent.vue",[],[],"/home/imstaked/explorer/src/views/components/dashboard/DashboardCardHorizontal.vue",[],[],"/home/imstaked/explorer/src/views/components/KlineTrade/Place.vue",["752"],[],"<template>\n  <div>\n    <b-tabs\n      v-model=\"tabIndex\"\n      small\n      class=\"nav-fill\"\n      pills\n      :nav-class=\"tabIndex === 0 ? 'nav-pill-success' : 'nav-pill-danger'\"\n    >\n      <b-tab\n        title=\"BUY\"\n        no-body\n      />\n      <b-tab\n        title=\"SELL\"\n        no-body\n      />\n    </b-tabs>\n    <PlaceForm\n      :type=\"tabIndex\"\n      :pool=\"pool\"\n      :denom-trace=\"denomTrace\"\n    />\n  </div>\n</template>\n\n<script>\nimport {\n  BTabs, BTab,\n} from 'bootstrap-vue'\nimport PlaceForm from './PlaceForm.vue'\n\nexport default {\n  components: {\n    BTab,\n    BTabs,\n    PlaceForm,\n  },\n  props: {\n    pool: {\n      type: Object,\n      default: () => {},\n    },\n    denomTrace: {\n      type: [Array, Object],\n      default: () => [],\n    },\n  },\n  data: () => ({\n    tabIndex: 0,\n  }),\n}\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>\n","/home/imstaked/explorer/src/views/components/governance/ProposalSummaryComponent.vue",[],[],"/home/imstaked/explorer/src/views/components/staking/StakingAddressComponent.vue",[],[],"/home/imstaked/explorer/src/views/components/staking/StakingCommissionComponent.vue",["753"],[],"<template>\n  <b-card\n    no-body\n  >\n    <b-card-header>\n      <h4 class=\"mb-0\">\n        Commission\n      </h4>\n      <b-card-text class=\"font-small-5 mb-0\">\n        Updated on {{ dateFormat(data.update_time) }}\n      </b-card-text>\n    </b-card-header>\n\n    <!-- apex chart -->\n    <vue-apex-charts\n      type=\"radialBar\"\n      height=\"145\"\n      class=\"my-2\"\n      :options=\"goalOverviewRadialBar\"\n      :series=\"[percentFormat(data.rate)]\"\n    />\n    <b-row class=\"text-center mx-0\">\n      <b-col\n        cols=\"6\"\n        class=\"border-top border-right d-flex align-items-between flex-column py-1\"\n      >\n        <b-card-text class=\"text-muted mb-0\">\n          Max Rate\n        </b-card-text>\n        <h3 class=\"font-weight-bolder mb-0\">\n          {{ percentFormat(data.max_rate) }}%\n        </h3>\n      </b-col>\n\n      <b-col\n        cols=\"6\"\n        class=\"border-top d-flex align-items-between flex-column py-1\"\n      >\n        <b-card-text class=\"text-muted mb-0\">\n          Max Change Rate\n        </b-card-text>\n        <h3 class=\"font-weight-bolder mb-0\">\n          {{ percentFormat(data.max_change_rate) }}%\n        </h3>\n      </b-col>\n    </b-row>\n  </b-card>\n</template>\n\n<script>\nimport {\n  BCard, BCardHeader, BRow, BCol, BCardText,\n} from 'bootstrap-vue'\nimport VueApexCharts from 'vue-apexcharts'\nimport { $themeColors } from '@themeConfig'\nimport { percent, toDay } from '@/libs/utils'\n\nconst $strokeColor = '#ebe9f1'\nconst $textHeadingColor = '#5e5873'\nconst $goalStrokeColor2 = '#51e5a8'\nexport default {\n  components: {\n    VueApexCharts,\n    BCard,\n    BCardHeader,\n    BRow,\n    BCardText,\n    BCol,\n  },\n  props: {\n    data: {\n      type: Object,\n      default: () => {},\n    },\n  },\n  data() {\n    return {\n      goalOverviewRadialBar: {\n        chart: {\n          height: 105,\n          type: 'radialBar',\n          sparkline: {\n            enabled: true,\n          },\n          dropShadow: {\n            enabled: true,\n            blur: 3,\n            left: 1,\n            top: 1,\n            opacity: 0.1,\n          },\n        },\n        colors: [$goalStrokeColor2],\n        plotOptions: {\n          radialBar: {\n            offsetY: -10,\n            startAngle: -150,\n            endAngle: 150,\n            hollow: {\n              size: '60%',\n            },\n            track: {\n              background: $strokeColor,\n              strokeWidth: '80%',\n            },\n            dataLabels: {\n              name: {\n                show: false,\n              },\n              value: {\n                color: $textHeadingColor,\n                fontSize: '2.86rem',\n                fontWeight: '600',\n              },\n            },\n          },\n        },\n        fill: {\n          type: 'gradient',\n          gradient: {\n            shade: 'dark',\n            type: 'horizontal',\n            shadeIntensity: 0.5,\n            gradientToColors: [$themeColors.success],\n            inverseColors: true,\n            opacityFrom: 1,\n            opacityTo: 1,\n            stops: [0, 100],\n          },\n        },\n        stroke: {\n          lineCap: 'round',\n        },\n        grid: {\n          padding: {\n            bottom: 10,\n          },\n        },\n      },\n    }\n  },\n  methods: {\n    dateFormat(value) {\n      return toDay(value)\n    },\n    percentFormat(value) {\n      return percent(value)\n    },\n  },\n}\n</script>\n","/home/imstaked/explorer/src/views/components/staking/StakingRewardComponent.vue",[],["754","755"],"/home/imstaked/explorer/src/views/components/charts/ChartComponentDoughnut.vue",[],[],"/home/imstaked/explorer/src/views/components/OperationModal/index.vue",[],[],"/home/imstaked/explorer/src/@core/components/toastification/ToastificationContent.vue",[],[],"/home/imstaked/explorer/src/@core/app-config/useAppConfig.js",[],[],"/home/imstaked/explorer/src/libs/data/tx.js",[],[],"/home/imstaked/explorer/src/@core/layouts/components/Logo.vue",[],[],"/home/imstaked/explorer/src/@core/layouts/components/AppFooter.vue",[],[],"/home/imstaked/explorer/src/views/components/dashboard/DashboardCardVertical.vue",[],[],"/home/imstaked/explorer/src/views/components/dashboard/DashboardPriceChart2.vue",[],["756"],"/home/imstaked/explorer/src/views/WalletUpgradeEvents.vue",[],[],"/home/imstaked/explorer/src/views/components/parameters/ParametersModuleComponent.vue",["757"],[],"<template>\n  <b-card\n    v-if=\"data && data.items\"\n    no-body\n    :class=\"`card-statistics ${data.class} `\"\n  >\n    <b-card-header>\n      <b-card-title>{{ data.title }}</b-card-title>\n    </b-card-header>\n    <b-card-body class=\"statistics-body\">\n      <b-row>\n        <b-col\n          v-for=\"item in data.items\"\n          :key=\"item.icon\"\n          xl=\"3\"\n          md=\"6\"\n          sm=\"6\"\n          :class=\"item.customClass\"\n        >\n          <div\n            v-if=\"typeof item.title ==='object'\"\n          >\n            <b-button\n              :id=\"item.subtitle\"\n              variant=\"outline-primary\"\n              class=\"ml-2\"\n              size=\"sm\"\n            >\n              {{ item.subtitle }}\n            </b-button>\n            <b-popover\n              :target=\"item.subtitle\"\n              variant=\"primary\"\n              triggers=\"hover\"\n              placement=\"bottom\"\n            >\n              <template #title>\n                <span>{{ item.subtitle }}</span>\n              </template>\n              <span>\n                <array-field-component\n                  v-if=\"Array.isArray(item.title)\"\n                  :tablefield=\"item.title\"\n                />\n                <object-field-component\n                  v-else\n                  :tablefield=\"item.title\"\n                /></span>\n            </b-popover>\n          </div>\n          <b-media\n            v-else\n            no-body\n          >\n            <b-media-aside\n              class=\"mr-2\"\n            >\n              <b-avatar\n                v-if=\"item.icon\"\n                size=\"48\"\n                :variant=\"item.color\"\n              >\n                <feather-icon\n                  size=\"24\"\n                  :icon=\"item.icon\"\n                />\n              </b-avatar>\n            </b-media-aside>\n            <b-media-body class=\"my-auto\">\n              <h4 class=\"font-weight-bolder mb-0\">\n                {{ item.title || '-' }}\n              </h4>\n              <b-card-text class=\"font-small-3 mb-1 text-capitalize\">\n                {{ item.subtitle }}\n              </b-card-text>\n            </b-media-body>\n          </b-media>\n        </b-col>\n      </b-row>\n    </b-card-body>\n  </b-card>\n</template>\n\n<script>\nimport {\n  BCard, BCardHeader, BCardTitle, BCardText, BCardBody, BRow, BCol, BMedia, BMediaAside, BAvatar, BMediaBody, BPopover, BButton,\n} from 'bootstrap-vue'\nimport ObjectFieldComponent from '../ObjectFieldComponent.vue'\nimport ArrayFieldComponent from '../ArrayFieldComponent.vue'\n\nexport default {\n  components: {\n    BRow,\n    BCol,\n    BCard,\n    BCardHeader,\n    BCardTitle,\n    BCardText,\n    BCardBody,\n    BMedia,\n    BAvatar,\n    BMediaAside,\n    BMediaBody,\n    BPopover,\n    BButton,\n    ObjectFieldComponent,\n    ArrayFieldComponent,\n  },\n  props: {\n    data: {\n      type: [Object, Array],\n      default: () => {},\n    },\n  },\n}\n</script>\n","/home/imstaked/explorer/src/@core/components/app-collapse/AppCollapse.vue",[],[],"/home/imstaked/explorer/src/@core/components/app-collapse/AppCollapseItem.vue",[],[],"/home/imstaked/explorer/src/libs/client/MetaMaskSigner.js",[],[],"/home/imstaked/explorer/src/@core/utils/validations/validations.js",[],["758","759"],"/home/imstaked/explorer/src/libs/data/proposal.js",[],["760"],"/home/imstaked/explorer/src/libs/data/proposal-tally.js",[],[],"/home/imstaked/explorer/src/libs/data/staking-pool.js",[],[],"/home/imstaked/explorer/src/libs/data/proposer.js",[],[],"/home/imstaked/explorer/src/libs/data/votes.js",[],[],"/home/imstaked/explorer/src/libs/data/deposit.js",[],[],"/home/imstaked/explorer/src/libs/data/validator.js",[],[],"/home/imstaked/explorer/src/libs/data/staking-parameters.js",[],[],"/home/imstaked/explorer/src/libs/data/block.js",[],[],"/home/imstaked/explorer/src/libs/data/validator-distribution.js",[],[],"/home/imstaked/explorer/src/libs/data/staking-delegation.js",[],[],"/home/imstaked/explorer/src/libs/data/wrapstdtx.js",[],[],"/home/imstaked/explorer/src/libs/data/token.js",[],[],"/home/imstaked/explorer/src/@core/utils/validations/validators.js",[],["761","762","763"],"/home/imstaked/explorer/src/libs/data/validator-commission.js",[],[],"/home/imstaked/explorer/src/libs/data/valdiator-description.js",[],[],"/home/imstaked/explorer/src/libs/data/block-id.js",[],[],"/home/imstaked/explorer/src/libs/data/block-inner.js",[],[],"/home/imstaked/explorer/src/libs/data/stdtx.js",[],[],"/home/imstaked/explorer/src/layouts/components/Navbar.vue",["764"],[],"<template>\n  <div class=\"navbar-container d-flex content align-items-center\">\n\n    <!-- Nav Menu Toggler -->\n    <ul class=\"nav navbar-nav d-lg-none\">\n      <li class=\"nav-item\">\n        <b-link\n          class=\"nav-link\"\n          @click=\"toggleVerticalMenuActive\"\n        >\n          <b-avatar\n            v-if=\"selected_chain && selected_chain.logo\"\n            variant=\"transparent\"\n            rounded\n            size=\"21\"\n            :src=\"selected_chain.logo\"\n            class=\"badge-minimal\"\n          />\n          <feather-icon\n            v-else\n            icon=\"MenuIcon\"\n            size=\"21\"\n          />\n        </b-link>\n      </li>\n    </ul>\n\n    <!-- Left Col -->\n    <div class=\"bookmark-wrapper align-items-center flex-grow-1 d-none d-lg-flex\">\n      <b-media\n        v-if=\"selected_chain\"\n        no-body\n      >\n        <b-media-aside class=\"mr-75\">\n          <b-link\n            class=\"nav-link\"\n            @click=\"toggleVerticalMenuActive\"\n          >\n            <b-avatar\n              v-b-tooltip.hover.bottom=\"tips\"\n              variant=\"transparent\"\n              badge\n              rounded\n              size=\"42\"\n              :src=\"selected_chain.logo\"\n              class=\"badge-minimal\"\n              :badge-variant=\"variant\"\n            /></b-link>\n        </b-media-aside>\n        <b-media-body class=\"my-auto\">\n          <h6 class=\"mb-0 \">\n            <span class=\"text-uppercase\">{{ chainid || selected_chain.chain_name }}</span>\n          </h6>\n          <small id=\"data-provider\">\n            <b-dropdown\n              class=\"ml-0\"\n              variant=\"flat-primary\"\n              no-caret\n              toggle-class=\"p-0\"\n              left\n              sm\n            >\n              <template #button-content>\n                <feather-icon\n                  icon=\"RepeatIcon\"\n                  size=\"12\"\n                  class=\"cursor-pointer\"\n                />\n              </template>\n              <b-dropdown-item\n                v-for=\"(item, i) in apiOptions\"\n                :key=\"item\"\n                @click=\"change(i)\"\n              >\n                {{ item }}\n              </b-dropdown-item>\n            </b-dropdown>\n            {{ currentApi }} ({{ selected_chain.sdk_version || '-' }})\n          </small>\n        </b-media-body>\n      </b-media>\n    </div>\n\n    <!-- <dark-Toggler class=\"d-none d-lg-block\" /> -->\n    <!-- Right Col -->\n    <b-navbar-nav class=\"nav align-items-center ml-auto\">\n      <dark-Toggler class=\"d-none d-lg-block\" />\n      <search-bar />\n      <locale />\n      <b-dropdown\n        class=\"ml-1\"\n        variant=\"link\"\n        no-caret\n        toggle-class=\"p-0\"\n        right\n      >\n\n        <template #button-content>\n          <b-button\n            v-ripple.400=\"'rgba(255, 255, 255, 0.15)'\"\n            variant=\"primary\"\n            class=\"btn-icon\"\n          >\n            <feather-icon icon=\"KeyIcon\" />\n            {{ walletName }}\n          </b-button>\n        </template>\n\n        <b-dropdown-item\n          v-for=\"(item,k) in accounts\"\n          :key=\"k\"\n          :disabled=\"!item.address\"\n          @click=\"updateDefaultWallet(item.wallet)\"\n        >\n          <div class=\"d-flex flex-column\">\n            <div class=\"d-flex justify-content-between\">\n              <span class=\"font-weight-bolder\">{{ item.wallet }}\n                <b-avatar\n                  v-if=\"item.wallet===walletName\"\n                  variant=\"success\"\n                  size=\"sm\"\n                >\n                  <feather-icon icon=\"CheckIcon\" />\n                </b-avatar>\n              </span>\n              <b-link :to=\"`/${selected_chain.chain_name}/account/${item.address.addr}`\">\n                <feather-icon icon=\"ArrowRightIcon\" />\n              </b-link>\n            </div>\n            <small>{{ item.address ? formatAddr(item.address.addr) : `Not available on ${selected_chain.chain_name}` }}</small>\n          </div>\n        </b-dropdown-item>\n        <b-dropdown-divider />\n        <b-dropdown-item to=\"/wallet/import\">\n          <feather-icon\n            icon=\"PlusIcon\"\n            size=\"16\"\n          />\n          <span class=\"align-middle ml-50\">Import Address</span>\n        </b-dropdown-item>\n        <b-dropdown-divider />\n\n        <b-dropdown-item :to=\"{ name: 'accounts' }\">\n          <feather-icon\n            icon=\"KeyIcon\"\n            size=\"16\"\n          />\n          <span class=\"align-middle ml-50\">Accounts</span>\n        </b-dropdown-item>\n\n        <b-dropdown-item :to=\"{ name: 'delegations' }\">\n          <feather-icon\n            icon=\"BookOpenIcon\"\n            size=\"16\"\n          />\n          <span class=\"align-middle ml-50\">My Delegations</span>\n        </b-dropdown-item>\n\n        <b-dropdown-item :to=\"`/${selected_chain.chain_name}/uptime/my`\">\n          <feather-icon\n            icon=\"AirplayIcon\"\n            size=\"16\"\n          />\n          <span class=\"align-middle ml-50\">My Validators</span>\n        </b-dropdown-item>\n\n        <b-dropdown-item :to=\"`/wallet/votes`\">\n          <feather-icon\n            icon=\"PocketIcon\"\n            size=\"16\"\n          />\n          <span class=\"align-middle ml-50\">My Votes</span>\n        </b-dropdown-item>\n\n        <b-dropdown-item :to=\"`/wallet/transactions`\">\n          <feather-icon\n            icon=\"LayersIcon\"\n            size=\"16\"\n          />\n          <span class=\"align-middle ml-50\">My Transactions</span>\n        </b-dropdown-item>\n      </b-dropdown>\n    </b-navbar-nav>\n  </div>\n</template>\n\n<script>\nimport {\n  BLink, BNavbarNav, BMedia, BMediaAside, BAvatar, BMediaBody, VBTooltip, BButton,\n  BDropdown, BDropdownItem, BDropdownDivider,\n} from 'bootstrap-vue'\nimport Ripple from 'vue-ripple-directive'\nimport DarkToggler from '@core/layouts/components/app-navbar/components/DarkToggler.vue'\nimport Locale from '@core/layouts/components/app-navbar/components/Locale.vue'\nimport SearchBar from '@core/layouts/components/app-navbar/components/SearchBar.vue'\n// import CartDropdown from '@core/layouts/components/app-navbar/components/CartDropdown.vue'\nimport { getLocalAccounts, timeIn, toDay } from '@/libs/utils'\n// import UserDropdown from '@core/layouts/components/app-navbar/components/UserDropdown.vue'\n\nexport default {\n  components: {\n    BLink,\n    BNavbarNav,\n    BAvatar,\n    BMedia,\n    BMediaAside,\n    BMediaBody,\n    BButton,\n    BDropdown,\n    BDropdownItem,\n    BDropdownDivider,\n\n    // Navbar Components\n    DarkToggler,\n    Locale,\n    SearchBar,\n    // CartDropdown,\n    // UserDropdown,\n  },\n  directives: {\n    'b-tooltip': VBTooltip,\n    Ripple,\n  },\n  props: {\n    toggleVerticalMenuActive: {\n      type: Function,\n      default: () => {},\n    },\n  },\n  data() {\n    return {\n      variant: 'success',\n      tips: 'Synced',\n      index: 0,\n      chainid: '',\n    }\n  },\n  computed: {\n    walletName() {\n      const key = this.$store?.state?.chains?.defaultWallet\n      return key || 'Wallet'\n    },\n    selected_chain() {\n      this.block()\n      return this.$store.state.chains.selected\n    },\n    chainVariant() {\n      return this.variant\n    },\n    currentApi() {\n      return this.index + 1 > this.apiOptions.length ? this.apiOptions[0] : this.apiOptions[this.index]\n    },\n    apiOptions() {\n      const conf = this.$store.state.chains.selected\n      if (Array.isArray(conf.api)) {\n        return conf.api\n      }\n      return [conf.api]\n    },\n    accounts() {\n      let accounts = getLocalAccounts() || {}\n      accounts = Object.entries(accounts)\n        .map(v => ({ wallet: v[0], address: v[1].address.find(x => x.chain === this.selected_chain.chain_name) }))\n        .filter(v => v.address)\n\n      // accounts > 0 and wallet not setted, pick the first one as default\n      if (accounts.length > 0 && accounts.findIndex(x => x.wallet === this.walletName) < 0) {\n        this.updateDefaultWallet(accounts[0].wallet)\n      }\n\n      if (accounts.findIndex(x => x.wallet === this.walletName) < 0 && this.walletName !== 'Wallet') {\n        this.updateDefaultWallet(null)\n      }\n      return accounts\n    },\n  },\n  methods: {\n    formatAddr(v) {\n      return v.substring(0, 10).concat('...', v.substring(v.length - 10))\n    },\n    updateDefaultWallet(v) {\n      this.$store.commit('setDefaultWallet', v)\n    },\n    change(v) {\n      this.index = v\n      const conf = this.$store.state.chains.selected\n      localStorage.setItem(`${conf.chain_name}-api-index`, v)\n      window.location.reload()\n    },\n    block() {\n      const conf = this.$store.state.chains.selected\n      const s = localStorage.getItem(`${conf.chain_name}-api-index`) || 0\n      this.index = Number(s)\n      this.$store.commit('setHeight', 0)\n      this.$http.getLatestBlock().then(block => {\n        this.chainid = block.block.header.chain_id\n        this.$store.commit('setHeight', Number(block.block.header.height))\n        if (timeIn(block.block.header.time, 1, 'm')) {\n          this.variant = 'danger'\n          this.tips = `Halted ${toDay(block.block.header.time, 'from')}, Height: ${this.$store.state.chains.height} `\n        } else {\n          this.variant = 'success'\n          this.tips = 'Synced'\n        }\n      })\n    },\n  },\n}\n</script>\n","/home/imstaked/explorer/src/views/components/KlineTrade/PlaceForm.vue",["765"],["766","767","768","769","770","771","772","773","774","775","776","777","778","779","780","781","782","783","784","785","786","787"],"<template>\n  <div>\n    <b-card\n      bg-variant=\"light-secondary\"\n      text-variant=\"black\"\n    >\n      <div class=\"d-flex justify-content-between\">\n        <span class=\"font-weight-bolder\">Balance </span>\n        <span>\n          <feather-icon\n            v-if=\"currentDenom.startsWith('ibc/')\"\n            v-b-modal.trading-deposte-window\n            icon=\"PlusSquareIcon\"\n            class=\"text-primary\"\n          />\n          <small> {{ available }} {{ type === 0 ? target: base }} </small>\n        </span>\n      </div>\n      <div class=\"d-flex justify-content-between mt-1\">\n        <span class=\"font-weight-bolder\">Price</span>\n        <span>{{ price }}&nbsp;<small class=\"text-muted mx-10\">{{ target }} ≈</small>&nbsp;1&nbsp;<small class=\"text-muted mx-10\"> {{ base }}</small>&nbsp;</span>\n      </div>\n      <div class=\"d-flex justify-content-between mt-1\">\n        <span class=\"font-weight-bolder\">Swap Fee</span>\n        <span>{{ fee }}%</span>\n      </div>\n    </b-card>\n    <b-form-group>\n      <div>\n        <span>Quantity</span>\n      </div>\n      <b-input-group class=\"input-group-merge\">\n        <b-form-input\n          id=\"amount\"\n          v-model=\"amount\"\n          type=\"number\"\n          placeholder=\"Quantity\"\n          @change=\"changeAmount()\"\n        />\n        <b-input-group-append is-text>\n          {{ base }}\n        </b-input-group-append>\n      </b-input-group>\n      <b-alert\n        variant=\"danger\"\n        :show=\"type === 1 && amount > available\"\n      >\n        <div class=\"alert-body\">\n          Insufficient available amount\n        </div>\n      </b-alert>\n    </b-form-group>\n    <b-form-group>\n      <div class=\"d-flex justify-content-between\">\n        <span>Volume</span>\n        <span>\n          <small\n            v-if=\"localPrice > 0\"\n            class=\"text-muted mr-1\"\n          >≈${{ localPrice }}</small>\n          <feather-icon\n            id=\"popover-trading-setting\"\n            icon=\"SettingsIcon\"\n            class=\"text-primary\"\n          />\n        </span>\n      </div>\n      <b-input-group class=\"input-group-merge\">\n        <b-form-input\n          id=\"total\"\n          v-model=\"total\"\n          type=\"number\"\n          placeholder=\"Volume\"\n          @change=\"changeTotal()\"\n        />\n        <b-input-group-append is-text>\n          {{ target }}\n        </b-input-group-append>\n      </b-input-group>\n      <b-alert\n        variant=\"danger\"\n        :show=\"type === 0 && total > available\"\n      >\n        <div class=\"alert-body\">\n          Insufficient available amount\n        </div>\n      </b-alert>\n    </b-form-group>\n    <b-popover\n      target=\"popover-trading-setting\"\n      placement=\"left\"\n      triggers=\"hover\"\n      boundary=\"scrollParent\"\n      boundary-padding=\"0\"\n      class=\"px-0\"\n    >\n      <b-form-group>\n        <label for=\"slip\">\n          Slippage Tolerance\n        </label>\n        <div id=\"slip\">\n          <b-form-radio\n            v-model=\"slippage\"\n            value=\"0.01\"\n            button\n            button-variant=\"outline-secondary\"\n          >\n            1%\n          </b-form-radio>\n          <b-form-radio\n            v-model=\"slippage\"\n            value=\"0.025\"\n            button\n            block\n            class=\"px-1\"\n            button-variant=\"outline-secondary\"\n          >\n            2.5%\n          </b-form-radio>\n          <b-form-radio\n            v-model=\"slippage\"\n            value=\"0.05\"\n            button\n            button-variant=\"outline-secondary\"\n          >\n            5%\n          </b-form-radio>\n        </div>\n      </b-form-group>\n    </b-popover>\n    <b-form-group\n      label=\"Signer\"\n      label-for=\"wallet\"\n    >\n      <b-form-radio-group\n        v-model=\"wallet\"\n        inline\n      >\n        <b-form-radio\n          v-model=\"wallet\"\n          name=\"wallet\"\n          value=\"keplr\"\n        >\n          <small>Keplr</small>\n        </b-form-radio>\n        <b-form-radio\n          v-model=\"wallet\"\n          name=\"wallet\"\n          value=\"ledgerUSB\"\n        >\n          <small>Ledger(USB)</small>\n        </b-form-radio>\n        <b-form-radio\n          v-model=\"wallet\"\n          name=\"wallet\"\n          value=\"ledgerBle\"\n          class=\"mr-0\"\n        >\n          <small>Ledger(BLE)</small>\n        </b-form-radio>\n      </b-form-radio-group>\n    </b-form-group>\n    <b-form-group>\n      <b-button\n        v-if=\"address\"\n        block\n        :disabled=\"type === 0? total > available : amount > available\"\n        :variant=\"type === 0 ? 'success': 'danger'\"\n        @click=\"sendTx()\"\n      >\n        {{ type === 0 ? `Buy ${ base }` : `Sell ${ base }` }}\n      </b-button>\n      <b-button\n        v-else\n        to=\"/wallet/import\"\n        block\n        variant=\"primary\"\n      >\n        Connect Wallet\n      </b-button>\n\n    </b-form-group>\n    <b-alert\n      variant=\"danger\"\n      :show=\"dismissCountDown\"\n      dismissible\n      @dismissed=\"dismissCountDown=0\"\n      @dismiss-count-down=\"countDownChanged\"\n    >\n      <div class=\"alert-body\">\n        {{ error }}\n      </div>\n    </b-alert>\n    <b-alert\n      class=\"mt-2\"\n      variant=\"danger\"\n      show\n    >\n      <div class=\"alert-heading\">\n        Note\n      </div>\n      <div class=\"alert-body\">\n        Trading is not available. will open soon.\n        <div class=\"d-none\">\n          If the execution price exceeds the {{ slippage * 100 }}% slippage protection, your order will be automatically cancelled\n        </div>\n      </div>\n    </b-alert>\n\n    <deposite-window\n      :symbol=\"type === 0 ? target: base\"\n      :denom-trace=\"denomTrace[currentDenom]\"\n    />\n\n  </div>\n</template>\n\n<script>\n/* eslint-disable */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nconst long_1 = __importDefault(require(\"long\"));\nimport {\n  BFormInput, BButton, BAlert, BFormGroup, BInputGroup, BInputGroupAppend, BFormRadio, BFormRadioGroup, BCard, BPopover,\n} from 'bootstrap-vue'\nimport FeatherIcon from '@core/components/feather-icon/FeatherIcon.vue'\nimport {\n  formatTokenAmount, getLocalAccounts, percent, setLocalTxHistory, sign,\n} from '@/libs/utils'\nimport { getPairName } from '@/libs/osmos'\nimport ToastificationContent from '@core/components/toastification/ToastificationContent.vue'\nimport DepositeWindow from './DepositeWindow.vue'\n\nexport default {\n  components: {\n    BAlert,\n    BButton,\n    BCard,\n    BFormInput,\n    BFormRadio,\n    BFormRadioGroup,\n    BFormGroup,\n    BPopover,\n    BInputGroup,\n    BInputGroupAppend,\n    FeatherIcon,\n    DepositeWindow,\n    // eslint-disable-next-line vue/no-unused-components\n    ToastificationContent,\n  },\n  props: {\n    type: {\n      type: Number,\n      required: true,\n    },\n    pool: {\n      type: Object,\n      default: () => {},\n    },\n    denomTrace: {\n      type: [Array, Object],\n      default: () => [],\n    },\n  },\n  data() {\n    return {\n      address: '',\n      amount: '',\n      total: '',\n      slippage: 0.05,\n      marks: [0, 0.01, 0.025, 0.05],\n      balance: {},\n      error: null,\n      chainId: 'osmosis-1',\n      wallet: 'keplr',\n      // base: '',\n      // target: '',\n      dismissSecs: 15,\n      dismissCountDown: 0,\n    }\n  },\n  computed: {\n    base() {\n      return getPairName(this.pool, this.denomTrace, 'base')\n    },\n    target() {\n      return getPairName(this.pool, this.denomTrace, 'target')\n    },\n    price() {\n      const p1 = this.$store.state.chains.quotes[this.base]\n      const p2 = this.$store.state.chains.quotes[this.target]\n      return p1 && p2 ? (p1.usd / p2.usd).toFixed(4) : '-'\n    },\n    localPrice() {\n      const p1 = this.$store.state.chains.quotes[this.target]\n      return p1 && this.total > 0 ? (p1.usd * this.total).toFixed(2) : '-'\n    },\n    currentDenom() {\n      if (this.pool && this.pool.poolAssets) {\n        const mode = this.type === 1 ? 0 : 1\n        const { denom } = this.pool.poolAssets[mode].token\n        return denom\n      }\n      return ''\n    },\n    available() {\n      if (this.pool && this.pool.poolAssets) {\n        let amount = 0\n        if (Array.isArray(this.balance)) {\n          this.balance.forEach(x => {\n            if (x.denom === this.currentDenom) {\n              amount = x.amount\n            }\n          })\n        }\n        return formatTokenAmount(amount, 6, this.currentDenom)\n      }\n      return 0\n    },\n    fee() {\n      return percent(this.pool?.poolParams?.swapFee || '')\n    },\n  },\n  created() {\n    this.initialAddress()\n    this.$http.getBankBalances(this.address).then(res => {\n      if (res && res.length > 0) {\n        this.balance = res\n      }\n    })\n    this.$http.getAuthAccount(this.address, this.selectedChain).then(ret => {\n      if (ret.value.base_vesting_account) {\n        this.accountNumber = ret.value.base_vesting_account.base_account.account_number\n        this.sequence = ret.value.base_vesting_account.base_account.sequence\n        if (!this.sequence) this.sequence = 0\n      } else {\n        this.accountNumber = ret.value.account_number\n        this.sequence = ret.value.sequence ? ret.value.sequence : 0\n      }\n    })\n  },\n  methods: {\n    initialAddress() {\n      const { chain } = this.$route.params\n      const accounts = getLocalAccounts()\n      const current = this.$store.state.chains.defaultWallet\n      if (accounts && accounts[current]) {\n        const acc = accounts[current].address.find(x => x.chain === chain)\n        if (acc) {\n          this.address = acc.addr\n        }\n      }\n    },\n    formatAvailable() {\n    },\n    changeAmount() {\n      this.total = parseFloat((this.amount * this.price).toFixed(6))\n    },\n    changeTotal() {\n      this.amount = parseFloat((this.total / this.price).toFixed(6))\n    },\n    async sendTx() {\n      const tokenOutDenom = this.pool.poolAssets[this.type === 0 ? 0 : 1].token.denom\n      const { denom } = this.pool.poolAssets[this.type === 0 ? 1 : 0].token\n      const txMsgs = [\n        {\n          typeUrl: '/osmosis.gamm.v1beta1.MsgSwapExactAmountIn',\n          value: {\n            sender: this.address,\n            routes: [\n              {\n                poolId: long_1.default.fromString(this.pool.id),\n                tokenOutDenom,\n              },\n            ],\n            tokenIn: {\n              denom,\n              amount: long_1.default.fromNumber(parseInt(this.amount * 1000000, 10)),\n            },\n            tokenOutMinAmount: long_1.default.fromNumber(parseInt(this.total * 1000000, 10)),\n          },\n        },\n      ]\n\n      if (txMsgs.length === 0) {\n        this.error = 'No delegation found'\n        this.dismissCountDown = this.dismissSecs\n        return ''\n      }\n      if (!this.accountNumber) {\n        this.error = 'Account number should not be empty!'\n        this.dismissCountDown = this.dismissSecs\n        return ''\n      }\n\n      const txFee = {\n        amount: [\n          {\n            amount: '800', // this.fee,\n            denom: 'uomos', // this.feeDenom,\n          },\n        ],\n        gas: '200000', // this.gas,\n      }\n\n      const signerData = {\n        accountNumber: this.accountNumber,\n        sequence: this.sequence,\n        chainId: this.chainId,\n      }\n\n      sign(\n        this.wallet,\n        this.chainId,\n        this.address,\n        txMsgs,\n        txFee,\n        'Sent Via https://ping.pub',\n        signerData,\n      ).then(bodyBytes => {\n        this.$http.broadcastTx(bodyBytes).then(res => {\n          setLocalTxHistory({ op: 'swap', hash: res.tx_response.txhash, time: new Date() })\n          this.$toast({\n            component: ToastificationContent,\n            props: {\n              title: 'Transaction sent!',\n              icon: 'EditIcon',\n              variant: 'success',\n            },\n          })\n        }).catch(e => {\n          this.error = e\n        })\n      }).catch(e => {\n        this.error = e\n        this.dismissCountDown = this.dismissSecs\n      })\n      // Send tokens\n      // return client.sendTokens(this.address, this.recipient, sendCoins, this.memo)\n      return ''\n    },\n    countDownChanged(dismissCountDown) {\n      this.dismissCountDown = dismissCountDown\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>\n","/home/imstaked/explorer/src/@core/layouts/components/app-navbar/components/DarkToggler.vue",[],[],"/home/imstaked/explorer/src/@core/layouts/components/app-navbar/components/Locale.vue",[],["788","789","790","791"],"/home/imstaked/explorer/src/@core/layouts/layout-vertical/LayoutVertical.vue",[],[],"/home/imstaked/explorer/src/@core/layouts/layout-full/LayoutFull.vue",[],[],"/home/imstaked/explorer/src/views/components/OperationModal/WalletInput.vue",[],[],"/home/imstaked/explorer/src/views/components/OperationModal/TransactionResult.vue",[],[],"/home/imstaked/explorer/src/views/components/OperationModal/components/Delegate.vue",[],[],"/home/imstaked/explorer/src/views/components/OperationModal/components/Redelegate.vue",[],[],"/home/imstaked/explorer/src/views/components/OperationModal/components/Withdraw.vue",[],[],"/home/imstaked/explorer/src/views/components/OperationModal/components/Unbond.vue",[],[],"/home/imstaked/explorer/src/views/components/OperationModal/components/Transfer.vue",[],[],"/home/imstaked/explorer/src/views/components/OperationModal/components/IBCTransfer.vue",[],["792"],"/home/imstaked/explorer/src/views/components/OperationModal/components/Vote.vue",[],[],"/home/imstaked/explorer/src/views/components/OperationModal/components/WithdrawCommission.vue",[],[],"/home/imstaked/explorer/src/views/components/OperationModal/components/GovDeposit.vue",[],[],"/home/imstaked/explorer/src/views/components/charts/ChartjsComponentDoughnutChart.vue",[],[],"/home/imstaked/explorer/src/libs/data/block-data.js",[],[],"/home/imstaked/explorer/src/libs/data/block-header.js",[],[],"/home/imstaked/explorer/src/libs/data/block-last-commit.js",[],[],"/home/imstaked/explorer/src/libs/data/signature.js",[],[],"/home/imstaked/explorer/src/views/components/KlineTrade/DepositeWindow.vue",["793"],[],"<template>\n  <div>\n    <b-modal\n      id=\"trading-deposte-window\"\n      centered\n      size=\"md\"\n      title=\"Cross Chain Deposit Tokens\"\n      ok-title=\"Send\"\n      hide-header-close\n      scrollable\n      :ok-disabled=\"!address\"\n      @hidden=\"resetModal\"\n      @ok=\"handleOk\"\n      @show=\"init\"\n    >\n      <template #modal-header=\"\" />\n      <validation-observer ref=\"simpleRules\">\n        <b-form>\n          <b-row>\n            <b-col>\n              <b-form-group\n                label=\"Sender Address\"\n                label-for=\"from\"\n              >\n                <validation-provider\n                  v-slot=\"{ errors }\"\n                  rules=\"required\"\n                  name=\"from\"\n                >\n                  <b-input-group>\n                    <b-input-group-prepend is-text>\n                      <b-avatar\n                        :src=\"selectedChain.logo\"\n                        size=\"18\"\n                        variant=\"light-primary\"\n                        rounded\n                      />\n                    </b-input-group-prepend>\n                    <b-form-select\n                      id=\"from\"\n                      v-model=\"address\"\n                      :options=\"addressOptions\"\n                      :state=\"errors.length > 0 ? false:null\"\n                      @change=\"loadBalance()\"\n                    />\n                  </b-input-group>\n                  <small class=\"text-danger\">{{ errors[0] }}</small>\n                </validation-provider>\n              </b-form-group>\n            </b-col>\n          </b-row>\n          <b-row class=\"d-none\">\n            <b-col>\n              <b-form-group\n                label=\"Recipient Address\"\n                label-for=\"Recipient\"\n              >\n                <validation-provider\n                  #default=\"{ errors }\"\n                  rules=\"required\"\n                  name=\"recipient\"\n                >\n                  <b-input-group class=\"mb-25\">\n                    <b-form-input\n                      id=\"Recipient\"\n                      v-model=\"recipient\"\n                      :state=\"errors.length > 0 ? false:null\"\n                    />\n                  </b-input-group>\n                  <small class=\"text-danger\">{{ errors[0] }}</small>\n                </validation-provider>\n              </b-form-group>\n            </b-col>\n          </b-row>\n          <b-row>\n            <b-col>\n              <div class=\"d-flex justify-content-between\">\n                <span>Amount</span>\n                <span>\n                  <small\n                    v-if=\"balance.amount > 0\"\n                    class=\"mr-1\"\n                  >Available: <b class=\"font-weight-bolder text-success\">{{ format(balance) }}</b> {{ symbol }}</small>\n                </span>\n              </div>\n              <b-form-group>\n                <validation-provider\n                  v-slot=\"{ errors }\"\n                  rules=\"required|regex:^([0-9\\.]+)$\"\n                  name=\"amount\"\n                >\n                  <b-input-group class=\"mb-25\">\n                    <b-form-input\n                      id=\"Amount\"\n                      v-model=\"amount\"\n                      :state=\"errors.length > 0 ? false:null\"\n                      placeholder=\"Input a number\"\n                      type=\"number\"\n                    />\n                    <b-input-group-append is-text>\n                      {{ symbol }}\n                    </b-input-group-append>\n                  </b-input-group>\n                  <small class=\"text-danger\">{{ errors[0] }}</small>\n                </validation-provider>\n              </b-form-group>\n            </b-col>\n          </b-row>\n          <b-row>\n            <b-col>\n              <b-form-group\n                label=\"Fee\"\n                label-for=\"Fee\"\n              >\n                <validation-provider\n                  v-slot=\"{ errors }\"\n                  rules=\"required|integer\"\n                  name=\"fee\"\n                >\n                  <b-input-group>\n                    <b-form-input v-model=\"fee\" />\n                    <b-input-group-append is-text>\n                      {{ feeDenom }}\n                    </b-input-group-append>\n                  </b-input-group>\n                  <small class=\"text-danger\">{{ errors[0] }}</small>\n                </validation-provider>\n              </b-form-group>\n            </b-col>\n            <b-col cols=\"12\">\n              <b-form-group>\n                <b-form-checkbox\n                  v-model=\"advance\"\n                  name=\"advance\"\n                  value=\"true\"\n                >\n                  <small>Advanced</small>\n                </b-form-checkbox>\n              </b-form-group>\n            </b-col>\n          </b-row>\n          <b-row v-if=\"advance\">\n            <b-col cols=\"12\">\n              <b-form-group\n                label=\"Gas\"\n                label-for=\"gas\"\n              >\n                <validation-provider\n                  v-slot=\"{ errors }\"\n                  name=\"gas\"\n                >\n                  <b-form-input\n                    id=\"gas\"\n                    v-model=\"gas\"\n                    type=\"number\"\n                  />\n                  <small class=\"text-danger\">{{ errors[0] }}</small>\n                </validation-provider>\n              </b-form-group>\n            </b-col>\n            <b-col cols=\"12\">\n              <b-form-group\n                label=\"Memo\"\n                label-for=\"Memo\"\n              >\n                <validation-provider\n                  v-slot=\"{ errors }\"\n                  name=\"memo\"\n                >\n                  <b-form-input\n                    id=\"Memo\"\n                    v-model=\"memo\"\n                    max=\"2\"\n                  />\n                  <small class=\"text-danger\">{{ errors[0] }}</small>\n                </validation-provider>\n              </b-form-group>\n            </b-col>\n          </b-row>\n\n          <b-row>\n            <b-col>\n              <b-form-group\n                label=\"Siger\"\n                label-for=\"wallet\"\n              >\n                <validation-provider\n                  v-slot=\"{ errors }\"\n                  rules=\"required\"\n                  name=\"wallet\"\n                >\n                  <b-form-radio-group\n                    v-model=\"wallet\"\n                    stacked\n                    class=\"demo-inline-spacing\"\n                  >\n                    <b-form-radio\n                      v-model=\"wallet\"\n                      name=\"wallet\"\n                      value=\"keplr\"\n                      class=\"d-none d-md-block\"\n                    >\n                      Keplr\n                    </b-form-radio>\n                    <b-form-radio\n                      v-model=\"wallet\"\n                      name=\"wallet\"\n                      value=\"ledgerUSB\"\n                    >\n                      <small>Ledger(USB)</small>\n                    </b-form-radio>\n                    <b-form-radio\n                      v-model=\"wallet\"\n                      name=\"wallet\"\n                      value=\"ledgerBle\"\n                      class=\"mr-0\"\n                    >\n                      <small>Ledger(Bluetooth)</small>\n                    </b-form-radio>\n                  </b-form-radio-group>\n                  <small class=\"text-danger\">{{ errors[0] }}</small>\n                </validation-provider>\n              </b-form-group>\n            </b-col>\n          </b-row>\n        </b-form>\n      </validation-observer>\n      {{ error }}\n    </b-modal>\n  </div>\n</template>\n\n<script>\nimport { ValidationProvider, ValidationObserver } from 'vee-validate'\nimport {\n  BAvatar, BModal, BRow, BCol, BInputGroup, BInputGroupAppend, BInputGroupPrepend, BFormInput, BFormGroup, BFormSelect, BForm, BFormRadioGroup, BFormRadio, BFormCheckbox,\n} from 'bootstrap-vue'\nimport {\n  required, email, url, between, alpha, integer, password, min, digits, alphaDash, length,\n} from '@validations'\nimport {\n  formatToken, formatTokenDenom, getLocalAccounts, getUnitAmount, setLocalTxHistory, sign, timeIn,\n} from '@/libs/utils'\nimport ToastificationContent from '@core/components/toastification/ToastificationContent.vue'\nimport { coin } from '@cosmjs/amino'\nimport { getChainConfigForSymbol } from '@/libs/osmos'\nimport dayjs from 'dayjs'\n\nexport default {\n  name: 'TransforDialogue',\n  components: {\n    BAvatar,\n    BModal,\n    BRow,\n    BCol,\n    BForm,\n    BInputGroup,\n    BInputGroupAppend,\n    BFormInput,\n    BFormGroup,\n    BFormSelect,\n    BFormRadioGroup,\n    BFormRadio,\n    BFormCheckbox,\n    BInputGroupPrepend,\n\n    ValidationProvider,\n    ValidationObserver,\n    // eslint-disable-next-line vue/no-unused-components\n    ToastificationContent,\n  },\n  props: {\n    symbol: {\n      type: String,\n      default: () => '',\n    },\n    denomTrace: {\n      type: Object,\n      default: () => {},\n    },\n  },\n  data() {\n    return {\n      address: '', // from address for deposit / to address for withdraw\n      addressOptions: [],\n      chainId: '',\n      selectedChain: '',\n      balance: {},\n      token: '',\n      amount: null,\n      memo: '',\n      recipient: null,\n      fee: '800',\n      feeDenom: '',\n      wallet: 'ledgerUSB',\n      error: null,\n      sequence: 1,\n      accountNumber: 0,\n      account: [],\n      IBCDenom: {},\n      gas: '200000',\n      advance: false,\n      paths: {},\n      destination: {},\n      channels: [],\n      timeoutHeight: {},\n\n      required,\n      password,\n      email,\n      min,\n      integer,\n      url,\n      alpha,\n      between,\n      digits,\n      length,\n      alphaDash,\n    }\n  },\n  methods: {\n    recipientAddress() {\n      const { chain } = this.$route.params\n      const accounts = getLocalAccounts()\n      const current = this.$store.state.chains.defaultWallet\n      if (accounts && accounts[current]) {\n        const acc = accounts[current].address.find(x => x.chain === chain)\n        if (acc) {\n          this.recipient = acc.addr\n        }\n      }\n      this.selectedChain = getChainConfigForSymbol(this.symbol)\n    },\n    computeAccount() {\n      this.recipientAddress()\n      const accounts = getLocalAccounts()\n      this.addressOptions = []\n      if (accounts) {\n        const values = Object.values(accounts)\n        for (let i = 0; i < values.length; i += 1) {\n          const addr = values[i].address.find(x => x.chain === this.selectedChain.chain_name)\n          if (addr) {\n            if (this.addressOptions.length === 0) this.address = addr.addr\n            this.addressOptions.push({ value: addr.addr, text: addr.addr })\n          }\n        }\n      }\n      return []\n    },\n    init() {\n      this.destination = null\n      this.token = ''\n      this.computeAccount()\n      this.loadBalance()\n      if (this.denomTrace) {\n        const part = this.denomTrace.path.split('/')\n        this.$http.getIBCChannel(part[1], part[0]).then(data => {\n          this.destination = data.channel.counterparty\n          this.timeoutHeight = data.proof_height\n        })\n      }\n    },\n    loadBalance() {\n      if (this.address) {\n        this.$http.getBankBalances(this.address, this.selectedChain).then(res => {\n          if (res && res.length > 0) {\n            this.balance = res.find(x => formatTokenDenom(x.denom) === this.symbol)\n            this.denom = this.balance.denom\n            this.feeDenom = this.balance.denom\n          }\n        })\n        this.$http.getLatestBlock(this.selectedChain).then(ret => {\n          this.chainId = ret.block.header.chain_id\n          const notSynced = timeIn(ret.block.header.time, 10, 'm')\n          if (notSynced) {\n            this.error = 'Client is not synced or blockchain is halted'\n          } else {\n            this.error = null\n          }\n        })\n        this.$http.getAuthAccount(this.address, this.selectedChain).then(ret => {\n          if (ret.value.base_vesting_account) {\n            this.accountNumber = ret.value.base_vesting_account.base_account.account_number\n            this.sequence = ret.value.base_vesting_account.base_account.sequence\n            if (!this.sequence) this.sequence = 0\n          } else {\n            this.accountNumber = ret.value.account_number\n            this.sequence = ret.value.sequence ? ret.value.sequence : 0\n          }\n        })\n      }\n    },\n    handleOk(bvModalEvt) {\n      // console.log('send')\n      // Prevent modal from closing\n      bvModalEvt.preventDefault()\n      // Trigger submit handler\n      // this.handleSubmit()\n      this.send().then(ret => {\n        // console.log(ret)\n        this.error = ret\n      })\n    },\n    resetModal() {\n      this.feeDenom = ''\n      this.error = null\n    },\n    format(v) {\n      return formatToken(v, {}, 6, false)\n    },\n    async send() {\n      if (!this.destination) {\n        this.error = 'You have to select a destination'\n        return\n      }\n      const timeout = dayjs().add(4, 'hour')\n      const txMsgs = [\n        {\n          typeUrl: '/ibc.applications.transfer.v1.MsgTransfer',\n          value: {\n            sourcePort: this.destination.port_id,\n            sourceChannel: this.destination.channel_id,\n            token: coin(Number(getUnitAmount(this.amount, this.denomTrace.base_denom)), this.denomTrace.base_denom),\n            sender: this.address,\n            receiver: this.recipient,\n            // timeoutHeight: {\n            //   revisionNumber: '0',\n            //   revisionHeight: '0',\n            // },\n            timeoutTimestamp: String(timeout.utc().valueOf() * 1000000),\n          },\n        },\n        // {\n        //   type: 'cosmos-sdk/MsgTransfer',\n        //   value: {\n        //     source_port: this.destination.port_id,\n        //     source_channel: this.destination.channel_id,\n        //     token: coin(Number(getUnitAmount(this.amount, this.denomTrace.base_denom)), this.denomTrace.base_denom),\n        //     sender: this.address,\n        //     receiver: this.recipient,\n        //     timeout_height: {\n        //       revision_number: String(this.timeoutHeight.revision_number),\n        //       revision_height: String(200 + parseInt(this.timeoutHeight.revision_height, 10)),\n        //     },\n        //     timeout_timestamp: '0',\n        //   },\n        // },\n      ]\n\n      const txFee = {\n        amount: [\n          {\n            amount: this.fee,\n            denom: this.feeDenom,\n          },\n        ],\n        gas: this.gas,\n      }\n\n      const signerData = {\n        accountNumber: this.accountNumber,\n        sequence: this.sequence,\n        chainId: this.chainId,\n      }\n\n      sign(\n        this.wallet,\n        this.chainId,\n        this.address,\n        txMsgs,\n        txFee,\n        this.memo,\n        signerData,\n      ).then(bodyBytes => {\n        this.$http.broadcastTx(bodyBytes, this.selectedChain).then(res => {\n          setLocalTxHistory({ op: 'ibc_sender', hash: res.txhash, time: new Date() })\n          this.$bvModal.hide('trading-deposte-window')\n          this.$toast({\n            component: ToastificationContent,\n            props: {\n              title: 'Transaction sent!',\n              icon: 'EditIcon',\n              variant: 'success',\n            },\n          })\n        }).catch(e => {\n          this.error = e\n        })\n      }).catch(e => {\n        this.error = e\n      })\n      // Send tokens\n      // return client.sendTokens(this.address, this.recipient, sendCoins, this.memo)\n      // return\n    },\n  },\n}\n</script>\n<style lang=\"scss\">\n@import '@core/scss/vue/libs/vue-select.scss';\n</style>\n","/home/imstaked/explorer/src/@core/layouts/layout-vertical/components/vertical-nav-menu/VerticalNavMenu.vue",[],[],"/home/imstaked/explorer/src/@core/layouts/components/app-navbar/components/SearchBar.vue",[],[],"/home/imstaked/explorer/src/@core/layouts/components/app-navbar/AppNavbarVerticalLayout.vue",["794"],[],"<template>\n  <div class=\"navbar-container d-flex content align-items-center\">\n\n    <!-- Nav Menu Toggler -->\n    <ul class=\"nav navbar-nav d-xl-none\">\n      <li class=\"nav-item\">\n        <b-link\n          class=\"nav-link\"\n          @click=\"toggleVerticalMenuActive\"\n        >\n          <feather-icon\n            icon=\"MenuIcon\"\n            size=\"21\"\n          />\n        </b-link>\n      </li>\n    </ul>\n\n    <!-- Left Col -->\n    <div class=\"bookmark-wrapper align-items-center flex-grow-1 d-none d-lg-flex\" />\n\n    <b-navbar-nav class=\"nav align-items-center ml-auto\">\n      <dark-Toggler class=\"d-none d-lg-block\" />\n      <search-bar />\n      <notification-dropdown />\n    </b-navbar-nav>\n  </div>\n</template>\n\n<script>\nimport {\n  BLink, BNavbarNav,\n} from 'bootstrap-vue'\nimport SearchBar from './components/SearchBar.vue'\nimport DarkToggler from './components/DarkToggler.vue'\n\nexport default {\n  components: {\n    BLink,\n\n    // Navbar Components\n    BNavbarNav,\n    SearchBar,\n    DarkToggler,\n  },\n  props: {\n    toggleVerticalMenuActive: {\n      type: Function,\n      default: () => {},\n    },\n  },\n}\n</script>\n","/home/imstaked/explorer/src/@core/layouts/layout-vertical/useVerticalLayout.js",[],[],"/home/imstaked/explorer/src/@core/layouts/layout-vertical/mixinVerticalLayout.js",[],[],"/home/imstaked/explorer/src/@core/layouts/components/layout-content-renderer/LayoutContentRendererDefault.vue",[],[],"/home/imstaked/explorer/src/@core/layouts/components/layout-content-renderer/LayoutContentRendererLeft.vue",[],[],"/home/imstaked/explorer/src/@core/layouts/components/layout-content-renderer/LayoutContentRendererLeftDetached.vue",[],[],"/home/imstaked/explorer/src/@core/layouts/layout-vertical/components/vertical-nav-menu/components/vertical-nav-menu-items/VerticalNavMenuItems.vue",[],[],"/home/imstaked/explorer/src/@core/layouts/layout-vertical/components/vertical-nav-menu/useVerticalNavMenu.js",[],[],"/home/imstaked/explorer/src/@core/layouts/components/AppBreadcrumb.vue",[],[],"/home/imstaked/explorer/src/@core/utils/filter.js",[],[],"/home/imstaked/explorer/src/navigation/vertical/index.js",[],[],"/home/imstaked/explorer/src/@core/utils/utils.js",[],["795","796","797","798"],"/home/imstaked/explorer/src/@core/layouts/modules.js",[],[],"/home/imstaked/explorer/src/@core/layouts/layout-vertical/components/vertical-nav-menu/components/vertical-nav-menu-link/VerticalNavMenuLink.vue",[],[],"/home/imstaked/explorer/src/@core/layouts/layout-vertical/components/vertical-nav-menu/components/vertical-nav-menu-group/VerticalNavMenuGroup.vue",[],[],"/home/imstaked/explorer/src/@core/layouts/utils.js",[],[],"/home/imstaked/explorer/src/@core/layouts/layout-vertical/components/vertical-nav-menu/components/vertical-nav-menu-header/index.js",[],[],"/home/imstaked/explorer/src/@core/layouts/layout-vertical/components/vertical-nav-menu/components/vertical-nav-menu-link/mixinVerticalNavMenuLink.js",[],[],"/home/imstaked/explorer/src/@core/layouts/layout-vertical/components/vertical-nav-menu/components/vertical-nav-menu-link/useVerticalNavMenuLink.js",[],[],"/home/imstaked/explorer/src/@core/layouts/layout-vertical/components/vertical-nav-menu/components/vertical-nav-menu-group/useVerticalNavMenuGroup.js",[],["799","800","801","802","803","804","805","806","807","808","809"],"/home/imstaked/explorer/src/@core/layouts/layout-vertical/components/vertical-nav-menu/components/vertical-nav-menu-group/mixinVerticalNavMenuGroup.js",[],[],"/home/imstaked/explorer/src/@core/libs/acl/index.js",[],[],"/home/imstaked/explorer/src/@core/libs/i18n/index.js",[],[],"/home/imstaked/explorer/src/@core/libs/acl/utils.js",[],["810"],"/home/imstaked/explorer/src/@core/libs/i18n/utils.js",[],[],{"ruleId":"811","severity":2,"message":"812","line":78,"column":51,"nodeType":"813","messageId":"814","endLine":78,"endColumn":54,"suppressions":"815"},{"ruleId":"811","severity":2,"message":"812","line":86,"column":56,"nodeType":"813","messageId":"814","endLine":86,"endColumn":59,"suppressions":"816"},{"ruleId":"817","severity":2,"message":"818","line":227,"column":11,"nodeType":"819","messageId":"820","endLine":227,"endColumn":31,"suppressions":"821"},{"ruleId":"817","severity":2,"message":"818","line":229,"column":11,"nodeType":"819","messageId":"820","endLine":229,"endColumn":30,"suppressions":"822"},{"ruleId":"817","severity":2,"message":"818","line":231,"column":11,"nodeType":"819","messageId":"820","endLine":231,"endColumn":29,"suppressions":"823"},{"ruleId":"817","severity":2,"message":"818","line":238,"column":15,"nodeType":"819","messageId":"820","endLine":238,"endColumn":33,"suppressions":"824"},{"ruleId":"817","severity":2,"message":"818","line":242,"column":15,"nodeType":"819","messageId":"820","endLine":242,"endColumn":32,"suppressions":"825"},{"ruleId":"826","severity":1,"message":"827","line":384,"column":20,"nodeType":"828","messageId":"829","endLine":384,"endColumn":22},{"ruleId":"830","severity":1,"message":"831","line":427,"column":8,"nodeType":"832","messageId":"833","endLine":427,"endColumn":16},{"ruleId":"826","severity":1,"message":"827","line":227,"column":28,"nodeType":"828","messageId":"829","endLine":227,"endColumn":30},{"ruleId":"817","severity":2,"message":"818","line":594,"column":17,"nodeType":"819","messageId":"820","endLine":594,"endColumn":44,"suppressions":"834"},{"ruleId":"817","severity":2,"message":"818","line":603,"column":17,"nodeType":"819","messageId":"820","endLine":603,"endColumn":44,"suppressions":"835"},{"ruleId":"817","severity":2,"message":"818","line":615,"column":17,"nodeType":"819","messageId":"820","endLine":615,"endColumn":44,"suppressions":"836"},{"ruleId":"826","severity":1,"message":"837","line":441,"column":13,"nodeType":"838","messageId":"829","endLine":442,"endColumn":4},{"ruleId":"826","severity":1,"message":"827","line":479,"column":28,"nodeType":"828","messageId":"829","endLine":479,"endColumn":30},{"ruleId":"839","severity":2,"message":"840","line":153,"column":16,"nodeType":"841","messageId":"829","endLine":153,"endColumn":70,"suppressions":"842"},{"ruleId":"843","severity":2,"message":"844","line":160,"column":9,"nodeType":"819","endLine":160,"endColumn":83,"suppressions":"845"},{"ruleId":"839","severity":2,"message":"840","line":160,"column":24,"nodeType":"841","messageId":"829","endLine":160,"endColumn":83,"suppressions":"846"},{"ruleId":"839","severity":2,"message":"840","line":55,"column":16,"nodeType":"841","messageId":"829","endLine":55,"endColumn":58,"suppressions":"847"},{"ruleId":"843","severity":2,"message":"844","line":62,"column":9,"nodeType":"819","endLine":62,"endColumn":71,"suppressions":"848"},{"ruleId":"839","severity":2,"message":"840","line":62,"column":24,"nodeType":"841","messageId":"829","endLine":62,"endColumn":71,"suppressions":"849"},{"ruleId":"839","severity":2,"message":"840","line":55,"column":16,"nodeType":"841","messageId":"829","endLine":55,"endColumn":58,"suppressions":"850"},{"ruleId":"843","severity":2,"message":"844","line":62,"column":9,"nodeType":"819","endLine":62,"endColumn":71,"suppressions":"851"},{"ruleId":"839","severity":2,"message":"840","line":62,"column":24,"nodeType":"841","messageId":"829","endLine":62,"endColumn":71,"suppressions":"852"},{"ruleId":"853","severity":2,"message":"854","line":425,"column":17,"nodeType":"832","messageId":"855","endLine":425,"endColumn":23,"suppressions":"856"},{"ruleId":"857","severity":1,"message":"858","line":138,"column":31,"nodeType":"859","messageId":"860","endLine":138,"endColumn":50},{"ruleId":"826","severity":1,"message":"861","line":106,"column":22,"nodeType":"828","messageId":"829","endLine":106,"endColumn":24},{"ruleId":"826","severity":1,"message":"861","line":42,"column":22,"nodeType":"828","messageId":"829","endLine":42,"endColumn":24},{"ruleId":"826","severity":1,"message":"861","line":73,"column":22,"nodeType":"828","messageId":"829","endLine":73,"endColumn":24},{"ruleId":"853","severity":2,"message":"854","line":151,"column":33,"nodeType":"832","messageId":"855","endLine":151,"endColumn":39,"suppressions":"862"},{"ruleId":"853","severity":2,"message":"854","line":154,"column":31,"nodeType":"832","messageId":"855","endLine":154,"endColumn":37,"suppressions":"863"},{"ruleId":"817","severity":2,"message":"818","line":407,"column":11,"nodeType":"819","messageId":"820","endLine":407,"endColumn":48,"suppressions":"864"},{"ruleId":"826","severity":1,"message":"861","line":112,"column":22,"nodeType":"828","messageId":"829","endLine":112,"endColumn":24},{"ruleId":"865","severity":2,"message":"866","line":20,"column":8,"nodeType":"867","messageId":"868","endLine":20,"endColumn":9,"fix":"869","suppressions":"870"},{"ruleId":"865","severity":2,"message":"871","line":20,"column":91,"nodeType":"867","messageId":"872","endLine":20,"endColumn":92,"fix":"873","suppressions":"874"},{"ruleId":"817","severity":2,"message":"818","line":31,"column":5,"nodeType":"819","messageId":"820","endLine":31,"endColumn":50,"suppressions":"875"},{"ruleId":"876","severity":2,"message":"877","line":29,"column":58,"nodeType":"878","messageId":"879","endLine":29,"endColumn":59,"suggestions":"880","suppressions":"881"},{"ruleId":"876","severity":2,"message":"882","line":29,"column":60,"nodeType":"878","messageId":"879","endLine":29,"endColumn":61,"suggestions":"883","suppressions":"884"},{"ruleId":"876","severity":2,"message":"877","line":29,"column":80,"nodeType":"878","messageId":"879","endLine":29,"endColumn":81,"suggestions":"885","suppressions":"886"},{"ruleId":"826","severity":1,"message":"861","line":227,"column":22,"nodeType":"828","messageId":"829","endLine":227,"endColumn":24},{"ruleId":"887","severity":1,"message":"888","line":98,"column":9,"nodeType":"889","messageId":"890","endLine":100,"endColumn":17},{"ruleId":"891","severity":2,"message":"892","line":220,"column":1,"nodeType":"893","messageId":"894","endLine":222,"endColumn":3,"fix":"895","suppressions":"896"},{"ruleId":"897","severity":2,"message":"898","line":220,"column":5,"nodeType":"899","messageId":"900","endLine":222,"endColumn":2,"suppressions":"901"},{"ruleId":"897","severity":2,"message":"898","line":220,"column":32,"nodeType":"902","messageId":"900","endLine":220,"endColumn":52,"suppressions":"903"},{"ruleId":"904","severity":1,"message":"905","line":220,"column":57,"nodeType":"838","messageId":"906","endLine":220,"endColumn":66,"suppressions":"907"},{"ruleId":"908","severity":2,"message":"909","line":221,"column":1,"nodeType":"910","messageId":"911","endLine":221,"endColumn":5,"fix":"912","suppressions":"913"},{"ruleId":"897","severity":2,"message":"914","line":221,"column":20,"nodeType":"902","messageId":"900","endLine":221,"endColumn":34,"suppressions":"915"},{"ruleId":"916","severity":2,"message":"917","line":221,"column":46,"nodeType":"918","messageId":"919","endLine":221,"endColumn":60,"fix":"920","suppressions":"921"},{"ruleId":"922","severity":2,"message":"923","line":221,"column":46,"nodeType":"878","messageId":"924","endLine":221,"endColumn":55,"fix":"925","suppressions":"926"},{"ruleId":"927","severity":2,"message":"928","line":221,"column":62,"nodeType":"929","messageId":"930","endLine":221,"endColumn":63,"fix":"931","suppressions":"932"},{"ruleId":"927","severity":2,"message":"928","line":222,"column":2,"nodeType":"893","messageId":"930","endLine":222,"endColumn":3,"fix":"933","suppressions":"934"},{"ruleId":"935","severity":2,"message":"936","line":223,"column":1,"nodeType":null,"fix":"937","suppressions":"938"},{"ruleId":"939","severity":2,"message":"940","line":223,"column":32,"nodeType":"841","messageId":"941","endLine":223,"endColumn":47,"suppressions":"942"},{"ruleId":"922","severity":2,"message":"923","line":223,"column":40,"nodeType":"878","messageId":"924","endLine":223,"endColumn":46,"fix":"943","suppressions":"944"},{"ruleId":"927","severity":2,"message":"928","line":223,"column":48,"nodeType":"893","messageId":"930","endLine":223,"endColumn":49,"fix":"945","suppressions":"946"},{"ruleId":"947","severity":2,"message":"948","line":224,"column":1,"nodeType":"867","endLine":226,"endColumn":23,"fix":"949","suppressions":"950"},{"ruleId":"947","severity":2,"message":"948","line":227,"column":1,"nodeType":"867","endLine":227,"endColumn":72,"fix":"951","suppressions":"952"},{"ruleId":"947","severity":2,"message":"948","line":228,"column":1,"nodeType":"867","endLine":230,"endColumn":22,"fix":"953","suppressions":"954"},{"ruleId":"947","severity":2,"message":"948","line":231,"column":1,"nodeType":"867","endLine":231,"endColumn":43,"fix":"955","suppressions":"956"},{"ruleId":"947","severity":2,"message":"948","line":232,"column":1,"nodeType":"867","endLine":232,"endColumn":94,"fix":"957","suppressions":"958"},{"ruleId":"947","severity":2,"message":"948","line":233,"column":1,"nodeType":"867","endLine":233,"endColumn":50,"fix":"959","suppressions":"960"},{"ruleId":"826","severity":1,"message":"861","line":259,"column":22,"nodeType":"828","messageId":"829","endLine":259,"endColumn":24,"suppressions":"961"},{"ruleId":"826","severity":1,"message":"962","line":355,"column":23,"nodeType":"838","messageId":"829","endLine":356,"endColumn":6,"suppressions":"963"},{"ruleId":"839","severity":2,"message":"840","line":47,"column":14,"nodeType":"841","messageId":"829","endLine":47,"endColumn":53,"suppressions":"964"},{"ruleId":"839","severity":2,"message":"840","line":52,"column":14,"nodeType":"841","messageId":"829","endLine":52,"endColumn":53,"suppressions":"965"},{"ruleId":"839","severity":2,"message":"840","line":57,"column":14,"nodeType":"841","messageId":"829","endLine":57,"endColumn":53,"suppressions":"966"},{"ruleId":"839","severity":2,"message":"840","line":62,"column":14,"nodeType":"841","messageId":"829","endLine":62,"endColumn":53,"suppressions":"967"},{"ruleId":"817","severity":2,"message":"818","line":280,"column":7,"nodeType":"819","messageId":"820","endLine":280,"endColumn":52,"suppressions":"968"},{"ruleId":"826","severity":1,"message":"861","line":279,"column":22,"nodeType":"828","messageId":"829","endLine":279,"endColumn":24},{"ruleId":"826","severity":1,"message":"861","line":49,"column":22,"nodeType":"828","messageId":"829","endLine":49,"endColumn":24},{"ruleId":"865","severity":2,"message":"866","line":3,"column":8,"nodeType":"867","messageId":"868","endLine":3,"endColumn":9,"fix":"969","suppressions":"970"},{"ruleId":"865","severity":2,"message":"871","line":3,"column":54,"nodeType":"867","messageId":"872","endLine":3,"endColumn":55,"fix":"971","suppressions":"972"},{"ruleId":"973","severity":2,"message":"974","line":11,"column":40,"nodeType":"975","messageId":"976","endLine":11,"endColumn":42,"fix":"977","suppressions":"978"},{"ruleId":"973","severity":2,"message":"974","line":12,"column":42,"nodeType":"975","messageId":"976","endLine":12,"endColumn":44,"fix":"979","suppressions":"980"},{"ruleId":"865","severity":2,"message":"866","line":2,"column":8,"nodeType":"867","messageId":"868","endLine":2,"endColumn":9,"fix":"981","suppressions":"982"},{"ruleId":"865","severity":2,"message":"871","line":2,"column":39,"nodeType":"867","messageId":"872","endLine":2,"endColumn":40,"fix":"983","suppressions":"984"},{"ruleId":"985","severity":2,"message":"986","line":16,"column":10,"nodeType":"832","messageId":"987","endLine":16,"endColumn":24,"suppressions":"988"},{"ruleId":"985","severity":2,"message":"989","line":17,"column":16,"nodeType":"832","messageId":"987","endLine":17,"endColumn":22,"suppressions":"990"},{"ruleId":"985","severity":2,"message":"991","line":18,"column":24,"nodeType":"832","messageId":"987","endLine":18,"endColumn":32,"suppressions":"992"},{"ruleId":"985","severity":2,"message":"989","line":18,"column":40,"nodeType":"832","messageId":"987","endLine":18,"endColumn":46,"suppressions":"993"},{"ruleId":"985","severity":2,"message":"989","line":34,"column":7,"nodeType":"832","messageId":"987","endLine":34,"endColumn":13,"suppressions":"994"},{"ruleId":"985","severity":2,"message":"991","line":34,"column":29,"nodeType":"832","messageId":"987","endLine":34,"endColumn":37,"suppressions":"995"},{"ruleId":"985","severity":2,"message":"991","line":49,"column":41,"nodeType":"832","messageId":"987","endLine":49,"endColumn":49,"suppressions":"996"},{"ruleId":"985","severity":2,"message":"997","line":52,"column":12,"nodeType":"832","messageId":"987","endLine":52,"endColumn":25,"suppressions":"998"},{"ruleId":"985","severity":2,"message":"989","line":52,"column":41,"nodeType":"832","messageId":"987","endLine":52,"endColumn":47,"suppressions":"999"},{"ruleId":"1000","severity":2,"message":"1001","line":84,"column":62,"nodeType":"828","messageId":"1002","endLine":88,"endColumn":4,"fix":"1003","suppressions":"1004"},"no-plusplus","Unary operator '++' used.","UpdateExpression","unexpectedUnaryOp",["1005"],["1006"],"prefer-destructuring","Use array destructuring.","AssignmentExpression","preferDestructuring",["1007"],["1008"],["1009"],["1010"],["1011"],"@typescript-eslint/no-empty-function","Unexpected empty arrow function.","ArrowFunctionExpression","unexpected","@typescript-eslint/no-unused-vars","'chainAPI' is defined but never used.","Identifier","unusedVar",["1012"],["1013"],["1014"],"Unexpected empty method 'mounted'.","FunctionExpression","global-require","Unexpected require().","CallExpression",["1015"],"vue/no-side-effects-in-computed-properties","Unexpected side effect in \"imgUrl\" computed property.",["1016"],["1017"],["1018"],["1019"],["1020"],["1021"],["1022"],["1023"],"no-undef","'BigInt' is not defined.","undef",["1024"],"no-unsafe-optional-chaining","Unsafe arithmetic operation on optional chaining. It can result in NaN.","ChainExpression","unsafeArithmetic","Unexpected empty method 'default'.",["1025"],["1026"],["1027"],"object-curly-newline","Expected a line break after this opening brace.","ImportDeclaration","expectedLinebreakAfterOpeningBrace",{"range":"1028","text":"1029"},["1030"],"Expected a line break before this closing brace.","expectedLinebreakBeforeClosingBrace",{"range":"1031","text":"1029"},["1032"],["1033"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["1034","1035"],["1036"],"Unnecessary escape character: \\-.",["1037","1038"],["1039"],["1040","1041"],["1042"],"vuejs-accessibility/label-has-for","Form label must have an associated control.","VElement","default","no-var","Unexpected var, use let or const instead.","VariableDeclaration","unexpectedVar",{"range":"1043","text":"1044"},["1045"],"no-underscore-dangle","Unexpected dangling '_' in '__importDefault'.","VariableDeclarator","unexpectedUnderscore",["1046"],"MemberExpression",["1047"],"func-names","Unexpected unnamed function.","unnamed",["1048"],"indent","Expected indentation of 2 spaces but found 4.","Keyword","wrongIndentation",{"range":"1049","text":"1050"},["1051"],"Unexpected dangling '_' in '__esModule'.",["1052"],"quote-props","Unnecessarily quoted property 'default' found.","Property","unnecessarilyQuotedProperty",{"range":"1053","text":"890"},["1054"],"quotes","Strings must use singlequote.","wrongQuotes",{"range":"1053","text":"1055"},["1056"],"semi","Extra semicolon.","ReturnStatement","extraSemi",{"range":"1057","text":"1058"},["1059"],{"range":"1060","text":"1061"},["1062"],"import/newline-after-import","Expected 1 empty line after require statement not followed by another require.",{"range":"1063","text":"1029"},["1064"],"@typescript-eslint/no-var-requires","Require statement not part of import statement.","noVarReqs",["1065"],{"range":"1066","text":"1067"},["1068"],{"range":"1069","text":"1070"},["1071"],"import/first","Import in body of module; reorder to top.",{"range":"1072","text":"1073"},["1074"],{"range":"1075","text":"1073"},["1076"],{"range":"1077","text":"1073"},["1078"],{"range":"1079","text":"1073"},["1080"],{"range":"1081","text":"1073"},["1082"],{"range":"1083","text":"1084"},["1085"],["1086"],"Unexpected empty method 'formatAvailable'.",["1087"],["1088"],["1089"],["1090"],["1091"],["1092"],{"range":"1093","text":"1029"},["1094"],{"range":"1095","text":"1029"},["1096"],"operator-linebreak","'&&' should be placed at the beginning of the line.","LogicalExpression","operatorAtBeginning",{"range":"1097","text":"1098"},["1099"],{"range":"1100","text":"1098"},["1101"],{"range":"1102","text":"1029"},["1103"],{"range":"1104","text":"1029"},["1105"],"no-use-before-define","'isMouseHovered' was used before it was defined.","usedBeforeDefined",["1106"],"'isOpen' was used before it was defined.",["1107"],"'isActive' was used before it was defined.",["1108"],["1109"],["1110"],["1111"],["1112"],"'doesHaveChild' was used before it was defined.",["1113"],["1114"],"arrow-body-style","Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>`.","unexpectedSingleBlock",{"range":"1115","text":"1116"},["1117"],{"kind":"1118","justification":"1073"},{"kind":"1118","justification":"1073"},{"kind":"1118","justification":"1073"},{"kind":"1118","justification":"1073"},{"kind":"1118","justification":"1073"},{"kind":"1118","justification":"1073"},{"kind":"1118","justification":"1073"},{"kind":"1118","justification":"1073"},{"kind":"1118","justification":"1073"},{"kind":"1118","justification":"1073"},{"kind":"1118","justification":"1073"},{"kind":"1118","justification":"1073"},{"kind":"1118","justification":"1073"},{"kind":"1118","justification":"1073"},{"kind":"1118","justification":"1073"},{"kind":"1118","justification":"1073"},{"kind":"1118","justification":"1073"},{"kind":"1118","justification":"1073"},{"kind":"1118","justification":"1073"},{"kind":"1118","justification":"1073"},{"kind":"1118","justification":"1073"},{"kind":"1118","justification":"1073"},{"kind":"1118","justification":"1073"},[564,564],"\n",{"kind":"1118","justification":"1073"},[646,646],{"kind":"1118","justification":"1073"},{"kind":"1118","justification":"1073"},{"messageId":"1119","fix":"1120","desc":"1121"},{"messageId":"1122","fix":"1123","desc":"1124"},{"kind":"1118","justification":"1073"},{"messageId":"1119","fix":"1125","desc":"1121"},{"messageId":"1122","fix":"1126","desc":"1124"},{"kind":"1118","justification":"1073"},{"messageId":"1119","fix":"1127","desc":"1121"},{"messageId":"1122","fix":"1128","desc":"1124"},{"kind":"1118","justification":"1073"},[5617,5620],"let",{"kind":"1118","justification":"1073"},{"kind":"1118","justification":"1073"},{"kind":"1118","justification":"1073"},{"kind":"1118","justification":"1073"},[5690,5694],"  ",{"kind":"1118","justification":"1073"},{"kind":"1118","justification":"1073"},[5735,5744],{"kind":"1118","justification":"1073"},"'default'",{"kind":"1118","justification":"1073"},[5750,5754],"}\n}",{"kind":"1118","justification":"1073"},[5753,5761],"}\nconst",{"kind":"1118","justification":"1073"},[5804,5804],{"kind":"1118","justification":"1073"},{"kind":"1118","justification":"1073"},[5795,5801],"'long'",{"kind":"1118","justification":"1073"},[5802,5811],")\nimport",{"kind":"1118","justification":"1073"},[5957,5957],"",{"kind":"1118","justification":"1073"},[6029,6029],{"kind":"1118","justification":"1073"},[6133,6133],{"kind":"1118","justification":"1073"},[6176,6176],{"kind":"1118","justification":"1073"},[6270,6270],{"kind":"1118","justification":"1073"},[0,6320],"<template>\n  <div>\n    <b-card\n      bg-variant=\"light-secondary\"\n      text-variant=\"black\"\n    >\n      <div class=\"d-flex justify-content-between\">\n        <span class=\"font-weight-bolder\">Balance </span>\n        <span>\n          <feather-icon\n            v-if=\"currentDenom.startsWith('ibc/')\"\n            v-b-modal.trading-deposte-window\n            icon=\"PlusSquareIcon\"\n            class=\"text-primary\"\n          />\n          <small> {{ available }} {{ type === 0 ? target: base }} </small>\n        </span>\n      </div>\n      <div class=\"d-flex justify-content-between mt-1\">\n        <span class=\"font-weight-bolder\">Price</span>\n        <span>{{ price }}&nbsp;<small class=\"text-muted mx-10\">{{ target }} ≈</small>&nbsp;1&nbsp;<small class=\"text-muted mx-10\"> {{ base }}</small>&nbsp;</span>\n      </div>\n      <div class=\"d-flex justify-content-between mt-1\">\n        <span class=\"font-weight-bolder\">Swap Fee</span>\n        <span>{{ fee }}%</span>\n      </div>\n    </b-card>\n    <b-form-group>\n      <div>\n        <span>Quantity</span>\n      </div>\n      <b-input-group class=\"input-group-merge\">\n        <b-form-input\n          id=\"amount\"\n          v-model=\"amount\"\n          type=\"number\"\n          placeholder=\"Quantity\"\n          @change=\"changeAmount()\"\n        />\n        <b-input-group-append is-text>\n          {{ base }}\n        </b-input-group-append>\n      </b-input-group>\n      <b-alert\n        variant=\"danger\"\n        :show=\"type === 1 && amount > available\"\n      >\n        <div class=\"alert-body\">\n          Insufficient available amount\n        </div>\n      </b-alert>\n    </b-form-group>\n    <b-form-group>\n      <div class=\"d-flex justify-content-between\">\n        <span>Volume</span>\n        <span>\n          <small\n            v-if=\"localPrice > 0\"\n            class=\"text-muted mr-1\"\n          >≈${{ localPrice }}</small>\n          <feather-icon\n            id=\"popover-trading-setting\"\n            icon=\"SettingsIcon\"\n            class=\"text-primary\"\n          />\n        </span>\n      </div>\n      <b-input-group class=\"input-group-merge\">\n        <b-form-input\n          id=\"total\"\n          v-model=\"total\"\n          type=\"number\"\n          placeholder=\"Volume\"\n          @change=\"changeTotal()\"\n        />\n        <b-input-group-append is-text>\n          {{ target }}\n        </b-input-group-append>\n      </b-input-group>\n      <b-alert\n        variant=\"danger\"\n        :show=\"type === 0 && total > available\"\n      >\n        <div class=\"alert-body\">\n          Insufficient available amount\n        </div>\n      </b-alert>\n    </b-form-group>\n    <b-popover\n      target=\"popover-trading-setting\"\n      placement=\"left\"\n      triggers=\"hover\"\n      boundary=\"scrollParent\"\n      boundary-padding=\"0\"\n      class=\"px-0\"\n    >\n      <b-form-group>\n        <label for=\"slip\">\n          Slippage Tolerance\n        </label>\n        <div id=\"slip\">\n          <b-form-radio\n            v-model=\"slippage\"\n            value=\"0.01\"\n            button\n            button-variant=\"outline-secondary\"\n          >\n            1%\n          </b-form-radio>\n          <b-form-radio\n            v-model=\"slippage\"\n            value=\"0.025\"\n            button\n            block\n            class=\"px-1\"\n            button-variant=\"outline-secondary\"\n          >\n            2.5%\n          </b-form-radio>\n          <b-form-radio\n            v-model=\"slippage\"\n            value=\"0.05\"\n            button\n            button-variant=\"outline-secondary\"\n          >\n            5%\n          </b-form-radio>\n        </div>\n      </b-form-group>\n    </b-popover>\n    <b-form-group\n      label=\"Signer\"\n      label-for=\"wallet\"\n    >\n      <b-form-radio-group\n        v-model=\"wallet\"\n        inline\n      >\n        <b-form-radio\n          v-model=\"wallet\"\n          name=\"wallet\"\n          value=\"keplr\"\n        >\n          <small>Keplr</small>\n        </b-form-radio>\n        <b-form-radio\n          v-model=\"wallet\"\n          name=\"wallet\"\n          value=\"ledgerUSB\"\n        >\n          <small>Ledger(USB)</small>\n        </b-form-radio>\n        <b-form-radio\n          v-model=\"wallet\"\n          name=\"wallet\"\n          value=\"ledgerBle\"\n          class=\"mr-0\"\n        >\n          <small>Ledger(BLE)</small>\n        </b-form-radio>\n      </b-form-radio-group>\n    </b-form-group>\n    <b-form-group>\n      <b-button\n        v-if=\"address\"\n        block\n        :disabled=\"type === 0? total > available : amount > available\"\n        :variant=\"type === 0 ? 'success': 'danger'\"\n        @click=\"sendTx()\"\n      >\n        {{ type === 0 ? `Buy ${ base }` : `Sell ${ base }` }}\n      </b-button>\n      <b-button\n        v-else\n        to=\"/wallet/import\"\n        block\n        variant=\"primary\"\n      >\n        Connect Wallet\n      </b-button>\n\n    </b-form-group>\n    <b-alert\n      variant=\"danger\"\n      :show=\"dismissCountDown\"\n      dismissible\n      @dismissed=\"dismissCountDown=0\"\n      @dismiss-count-down=\"countDownChanged\"\n    >\n      <div class=\"alert-body\">\n        {{ error }}\n      </div>\n    </b-alert>\n    <b-alert\n      class=\"mt-2\"\n      variant=\"danger\"\n      show\n    >\n      <div class=\"alert-heading\">\n        Note\n      </div>\n      <div class=\"alert-body\">\n        Trading is not available. will open soon.\n        <div class=\"d-none\">\n          If the execution price exceeds the {{ slippage * 100 }}% slippage protection, your order will be automatically cancelled\n        </div>\n      </div>\n    </b-alert>\n\n    <deposite-window\n      :symbol=\"type === 0 ? target: base\"\n      :denom-trace=\"denomTrace[currentDenom]\"\n    />\n\n  </div>\n</template>\n\n<script>\n/* eslint-disable */\nimport {\n  BFormInput, BButton, BAlert, BFormGroup, BInputGroup, BInputGroupAppend, BFormRadio, BFormRadioGroup, BCard, BPopover,\n} from 'bootstrap-vue'\nimport FeatherIcon from '@core/components/feather-icon/FeatherIcon.vue'\nimport {\n  formatTokenAmount, getLocalAccounts, percent, setLocalTxHistory, sign,\n} from '@/libs/utils'\nimport { getPairName } from '@/libs/osmos'\nimport ToastificationContent from '@core/components/toastification/ToastificationContent.vue'\nimport DepositeWindow from './DepositeWindow.vue'\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nconst long_1 = __importDefault(require(\"long\"));",{"kind":"1118","justification":"1073"},{"kind":"1118","justification":"1073"},{"kind":"1118","justification":"1073"},{"kind":"1118","justification":"1073"},{"kind":"1118","justification":"1073"},{"kind":"1118","justification":"1073"},{"kind":"1118","justification":"1073"},{"kind":"1118","justification":"1073"},[87,87],{"kind":"1118","justification":"1073"},[132,132],{"kind":"1118","justification":"1073"},[388,396],"\n    && ",{"kind":"1118","justification":"1073"},[432,440],{"kind":"1118","justification":"1073"},[57,57],{"kind":"1118","justification":"1073"},[87,87],{"kind":"1118","justification":"1073"},{"kind":"1118","justification":"1073"},{"kind":"1118","justification":"1073"},{"kind":"1118","justification":"1073"},{"kind":"1118","justification":"1073"},{"kind":"1118","justification":"1073"},{"kind":"1118","justification":"1073"},{"kind":"1118","justification":"1073"},{"kind":"1118","justification":"1073"},{"kind":"1118","justification":"1073"},[3479,3681],"\n    // If it have children => It's grp\n    // Call ACL function based on grp/link\n     grpOrItem.children ? canViewHorizontalNavMenuGroup(grpOrItem) : canViewHorizontalNavMenuLink(grpOrItem)\n  ",{"kind":"1118","justification":"1073"},"directive","removeEscape",{"range":"1129","text":"1073"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"1130","text":"1131"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"1132","text":"1073"},{"range":"1133","text":"1131"},{"range":"1134","text":"1073"},{"range":"1135","text":"1131"},[851,852],[851,851],"\\",[853,854],[853,853],[873,874],[873,873]]